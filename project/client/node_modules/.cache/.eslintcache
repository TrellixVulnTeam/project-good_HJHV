[{"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\index.js":"1","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\reportWebVitals.js":"2","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\App.js":"3","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\reducers\\index.js":"4","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\StateCounter.js":"5","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\auction\\Auction.js":"6","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\homePage\\Home.js":"7","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\new auction\\AuctionInformation.js":"8","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\new auction\\NewAuction.js":"9","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\main\\About.js":"10","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\main\\ContactForm.js":"11","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\YourProfile.js":"12","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\new auction\\ContinueNewAuction.js":"13","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\auction manager\\AuctionManagerTable.js":"14","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\UserTable.js":"15","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\UpdateDetails.js":"16","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\new auction\\uploading products\\UploadingProducts.js":"17","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\new auction\\uploading products\\AddProduct.js":"18","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\reducers\\userState.js":"19","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\reducers\\siteManagerState.js":"20","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\reducers\\mainState.js":"21","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\reducers\\newAuctionState.js":"22","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\reducers\\auctionManagerState.js":"23","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\reducers\\currentAuctionState.js":"24","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\auction\\CurrentAuction.js":"25","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\main\\SmallFooter.js":"26","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\auction\\Cart.js":"27","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\new auction\\OrganizationInformation.js":"28","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\new auction\\FinalStepModal.js":"29","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\actionTypes.js":"30","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\OrderOptions.js":"31","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\auction manager\\DisApprovalModal.js":"32","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\auction manager\\ApprovalModal.js":"33","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\auction manager\\DeleteModal.js":"34","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\actions\\auctionManager.js":"35","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\main\\SmallHeader.js":"36","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\homePage\\AuctionsList.js":"37","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\homePage\\HomeFooter.js":"38","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\homePage\\HomeHeader.js":"39","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\new auction\\auction pricing\\AuctionPricing.js":"40","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\utils\\newAuctionUtils.js":"41","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\utils\\userUtils.js":"42","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\actions\\currentAuction.js":"43","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\actions\\user.js":"44","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\actions\\newAuction.js":"45","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\new auction\\uploading products\\ProducstList.js":"46","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\auction manager\\AuctionStatistics.js":"47","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\auction\\Timer.js":"48","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\utils\\auctionUtils.js":"49","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\OrderDetails.js":"50","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\actions\\home.js":"51","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\auction\\ProductList.js":"52","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\models\\auction.js":"53","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\models\\user.js":"54","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\new auction\\auction pricing\\PackagesList.js":"55","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\new auction\\auction pricing\\AddPackage.js":"56","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\actions\\signUp.js":"57","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\ProfileButton.js":"58","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\Login.js":"59","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\homePage\\OneAuction.js":"60","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\utils\\orderUtils.js":"61","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\auction\\Product.js":"62","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\SignIn.js":"63","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\SignUp.js":"64","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\LoginGoogle.js":"65","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\actions\\signIn.js":"66","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\models\\order.js":"67","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\auction manager\\AuctionResults.js":"68","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\auction manager\\EditAuction.js":"69","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\auction\\ProductInCart.js":"70","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\site manager\\SiteManagerTable.js":"71","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\auction manager\\EditProducts.js":"72","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\auction manager\\EditModal.js":"73","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\auction manager\\EditAouctionDetails.js":"74","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\auction manager\\EditProductList.js":"75"},{"size":1063,"mtime":1630187158122,"results":"76","hashOfConfig":"77"},{"size":362,"mtime":499162500000,"results":"78","hashOfConfig":"77"},{"size":1549,"mtime":1635345204601,"results":"79","hashOfConfig":"77"},{"size":330,"mtime":1630187158202,"results":"80","hashOfConfig":"77"},{"size":838,"mtime":1633452344767,"results":"81","hashOfConfig":"77"},{"size":1432,"mtime":1635280393337,"results":"82","hashOfConfig":"77"},{"size":626,"mtime":1635250538304,"results":"83","hashOfConfig":"77"},{"size":3711,"mtime":1633452344789,"results":"84","hashOfConfig":"77"},{"size":8476,"mtime":1635235210771,"results":"85","hashOfConfig":"77"},{"size":4904,"mtime":1635284788357,"results":"86","hashOfConfig":"77"},{"size":8063,"mtime":1635251851656,"results":"87","hashOfConfig":"77"},{"size":1449,"mtime":1635251851688,"results":"88","hashOfConfig":"77"},{"size":962,"mtime":1635287429213,"results":"89","hashOfConfig":"77"},{"size":8555,"mtime":1634460983419,"results":"90","hashOfConfig":"77"},{"size":4643,"mtime":1635251851673,"results":"91","hashOfConfig":"77"},{"size":8258,"mtime":1635278145679,"results":"92","hashOfConfig":"77"},{"size":583,"mtime":1635287349060,"results":"93","hashOfConfig":"77"},{"size":2017,"mtime":1635287023064,"results":"94","hashOfConfig":"77"},{"size":3242,"mtime":1635235210806,"results":"95","hashOfConfig":"77"},{"size":286,"mtime":1630333801529,"results":"96","hashOfConfig":"77"},{"size":568,"mtime":1635251851763,"results":"97","hashOfConfig":"77"},{"size":6934,"mtime":1635287197232,"results":"98","hashOfConfig":"77"},{"size":2078,"mtime":1630333801508,"results":"99","hashOfConfig":"77"},{"size":901,"mtime":1635280527148,"results":"100","hashOfConfig":"77"},{"size":1237,"mtime":1635251851597,"results":"101","hashOfConfig":"77"},{"size":804,"mtime":1631469572716,"results":"102","hashOfConfig":"77"},{"size":1938,"mtime":1635283276692,"results":"103","hashOfConfig":"77"},{"size":1444,"mtime":1635286387370,"results":"104","hashOfConfig":"77"},{"size":3515,"mtime":1635251851659,"results":"105","hashOfConfig":"77"},{"size":4127,"mtime":1635251851747,"results":"106","hashOfConfig":"77"},{"size":3955,"mtime":1634754498063,"results":"107","hashOfConfig":"77"},{"size":2286,"mtime":1630187158114,"results":"108","hashOfConfig":"77"},{"size":2252,"mtime":1630187158110,"results":"109","hashOfConfig":"77"},{"size":2164,"mtime":1630187158113,"results":"110","hashOfConfig":"77"},{"size":3658,"mtime":1635251851750,"results":"111","hashOfConfig":"77"},{"size":990,"mtime":1635278145660,"results":"112","hashOfConfig":"77"},{"size":1279,"mtime":1635278145651,"results":"113","hashOfConfig":"77"},{"size":1835,"mtime":1635278145654,"results":"114","hashOfConfig":"77"},{"size":2667,"mtime":1635278145657,"results":"115","hashOfConfig":"77"},{"size":1134,"mtime":1635285415611,"results":"116","hashOfConfig":"77"},{"size":1908,"mtime":1634134327269,"results":"117","hashOfConfig":"77"},{"size":533,"mtime":1635251851770,"results":"118","hashOfConfig":"77"},{"size":1255,"mtime":1635278145683,"results":"119","hashOfConfig":"77"},{"size":2672,"mtime":1635283622660,"results":"120","hashOfConfig":"77"},{"size":5494,"mtime":1635251851756,"results":"121","hashOfConfig":"77"},{"size":999,"mtime":1635285986828,"results":"122","hashOfConfig":"77"},{"size":449,"mtime":1630187158112,"results":"123","hashOfConfig":"77"},{"size":1016,"mtime":1631469572698,"results":"124","hashOfConfig":"77"},{"size":967,"mtime":1635251851768,"results":"125","hashOfConfig":"77"},{"size":3491,"mtime":1634754461987,"results":"126","hashOfConfig":"77"},{"size":418,"mtime":1635251851753,"results":"127","hashOfConfig":"77"},{"size":868,"mtime":1635278145647,"results":"128","hashOfConfig":"77"},{"size":749,"mtime":1630336455491,"results":"129","hashOfConfig":"77"},{"size":411,"mtime":1635103896612,"results":"130","hashOfConfig":"77"},{"size":1098,"mtime":1635285644609,"results":"131","hashOfConfig":"77"},{"size":3220,"mtime":1635251851661,"results":"132","hashOfConfig":"77"},{"size":573,"mtime":1635251851759,"results":"133","hashOfConfig":"77"},{"size":2404,"mtime":1635278145672,"results":"134","hashOfConfig":"77"},{"size":1671,"mtime":1635278145667,"results":"135","hashOfConfig":"77"},{"size":3268,"mtime":1635278145658,"results":"136","hashOfConfig":"77"},{"size":158,"mtime":1634484172637,"results":"137","hashOfConfig":"77"},{"size":2513,"mtime":1635283812962,"results":"138","hashOfConfig":"77"},{"size":4380,"mtime":1635344525128,"results":"139","hashOfConfig":"77"},{"size":8665,"mtime":1635278145677,"results":"140","hashOfConfig":"77"},{"size":1026,"mtime":1635344489056,"results":"141","hashOfConfig":"77"},{"size":673,"mtime":1635278145685,"results":"142","hashOfConfig":"77"},{"size":512,"mtime":1633452344816,"results":"143","hashOfConfig":"77"},{"size":468,"mtime":1634131169231,"results":"144","hashOfConfig":"77"},{"size":4089,"mtime":1630187158115,"results":"145","hashOfConfig":"77"},{"size":2894,"mtime":1635278145645,"results":"146","hashOfConfig":"77"},{"size":5063,"mtime":1630187158119,"results":"147","hashOfConfig":"77"},{"size":351,"mtime":1630187158117,"results":"148","hashOfConfig":"77"},{"size":2176,"mtime":1630187158116,"results":"149","hashOfConfig":"77"},{"size":433,"mtime":1635251851728,"results":"150","hashOfConfig":"77"},{"size":227,"mtime":1630187158116,"results":"151","hashOfConfig":"77"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"104uaml",{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"154"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"154"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"154"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"154"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"154"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"154"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"154"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"154"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"154"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"154"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"154"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"203","usedDeprecatedRules":"154"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"154"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"154"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"212","usedDeprecatedRules":"154"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"154"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"154"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"154"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"154"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"154"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"154"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"154"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"154"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"154"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"154"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"154"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"154"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"154"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"154"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"154"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"154"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"154"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"154"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"154"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"154"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"154"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"154"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"154"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"154"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"154"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"154"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":2,"source":"323","usedDeprecatedRules":"154"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"154"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"154"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\index.js",[],["348","349"],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\reportWebVitals.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\App.js",["350","351","352","353","354","355","356"],"import 'semantic-ui-css/semantic.min.css'\r\nimport Home from './homePage/Home';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auction from '../components/auction/Auction';\r\nimport NewAuction from '../components/new auction/NewAuction';\r\nimport About from './main/About'\r\nimport YourProfile from './user/YourProfile';\r\nimport UpdateDetails from './user/UpdateDetails';\r\nimport React from \"react\";\r\nimport StateCounter from './StateCounter'\r\nimport AuctionInformation from './new auction/AuctionInformation';\r\nimport UserTable from './user/UserTable';\r\nimport AuctionManagerTable from './user/auction manager/AuctionManagerTable';\r\nimport ContactForm from './main/ContactForm';\r\nimport ContinueNewAuction from './new auction/ContinueNewAuction';\r\nimport UploadingProducts from './new auction/uploading products/UploadingProducts';\r\nimport AddProduct from './new auction/uploading products/AddProduct';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    <Router>\r\n      <Switch>\r\n\r\n        <Route path={`/auction`} ><Auction /></Route>\r\n        <Route path={`/home`}><Home /></Route>\r\n        <Route path={`/new_auction`}><NewAuction /></Route>\r\n        <Route path={`/continueNewAuction`}><ContinueNewAuction /></Route>\r\n        <Route path={`/about`}><About /></Route>\r\n        <Route path={`/your_profile`}><YourProfile /></Route>\r\n        <Route path={`/update_your_details`}><UpdateDetails /></Route>\r\n        <Route path={`/`}><Home />    </Route>\r\n\r\n      </Switch>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\reducers\\index.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\StateCounter.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\auction\\Auction.js",["357","358"],"import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Route, useRouteMatch, Switch } from 'react-router-dom'\r\nimport { updateCurrentAuctionState } from '../../store/actions/currentAuction'\r\nimport CurrentAuction from '../auction/CurrentAuction';\r\nimport Cart from '../auction/Cart';\r\nimport './Auction.scss';\r\nimport SmallHeader from '../main/SmallHeader';\r\nimport SmallFooter from '../main/SmallFooter';\r\n\r\nconst Auction = (props) => {\r\n    // const { url, path } = useRouteMatch();\r\n\r\n    return (<>\r\n        <SmallHeader />\r\n        {/* <header className=\"auction_header\">\r\n             log-out להוסיף כפתור התנתקות\r\n            <Link to={\"/home\"}>  <div className=\"logo\" ></div></Link>\r\n        </header> */}\r\n        \r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n\r\n        <Switch>\r\n            <Route path={`/auction/cart`}><Cart /></Route>\r\n            <Route path={`/auction`}><CurrentAuction /></Route>\r\n            <Route path={`/`}><CurrentAuction /></Route>\r\n            {/* למחוק את הראוט האחרון הוא רק זמני */}\r\n        </Switch>\r\n        {/* <footer className=\"auction_footer\"></footer> */}\r\n        <SmallFooter />\r\n    </>\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n}\r\nexport default connect(mapStateToProps, {  updateCurrentAuctionState })(Auction);\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\homePage\\Home.js",["359"],"import { connect } from \"react-redux\";\r\nimport './home.scss';\r\nimport AuctionsList from './AuctionsList';\r\nimport HomeFooter from './HomeFooter';\r\nimport HomeHeader from './HomeHeader';\r\nimport React, { useEffect } from \"react\";\r\n\r\nconst Home = (props) => {\r\n  return (<>\r\n    <HomeHeader />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <AuctionsList />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <HomeFooter />\r\n  </>\r\n  );\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n  };\r\n}\r\nexport default connect(mapStateToProps, {})(Home);","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\new auction\\AuctionInformation.js",["360","361","362","363"],"import React, { useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './NewAuction.scss'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '40%',\r\n            // outerHeight:'70%'\r\n        },\r\n    },\r\n}));\r\n\r\nconst AuctionInformation = (props) => {\r\n\r\n    const classes = useStyles();\r\n    const [selectedDate1, setSelectedDate1] = React.useState(new Date());//lotery\r\n    const [selectedDate2, setSelectedDate2] = React.useState(new Date());//start\r\n    const [selectedDate3, setSelectedDate3] = React.useState(new Date());//end\r\n    const terms = \"\"//קובץ תקנון\r\n\r\n    const handleDateChange1 = (date) => { setSelectedDate1(date) };//lotery\r\n    const handleDateChange2 = (date) => { setSelectedDate2(date) };//start\r\n    const handleDateChange3 = (date) => { setSelectedDate3(date) };//end\r\n    const name = \"\";\r\n    return (<form className={classes.root} noValidate autoComplete=\"off\">\r\n        <h1>Auction information</h1>\r\n        <input type=\"text\" placeholder=\"newAuction.name\" onChange={(e) => { name = e.target.value; }} />\r\n        <br /> <MuiPickersUtilsProvider utils={DateFnsUtils} className=\"auctionInformationDate\">\r\n            <KeyboardDatePicker\r\n                disableToolbar\r\n                variant=\"inline\"\r\n                format=\"dd/MM/yyyy\"\r\n                margin=\"normal\"\r\n                id=\"date-picker-inline\"\r\n                label=\"Date of the lottery\"\r\n                value={selectedDate1}\r\n                onChange={handleDateChange1}\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                }}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n        <br /> <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n                disableToolbar\r\n                variant=\"inline\"\r\n                format=\"dd/MM/yyyy\"\r\n                margin=\"normal\"\r\n                id=\"date-picker-inline\"\r\n                label=\"Registration start date\"\r\n                value={selectedDate2}\r\n                onChange={handleDateChange2}\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                }}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n        <br />   <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n                disableToolbar\r\n                variant=\"inline\"\r\n                format=\"dd/MM/yyyy\"\r\n                margin=\"normal\"\r\n                id=\"date-picker-inline\"\r\n                label=\"Registration end date\"\r\n                value={selectedDate3}\r\n                onChange={handleDateChange3}\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                }}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n        <br />    <Button\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n            className={classes.button}\r\n            startIcon={<CloudUploadIcon />}\r\n        // onChange={(e) => terms=e.target.value}\r\n        >\r\n            Upload Terms\r\n        </Button>\r\n    </form>);\r\n    //submit!!!!\r\n    //לבדוק שהתאריכים תקינים\r\n    //סיום ההרשמה ולפני ביצוע ההגרלות\r\n}\r\n\r\nexport default connect(null, { })(AuctionInformation);","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\new auction\\NewAuction.js",["364","365","366","367","368"],"//TODO: בכל פעם שמתחיל מכירה חדשה למחוק את מה שיש סלוקלסטורג של מכירה חדשה\r\n//localStorage.removeItem(\"newAuction\");\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport AuctionInformation from './AuctionInformation';\r\nimport OrganizationInformation from './OrganizationInformation';\r\nimport AuctionPricing from './auction pricing/AuctionPricing';\r\nimport UploadingProducts from './uploading products/UploadingProducts';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './NewAuction.scss';\r\nimport FinalStep from './FinalStepModal';\r\n// import { updateNewAuctioinState } from '../../store/actions/newAuction'\r\n// import { setNewAuctionItemsInLS } from '../../utils/newAuctionUtils'\r\nimport { beManager } from \"../../utils/newAuctionUtils\";\r\n\r\nimport { useStorageReducer } from 'react-storage-hooks';\r\nimport { newAuctionReducer as reducer, initialState as newAuctionState } from '../../store/reducers/newAuctionState.js'\r\nimport * as actionTypes from '../../store/actionTypes'\r\n\r\nimport { savePackages, saveAuctionInformation, saveProducts, saveOrganizationInformation } from '../../utils/newAuctionUtils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst getSteps = () => {\r\n    return ['Purchase packages', 'Adding products', 'Organization details', 'Chinese Auction Details'];\r\n}\r\nconst getStepContent = (step) => {\r\n    switch (step) {\r\n        case 0:\r\n            return <AuctionPricing />;\r\n        case 1:\r\n            return <UploadingProducts />;\r\n        case 2:\r\n            return <OrganizationInformation />;\r\n        case 3:\r\n            return <AuctionInformation />;\r\n        default:\r\n            return 'Unknown step';\r\n    }\r\n}\r\nconst NewAuction = (props) => {\r\n\r\n    const [state, dispatch, writeError] = useStorageReducer(\r\n        localStorage,\r\n        'newAuction',//שם המשתנה בלוקל סטורג והוא יכיל את כל הסטייט\r\n        reducer,//רדיוסר\r\n        newAuctionState //מה הסטייט שיהיה בלוקל סטור' וזה גם הסטייט הכללי\r\n    );\r\n    useEffect(() => {\r\n        //TODO: האם זה אמור להיות כאן או באחד הכפתורים קודם, אולי לא מכיר את הדיספאצ\r\n        //ומה עם שגיאה 400?\r\n        //לשנות את הסטטוס שלו למנהל  \r\n        // beManager(state.currentUser._id).then(succ => dispatch({ type: actionTypes.SET_CURRENT_USER, payload: succ.data }))\r\n    }, [])\r\n\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const [skipped, setSkipped] = React.useState(new Set());\r\n    const steps = getSteps();\r\n\r\n    const isStepOptional = (step) => { return true };//האם השלב הזה אופציונלי\r\n\r\n    const isStepSkipped = (step) => { return skipped.has(step); };\r\n\r\n    const handleNext = () => {\r\n        switch (activeStep) {\r\n            case 0:\r\n                return savePackages(state._id, state.packagesList);//שמירת תמחור מכירה במסד נתונים;\r\n            case 1:\r\n                return saveProducts(state._id, state.productsList);//שמירת העלאת מוצרים במסד נתונים;\r\n            case 2: {\r\n                let organizationDetails = {\r\n                    organizationName: state.organizationName,\r\n                    organizationTxt: state.organizationTxt,\r\n                    organizationPhotos: state.organizationPhotos\r\n                };\r\n                return saveOrganizationInformation(state._id, organizationDetails);//שמירת מידע על הארגון במסד נתונים; \r\n            }\r\n            case 3: {\r\n                let auctionDetails = {\r\n                    dateOfLottery: state.dateOfLottery,\r\n                    registrationEndDate: state.registrationEndDate,\r\n                    registrationStartDate: state.registrationStartDate\r\n                };\r\n                return saveAuctionInformation(state._id, auctionDetails);//שמירת מידע על המכירה במסד נתונים;\r\n\r\n            }\r\n        }\r\n        let newSkipped = skipped;\r\n        if (isStepSkipped(activeStep)) {\r\n            newSkipped = new Set(newSkipped.values());\r\n            newSkipped.delete(activeStep);\r\n        }\r\n        //מתי לעשות את השמירה של המכירה \r\n        //או חלקים ממנה (מוצרים/חבילות וכו' בנפרד),\r\n        // בכל לחיצה כאן, או כשעוזב את הקומפוננטה הזו? או אחר\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n        setSkipped(newSkipped);\r\n    };\r\n\r\n    const handleBack = () => { setActiveStep((prevActiveStep) => prevActiveStep - 1); };\r\n\r\n    const handleSkip = () => {\r\n        if (!isStepOptional(activeStep)) {\r\n            throw new Error(\"You can't skip a step that isn't optional.\");\r\n        }\r\n\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n        setSkipped((prevSkipped) => {\r\n            const newSkipped = new Set(prevSkipped.values());\r\n            newSkipped.add(activeStep);\r\n            return newSkipped;\r\n        });\r\n    };\r\n\r\n    const handleReset = () => { setActiveStep(0); };\r\n\r\n    return (<>\r\n\r\n\r\n        <br />\r\n        <br />\r\n        <center><h1>Build Your own chinese auction</h1></center>\r\n        <br />\r\n        <div className={classes.root}>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={label} {...stepProps}>\r\n                            <StepLabel {...labelProps}>{label}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n            <div>\r\n                {activeStep === steps.length ? (\r\n                    <div>\r\n                        <Typography className={classes.instructions}>{state.finalStepModalIsOpen ? <FinalStep /> : null}</Typography>\r\n                        <Button onClick={handleBack} className={classes.button}>Back</Button>\r\n                        <Button onClick={handleReset} className={classes.button}>Reset</Button>\r\n                    </div>\r\n                ) : (\r\n                        <div>\r\n                            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n                            <div>\r\n                                {activeStep > 0 ? <Button onClick={handleBack} className={classes.button}>Back</Button> : null}\r\n                                {isStepOptional(activeStep) && (\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={handleSkip} className={classes.button}>Skip</Button>\r\n                                )}\r\n\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={handleNext}\r\n                                    className={classes.button}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Save'}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n        <footer id=\"new_auction_footer\"></footer>\r\n\r\n    </>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // isOpen: state.auction.finalStepModalIsOpen,\r\n\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { /*updateNewAuctioinState, setNewAuctionItemsInLS*/ })(NewAuction);\r\n// לעשות עיצוב לחלק שאנו נמצאות בו עכשיו","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\main\\About.js",["369","370"],"import { connect } from \"react-redux\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport './main.scss';\r\nimport p from '../../img/logo.webp';\r\nimport video from '../../img/vvv.mp4';\r\nimport img from '../../img/logo_blue_orange.webp';\r\nimport { Link } from 'react-router-dom';\r\nimport { setLogin } from '../../store/actions/home';\r\nimport SmallFooter from \"./SmallFooter\";\r\nimport SmallHeader from \"./SmallHeader\";\r\nimport ContactForm from \"./ContactForm\";\r\nimport{resetNewAuctionState} from \"../../store/actions/newAuction\";\r\n\r\nconst About = (props) => {\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", changeHeader)\r\n    return () => {\r\n      window.removeEventListener('scroll', changeHeader);\r\n    };\r\n  }, []);\r\n  const changeHeader = () => {\r\n    let s = document.getElementById(\"small-header\");\r\n    if (s != null) {\r\n      let height = 5\r\n      if (document.body.scrollTop > height || document.documentElement.scrollTop > height) {\r\n        if (s != null) s.style.top = \"0\";\r\n      } else {\r\n        if (s != null) s.style.top = \"-500px\";\r\n      }\r\n    }\r\n  }\r\n  return (<>\r\n    <SmallHeader />\r\n    <center>\r\n      <img src={p} id=\"logo-about\" />\r\n      {/* <h1>About Us</h1> */}\r\n\r\n      <div id=\"txt-about\">\r\n        <br />\r\n        <h3>  Building Chinese auctions, And a database of all auctions built.\r\n          The site is used by the masses And is gaining momentum among the general public.\r\n          The site has gained worldwide publicity Thanks to its uniqueness.\r\n        </h3>\r\n        <h1>How It Works?</h1>\r\n        <h2>Participation in Chinese Auctions:</h2>\r\n        <p><b>What? </b>Chinese Auction: A raffle that allows you to buy tickets for the prizes you are interested in from the catalog.</p>\r\n        <p><b>Why? </b>The money with which you purchase tickets for auction (s) you would like to continue their operations and reach new destinations.</p>\r\n        <p><b>How? </b>Choose here on the site the sale (s) you would like to participate in, buy tickets for the prizes you would like to win (depending on the packages, if any), fill in the credit card details and you are in!</p>\r\n        <b>Want to get started? </b><Link to={\"/home\"}>Click here!</Link>\r\n        <br />        <br />\r\n        <h2>Build your own Chinese auction:</h2>\r\n        <p><b>What? </b>Build a Chinese auction so that others can buy tickets for the prizes they are interested in from the catalog.</p>\r\n        <p><b>Why? </b>The money with which they purchased the tickets will allow you to continue your operations and reach new destinations.</p>\r\n        <p><b>How? </b>Choose a name for your Chinese auction, set prizes, prices and dates, tell about your organization / purpose. Confirm the auction and the auction in the air!</p>\r\n        <b>Want to get started?</b>\r\n        <Link to={props.currentUser ? \"/new_auction\" : '#'}\r\n         onClick={props.currentUser ? props.resetNewAuctionState()\r\n          :props.setLogin(true)}>Click here!</Link>\r\n      </div>\r\n\r\n      <h2>Building a Chinese auction:</h2>\r\n\r\n      <video id=\"build-video\" width=\"70%\" controls controlsList=\"nodownload\" src={video} poster={img} />\r\n\r\n      <div id=\"all-steps\">\r\n        <div className=\"one-step\">\r\n          <div>\r\n            <p>\r\n              <h3>Purchase packages</h3>\r\n              Determining purchase packages (quantity of tickets at a discounted price).\r\n            </p>\r\n          </div>\r\n          <div style={{ backgroundColor: \"powderblue\" }}>image</div>\r\n        </div>\r\n\r\n        <div className=\"one-step\">\r\n          <div>\r\n            <p>\r\n              <h3>Prizes</h3>\r\n              Choose the prizes for your Chinese auction.\r\n            </p>\r\n          </div>\r\n          <div style={{ backgroundColor: \"powderblue\" }}>image</div>\r\n        </div>\r\n\r\n        <div className=\"one-step\">\r\n          <div>\r\n            <p>\r\n              <h3>Organization details</h3>\r\n              Enter the details of your organization, to which all your Chinese auction proceeds will be transferred.\r\n            </p>\r\n          </div>\r\n          <div style={{ backgroundColor: \"powderblue\" }}>image</div>\r\n        </div>\r\n\r\n        <div className=\"one-step\">\r\n          <div>\r\n            <p>\r\n              <h3>Chinese Auction Details</h3>\r\n              Determining your Chinese auction details.\r\n              Such as, start date, end date, rules, etc.\r\n            </p>\r\n          </div>\r\n          <div style={{ backgroundColor: \"powderblue\" }}>image</div>\r\n        </div>\r\n      </div>\r\n\r\n<ContactForm/>\r\n    </center>\r\n<br/>\r\n<br/>\r\n<br/>\r\n<br/>\r\n<br/>\r\n<br/>\r\n    <SmallFooter />\r\n  </>);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      shoppingCart:state.user.shoppingCart,\r\n      currentUser:state.user.currentUser,\r\n      auction_id:state.currentAuction._id\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {setLogin,resetNewAuctionState})(About);\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\main\\ContactForm.js",["371","372","373","374","375","376","377","378"],"// import React, { useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Input, TextArea, Button } from 'semantic-ui-react';\r\nimport './main.scss';\r\nimport Swal from 'sweetalert2';\r\nimport emailjs from 'emailjs-com';\r\nimport { setShowContactForm } from '../../store/actions/home';\r\nimport { sendContact } from '../../utils/userUtils'\r\n\r\n\r\n\r\n// const ContactForm = (props) => {\r\n//     const handleOnSubmit = (e) => {\r\n//         let details = { name: e.target.name.value, email: e.target.email.value, message: e.target.message.value, subject: e.target.subject.value }\r\n//         sendContact(details);\r\n//     }\r\n//     return (\r\n//         <h1>ggg</h1>\r\n//       /*  <div id='contactDiv'><Form id=\"contactForm\" onSubmit={handleOnSubmit}>\r\n//             <Form.Field\r\n//                 id='form-input-control-last-name'\r\n//                 control={Input}\r\n//                 label='Name'\r\n//                 name='name'\r\n//                 placeholder='Name…'\r\n//                 required\r\n//                 icon='user circle'\r\n//                 iconPosition='left'\r\n//             />\r\n\r\n//             <Form.Field\r\n//                 id='form-input-control-email'\r\n//                 control={Input}\r\n//                 label='Email'\r\n//                 name='email'\r\n//                 placeholder='Email…'\r\n//                 required\r\n//                 icon='mail'\r\n//                 iconPosition='left'\r\n//             />\r\n//             <Form.Field\r\n//                 id='form-input-control-subject'\r\n//                 control={Input}\r\n//                 label='Subject'\r\n//                 name='subject'\r\n//                 placeholder='Subject…'\r\n//                 required\r\n//                 icon='mail'\r\n//                 iconPosition='left'\r\n//             />\r\n//             <Form.Field\r\n//                 id='form-textarea-control-opinion'\r\n//                 control={TextArea}\r\n//                 label='Message'\r\n//                 name='message'\r\n//                 placeholder='Message…'\r\n//                 required\r\n//             />\r\n//             <Button type='submit' color='green'>Submit</Button>\r\n//         </Form>\r\n//         </div >\r\n\r\n\r\n//  */);\r\n\r\n\r\n// }\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n\r\n//     }\r\n// }\r\n\r\n// export default connect(mapStateToProps, { setShowContactForm })(ContactForm);\r\n\r\n\r\n\r\nimport React from \"react\";\r\nimport { MDBRow, MDBCol, MDBCard, MDBCardBody, MDBIcon, MDBBtn, MDBInput } from \"mdbreact\";\r\n\r\nconst ContactForm = () => {\r\n\r\n    const send = (e) => {\r\n        let details = { name: e.target.name.value, email: e.target.email.value, phone: e.target.phone, message: e.target.message.value, subject: e.target.subject.value }\r\n        sendContact(details);\r\n    }\r\n    return (\r\n        <section className=\"contact-section my-5\">\r\n            <MDBCard>\r\n                <MDBRow>\r\n                    <MDBCol lg=\"8\">\r\n                        <MDBCardBody className=\"form\">\r\n                            <h3 className=\"mt-4\">\r\n                                <MDBIcon icon=\"envelope\" className=\"pr-2\" />\r\n                                Write to us:\r\n                            </h3>\r\n\r\n                            <MDBRow>\r\n                                <MDBCol md=\"6\">\r\n                                    <div className=\"md-form mb-0\">\r\n                                        <MDBInput\r\n                                            type=\"text\"\r\n                                            id=\"form-contact-name\"\r\n                                            label=\"Your name\"\r\n                                            name=\"name\"\r\n                                        />\r\n                                    </div>\r\n                                </MDBCol>\r\n                                <MDBCol md=\"6\">\r\n                                    <div className=\"md-form mb-0\">\r\n                                        <MDBInput\r\n                                            type=\"text\"\r\n                                            id=\"form-contact-email\"\r\n                                            label=\"Your email\"\r\n                                            name=\"email\"\r\n                                        />\r\n                                    </div>\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n\r\n                            <MDBRow>\r\n                                <MDBCol md=\"6\">\r\n                                    <div className=\"md-form mb-0\">\r\n                                        <MDBInput\r\n                                            type=\"text\"\r\n                                            id=\"form-contact-phone\"\r\n                                            label=\"Your phone\"\r\n                                            name=\"phone\"\r\n                                        />\r\n                                    </div>\r\n                                </MDBCol>\r\n                                <MDBCol md=\"6\">\r\n                                    <div className=\"md-form mb-0\">\r\n                                        <MDBInput\r\n                                            type=\"text\"\r\n                                            id=\"form-contact-company\"\r\n                                            label=\"Message subject\"\r\n                                            name=\"subject\"\r\n                                        />\r\n                                    </div>\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n\r\n                            <MDBRow>\r\n                                <MDBCol md=\"12\">\r\n                                    <div className=\"md-form mb-0\">\r\n                                        <MDBInput\r\n                                            type=\"textarea\"\r\n                                            id=\"form-contact-message\"\r\n                                            label=\"Your message\"\r\n                                            name=\"message\"\r\n                                        />\r\n                                        {/* <MDBBtn rounded color=\"blue\">\r\n                                            <MDBIcon icon=\"paper-plane\" />\r\n                                        </MDBBtn> */}\r\n                                    </div>\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n\r\n                        </MDBCardBody>\r\n                    </MDBCol>\r\n                    <MDBCol lg=\"4\">\r\n                        <MDBCardBody className=\"contact text-center h-100 white-text\">\r\n                            <h3 className=\"my-4 pb-2\">Contact information</h3>\r\n                            <ul className=\"text-lg-left list-unstyled ml-4\">\r\n                                <li>\r\n                                    <p>\r\n                                        <MDBIcon icon=\"map-marker-alt\" className=\"pr-2\" />\r\n                                        Israel, Bnei brak\r\n                                    </p>\r\n                                </li>\r\n                                <li>\r\n                                    <p>\r\n                                        <MDBIcon icon=\"phone\" className=\"pr-2\" />\r\n                                        +972 315 7271 / +972 316 4376\r\n                                    </p>\r\n                                </li>\r\n                                <li>\r\n                                    <p>\r\n                                        <MDBIcon icon=\"envelope\" className=\"pr-2\" />\r\n                                        chinese.auctions1@gmail.com\r\n                                    </p>\r\n                                </li>\r\n                            </ul>\r\n                            <hr className=\"hr-light my-4\" />\r\n\r\n                        </MDBCardBody>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n                <Button type='submit' onClick={send} color='green'>Send</Button>\r\n            </MDBCard>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ContactForm;","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\YourProfile.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\new auction\\ContinueNewAuction.js",["379","380"],"import React, { useEffect, useState } from 'react';\r\nimport { getAllUnapprovedAuctionsByUser } from '../../store/actions/newAuction';\r\nimport { ThemeContext } from '@emotion/react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ContinueNewAuction = () => {\r\n    const [arr, setArr] = useState([]);//המכירות שלו שעדיין לא אושרו לתצוגה\r\n\r\n    useEffect(() => {\r\n        let userId = JSON.parse(localStorage.getItem(\"currentUser\")).currentUser._id;\r\n        getAllUnapprovedAuctionsByUser(userId).then(succ => {\r\n            console.log(succ.data);\r\n            setArr(succ.data);\r\n        });\r\n\r\n    }, []);\r\n    //TODO\r\n    let setArrInState = () => {\r\n    }\r\n    return (\r\n        <>\r\n            <h1>Continue New Auction</h1>\r\n            {arr.map(a => {\r\n                <Link to={'newAuction'} onClick={() => setArrInState(a._id)}>{a.name}</Link>\r\n            })}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ContinueNewAuction;","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\auction manager\\AuctionManagerTable.js",["381","382","383","384","385","386"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment'\r\nimport Switch from '@material-ui/core/Switch';\r\nimport './auctionManager.scss'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Link } from 'react-router-dom';\r\nimport DeleteModal from './DeleteModal'\r\nimport ApprovalModal from './ApprovalModal'\r\nimport DisApprovalModal from './DisApprovalModal'\r\nimport { getAuctionsArray, setDeleteAuctionModal, setApprovalAuctionModal, setDisApprovalAuctionModal, approvalAuction, setSelectedAuctionToOptions, getAuctionIsDone, isAuctionApproved } from '../../../store/actions/auctionManager'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport edit from '../../../img/icons/edit-file.png'\r\nimport st from '../../../img/icons/stadistics.png'\r\nimport results from '../../../img/icons/results.png'\r\nimport de from '../../../img/icons/dustbin.png'\r\n\r\n\r\n// כרגע כל המכירות עדיין לא התבצעו ולכן אי אפשר לראות תוצאות\r\n\r\nconst useStyles = makeStyles({\r\n    root: { width: '80%', },\r\n    container: { maxHeight: 440, }\r\n});\r\n\r\n\r\nconst AuctionManagerTable = (props) => {\r\n    const columns = [\r\n        { id: 'name', label: 'Name', minWidth: 80 },\r\n        {\r\n            id: 'start_date',\r\n            label: 'Start Date',\r\n            minWidth: 170,\r\n            align: 'right',\r\n            // format: (value) => moment(value).format('D/MM/YYYY')\r\n        },\r\n        {\r\n            id: 'end_date',\r\n            label: 'Lotteries date',\r\n            minWidth: 170,\r\n            align: 'right',\r\n            //  format: (value) =>moment(value).format('D/MM/YYYY')\r\n        },\r\n        {\r\n            id: 'done',\r\n            label: 'Done',\r\n            minWidth: 170,\r\n            align: 'right',\r\n            format: (value) => value.toFixed(2),\r\n        },\r\n        {\r\n            id: 'options',\r\n            label: 'Options',\r\n            minWidth: 170,\r\n            align: 'right',\r\n            format: (value) => value.toFixed(2),\r\n        }\r\n    ];\r\n\r\n    const deleteAuction = (_id) => {\r\n        props.setDeleteAuctionModal(true);\r\n        props.setSelectedAuctionToOptions(_id);\r\n    }\r\n\r\n    const handleChange = (_id) => {\r\n        props.setSelectedAuctionToOptions(_id);\r\n        if (props.isAuctionApproved(_id)) props.setDisApprovalAuctionModal(true);//אם מאושר יציג את ביטול הגרלות\r\n        else props.setApprovalAuctionModal(true);//אם לא מאושר יציג את אישור הגרלות\r\n\r\n    }\r\n\r\n    function createData(name1, name2, start_date, end_date, done, _id) {\r\n        let isApproved = props.isAuctionApproved(_id);\r\n        let isDone = props.getAuctionIsDone(_id);\r\n        let options = <div className=\"optionsBtn\">\r\n            <Switch\r\n                checked={isApproved}\r\n                onChange={(_id) => { handleChange(_id) }}\r\n                name=\"checkedA\"\r\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                title=\"Approval lottery\"\r\n                disabled={isDone}//אם המכירה בוצעה לא ניתן לשנות\r\n            />\r\n            <Link onClick={() => props.setSelectedAuctionToOptions(_id)} to={isDone ? '#' : `/your_profile/edit_auction`}><IconButton disabled={isDone} title=\"Edit\"><img className=\"my_icon\" src={edit} ></img></IconButton></Link>\r\n            <Link onClick={() => props.setSelectedAuctionToOptions(_id)} to={isDone ? `/your_profile/results` : '#'}><IconButton title=\"Results\" disabled={!isDone}><img className=\"my_icon\" src={results} ></img></IconButton></Link>\r\n            <Link onClick={() => props.setSelectedAuctionToOptions(_id)} to={`/your_profile/statistics`}><IconButton title=\"Statistics\"><img className=\"my_icon\" src={st} ></img></IconButton></Link>\r\n            <IconButton onClick={() => deleteAuction(_id)} title=\"Delete\" disabled={isDone} ><img className=\"my_icon\" src={de} ></img></IconButton>\r\n        </div>\r\n        let name = name2 + \" - \" + name1;\r\n        return { name, start_date, end_date, done, options };\r\n    }\r\n\r\n    const rows = [\r\n        // TODO: למה צריך לעשות כאן את המומנט\r\n        createData('לזכות ברגע', 'עזר מציון', moment(new Date(2021, 7, 1)).format('D/MM/YYYY'), moment(new Date(2021, 9, 1)).format('D/MM/YYYY'), 'false', 231321312),\r\n        createData('הרבה נחת', 'סמינר אלקיים', moment(new Date(2021, 8, 1)).format('D/MM/YYYY'), moment(new Date(2021, 10, 1)).format('D/MM/YYYY'), 'false', 3123123132),\r\n        createData('ועל גמילות חסדים', 'בית כנסת חזון עובדיה', moment(new Date(2020, 10, 1)).format('D/MM/YYYY'), moment(new Date(2020, 12, 1)).format('D/MM/YYYY'), 'true', 435435524)\r\n    ];\r\n\r\n    // TODO: sort by date\r\n    /*const rows = props.getAuctionsArray(localStorage.getItem(\"currentUser\")).map((item) => {\r\n        return createData(item.name, item.registrationStartDate, item.lotteriesDate, item.status);\r\n    });*/\r\n\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    return (\r\n        <center>\r\n            {props.show_delete ? <DeleteModal /> : null}\r\n            {props.show_approval ? <ApprovalModal /> : null}\r\n            {props.show_disapproval ? <DisApprovalModal /> : null}\r\n            <h1>Chinese Auction Manager</h1>\r\n            <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead className='auctionManagerTableCls'>\r\n                            <TableRow>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{ minWidth: column.minWidth }}\r\n                                    >\r\n                                        {column.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                                return (\r\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                        {columns.map((column) => {\r\n                                            const value = row[column.id];\r\n                                            return (\r\n                                                <TableCell key={column.id} align={column.align}>\r\n                                                    {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                                </TableCell>\r\n                                            );\r\n                                        })}\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n            </Paper>\r\n\r\n        </center>);\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.user.currentUser,\r\n        show_delete: state.auctionManager.deleteAuctionModal,\r\n        show_approval: state.auctionManager.approvalAuctionModal,\r\n        show_disapproval: state.auctionManager.disapprovalAuctionModal\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { setDeleteAuctionModal, setSelectedAuctionToOptions, setDisApprovalAuctionModal, getAuctionIsDone, setApprovalAuctionModal, approvalAuction, getAuctionsArray, isAuctionApproved })(AuctionManagerTable);\r\n\r\n\r\n\r\n//TODO:\r\n// ? אם המכירה כבר התחילה האם יכול לעשות שינויים\r\n// ? ומה יהיה עם האנשים שכבר הזמינו למוצרים שאותם רוצה לשנות","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\UserTable.js",["387","388","389"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport './yourProfile.scss'\r\nimport { getUserOrdersList } from '../../utils/userUtils'//מחזירה את ההזמנות של המשתמש\r\nimport OrderOptions from './OrderOptions';\r\nimport moment from 'moment'\r\n\r\nconst UserTable = () => {\r\n    const columns = [\r\n        {\r\n            id: 'name',\r\n            label: 'Name',\r\n            minWidth: 170,\r\n            align: 'left',\r\n\r\n        },\r\n        {\r\n            id: 'orderDate',\r\n            label: 'Order Date',\r\n            minWidth: 100,\r\n            align: 'left',\r\n            //    formatDate: (date) => Moment(date).format('DD-MM-YYYY')\r\n            // format: v => v.toLocaleDateString(\"en-US\")\r\n\r\n        },\r\n        {\r\n            id: 'sum',//\r\n            label: 'Sum',//מה יהיה רשום\r\n            minWidth: 170,\r\n            align: 'left',\r\n            format: (value) => value.toLocaleString('en-US'),\r\n        },\r\n        {\r\n            id: 'options',\r\n            label: 'Options',\r\n            minWidth: 170,\r\n            align: 'left',\r\n            format: (value) => value.toLocaleString('en-US'),\r\n        }\r\n    ];\r\n\r\n    const createData = (order) => {\r\n        const options = <OrderOptions order={order} key={order._id} />;//הכפתורים\r\n        const n = order.auctionId.organizationName + \" : \" + order.auctionId.name;\r\n        let d = moment(new Date(order.orderDate)).format('D/MM/YYYY');\r\n        let sum = order.amountToPay;\r\n        return {name: n,orderDate: d, sum:sum, options };\r\n    }\r\n\r\n    const [rows, setRows] = useState([]);\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            width: '60%',\r\n        },\r\n        container: {\r\n            maxHeight: 440,\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        getUserOrdersList(\"611c2f2e18f13934fc07bc27\"/*JSON.parse(localStorage.user).currentUser._id*/).then(succ => {\r\n            let arr = [];\r\n            succ.data.map((o) => {arr.push(createData(o)) });\r\n            setRows(arr);\r\n        });\r\n    }, [])\r\n\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n\r\n    const style1 = { marginLeft: '36vw', marginTop: '4vh' }\r\n    return (\r\n        <Paper className={classes.root} style={style1}>\r\n            <TableContainer className={classes.container} >\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {columns.map((column) => (\r\n                                <TableCell\r\n                                    key={column.id}\r\n                                    align={column.align}\r\n                                    style={{ minWidth: column.minWidth }}\r\n                                >\r\n                                    {column.label}\r\n                                </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                            return (\r\n                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                    {columns.map((column) => {\r\n                                \r\n                                        const value = row[column.id];\r\n                                        return (\r\n                                            <TableCell key={column.id} align={column.align}>\r\n                                               {value}\r\n                                            </TableCell>\r\n                                        );\r\n                                    })}\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Paper>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n    };\r\n}\r\nexport default connect(mapStateToProps, {})(UserTable);\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\UpdateDetails.js",["390","391","392"],"import './yourProfile.scss'\r\nimport { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport { updateUserInDB } from '../../store/actions/user'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n        width: '25ch',\r\n    },\r\n    input_pas_ma: {\r\n        color: '#8e8e95',\r\n        height: '4vh !important',\r\n        background: 'none !important',\r\n        color: '#8e8e95 !important',\r\n        width: '70% !important',\r\n        padding: '0vw !important',\r\n        borderBottomColor: '8e8e95 !important',\r\n        background: 'none !important',\r\n        alignSelf: 'flex-end',\r\n        marginRight: 'auto',\r\n        marginLeft: 'auto'\r\n\r\n    },\r\n    eye: {\r\n        color: '#8e8e95',\r\n\r\n    },\r\n    placeholder_in_form: {\r\n        marginLeft: '3% !important',\r\n        marginBottom: ' -2% !important'\r\n    }\r\n}));\r\n\r\nconst UpdateDetails = (props) => {\r\n\r\n    const classes = useStyles();\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const [values, setValues] = React.useState({\r\n        amount: '',\r\n        password: '',\r\n        weight: '',\r\n        weightRange: '',\r\n        showPassword: false,\r\n    });\r\n\r\n\r\n    //עדכון משתמש קיים\r\n    let password = props.currentUser.password;\r\n    let userName = props.currentUser.userName;\r\n    let email = props.currentUser.email;\r\n    let phone = props.currentUser.phone;\r\n    let city = props.currentUser.city;\r\n    let birthYear = props.currentUser.birthYear;\r\n\r\n    const updateUser = () => {\r\n        let user = props.currentUser;\r\n        user.password = password;\r\n        user.email = email;\r\n        user.phone = phone;\r\n        user.city = city;\r\n        user.name = userName;\r\n        user.birthYear = birthYear;\r\n        props.updateUserInDB(user);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <center>\r\n                <br />\r\n                <h1 id=\"h1_profile\">Update your details</h1>\r\n                <form className={classes.root} autoComplete=\"off\" id=\"update_user_details_form\" >\r\n\r\n                    <FilledInput\r\n                        type={'text'}\r\n                        placeholder=\"Name\"\r\n                        required\r\n                        className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n                        variant=\"filled\"\r\n                        onChange={(e) => { userName = e.target.value }}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <i className=\"user icon\"></i>\r\n                            </InputAdornment>\r\n                        }\r\n                        defaultValue={userName}\r\n                    />\r\n\r\n                    <FilledInput\r\n                        type={'email'}\r\n                        placeholder=\"Email address\"\r\n                        className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n                        variant=\"filled\"\r\n                        required\r\n                        onChange={(e) => { email = e.target.value }}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <i className=\"envelope icon\"></i>\r\n                            </InputAdornment>\r\n                        }\r\n                        defaultValue={email} />\r\n\r\n                    <FilledInput\r\n                        type={'text'}\r\n                        required\r\n                        placeholder='City'\r\n                        className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n                        variant=\"filled\"\r\n                        onChange={(e) => { city = e.target.value }}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <i className=\"map marker alternate icon\"></i>\r\n                            </InputAdornment>\r\n                        }\r\n                        defaultValue={city} />\r\n\r\n                    <FilledInput\r\n                        type={'text'}\r\n                        placeholder=\"Year Of Birth\"\r\n                        required\r\n                        className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n                        variant=\"filled\"\r\n                        onChange={(e) => { birthYear = e.target.value }}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <i className=\"calendar alternate outline icon\"></i>\r\n                            </InputAdornment>\r\n                        }\r\n                        defaultValue={birthYear} />\r\n\r\n                    <FilledInput\r\n                        type={'text'}\r\n                        placeholder=\"Phone Number\"\r\n                        required\r\n                        className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n                        variant=\"filled\"\r\n                        onChange={(e) => { phone = e.target.value }}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <i className=\"mobile alternate icon\"></i>\r\n                            </InputAdornment>\r\n                        }\r\n                        defaultValue={phone} />\r\n\r\n                    <FilledInput\r\n                        type={values.showPassword ? 'text' : 'password'}\r\n                        onChange={handleChange('password')}\r\n                        placeholder=\"Password\"\r\n                        required\r\n                        className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n                        variant=\"filled\"\r\n                        onChange={(e) => { password = e.target.value }}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <i className=\"lock icon\"></i>\r\n                            </InputAdornment>\r\n                        }\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    onClick={handleClickShowPassword}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                    className={classes.eye}\r\n                                >\r\n                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                        defaultValue={password} />\r\n\r\n\r\n                    <br />\r\n\r\n\r\n                    {/* האם לעשות שיעבור לדף הבית */}\r\n                    {/* וגם להודיע לו שזה עודכן */}\r\n                    <Button type=\"button\" variant=\"contained\" id=\"update_details_btn\" onClick={() => { updateUser() }}>Update</Button>\r\n                </form>\r\n\r\n            </center >\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.user.currentUser,\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { updateUserInDB })(UpdateDetails);\r\n\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\new auction\\uploading products\\UploadingProducts.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\new auction\\uploading products\\AddProduct.js",["393","394"],"import React, { useRef, useState, useEffect } from 'react';\r\nimport { addProduct } from \"./../../../store/actions/newAuction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst AddProduct = (props) => {\r\n\r\n    const onChangeHandler = (event) => { setSelectedFile(event.target.files[0]); }\r\n    const onClickHandler = () => {\r\n        const data = new FormData();\r\n        debugger;\r\n        data.append('file', selectedFile);\r\n        newProduct.img = data;\r\n    }\r\n\r\n\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n    let newProduct = { img: null, prodName: \"\", prodDescription: \"\", price: 0, includedInPackages: true };\r\n\r\n    return (props.showSetProduct ? (\r\n        <div className=\"field\">\r\n            <form>\r\n                <input placeholder=\"product name\" type=\"text\" onChange={(e) => newProduct.prodName = e.target.value} required={true} />\r\n                <input placeholder=\"product price\" type=\"text\" onChange={(e) => newProduct.price = e.target.value} required={true} />\r\n                <label>included in packages:</label>\r\n                <input type=\"checkbox\" onChange={(e) => newProduct.includedInPackages = e.target.value} required={true} />\r\n\r\n                <textarea placeholder=\"product description\"\r\n                    onChange={(e) => newProduct.prodDescription = e.target.value} required={true}></textarea>\r\n\r\n\r\n                {/* כפתור להעלאת תמונה */}\r\n                <input type=\"file\" name=\"file\" onChange={(e) => { onChangeHandler(e) }} />\r\n                <button type=\"button\" class=\"btn btn-success btn-block\" onClick={(e) => onClickHandler(e)}>Upload</button>\r\n\r\n\r\n\r\n                <input className=\"positive ui button\" type=\"button\" value=\"Add\" onClick={() => { props.addProduct(newProduct) }} />\r\n            </form>\r\n        </div>\r\n    ) : null)\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        showSetProduct: state.auction.showSetProduct,\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { addProduct })(AddProduct);","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\reducers\\userState.js",["395","396","397","398","399","400"],"import * as actionTypes from '../actionTypes';\r\nexport const initialState = {\r\n    currentUser: null,\r\n    loginIsOpen: false,\r\n    shoppingCart: [    //סל מוצרים\r\n        { cnt: 1, product: { _id: \"111\", name: \"in cart\", image: \"465\", description: \"osjqw jrngu3i\", price: 15 } },\r\n        { cnt: 4, product: { _id: \"222\", name: \"in cart\", image: \"465\", description: \"osjqw jrngu3i\", price: 15 } },\r\n        { cnt: 18, product: { _id: \"333\", name: \"in cart\", image: \"465\", description: \"osjqw jrngu3i\", price: 15 } }\r\n    ],\r\n    auctionsArray: []//מה זה\r\n}\r\nexport const userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        \r\n        case actionTypes.SET_CURRENT_USER:\r\n            {\r\n                    return {\r\n                ...state,\r\n                currentUser: action.payload,\r\n                loginIsOpen: false\r\n            }\r\n            }\r\n        \r\n        case actionTypes.SET_LOGIN:\r\n            return {\r\n                ...state,\r\n                loginIsOpen: action.payload\r\n            }\r\n        case actionTypes.ADD_PRODUCT_TO_CART:\r\n            {\r\n                let _id = action.payload.product._id;\r\n                let cnt = action.payload.cnt;\r\n                let index = state.shoppingCart.findIndex(item => item.product._id == _id);\r\n                let arr = [...state.shoppingCart];\r\n                if (index == -1) arr.push(action.payload);\r\n                else arr[index].cnt += cnt;\r\n                return {\r\n                    ...state,\r\n                    shoppingCart: arr\r\n                }\r\n            }\r\n        case actionTypes.DELETE_PRODUCT_FROM_CART:\r\n            {\r\n                let arr2 = state.shoppingCart.\r\n                    filter(p => p.product._id !== action.payload)\r\n                return {\r\n                    ...state,\r\n                    shoppingCart: arr2\r\n                }\r\n            }\r\n        case actionTypes.SET_CNT_PRODUCT_IN_CART:\r\n            {\r\n                let _id = action.payload._id;\r\n                let cnt = action.payload.cnt;\r\n                let index = state.shoppingCart.findIndex(item => item.product._id == _id);\r\n                let arr = [...state.shoppingCart];\r\n                if (index != -1) arr[index].cnt = cnt;\r\n                return {\r\n                    ...state,\r\n                    shoppingCart: arr\r\n                }\r\n            }\r\n        case actionTypes.SIGN_OUT:\r\n            {\r\n                //יציאת משתמש\r\n                //איפוס נתונים\r\n                return {\r\n                    currentUser: null,\r\n                    loginIsOpen: false,\r\n                    yourProfileIsOpen: false,\r\n                    shoppingCart: null\r\n                }\r\n            }\r\n        case actionTypes.UPDATE_CURRENT_USER: {\r\n            //עידכון משתמש נוכחי\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload,\r\n            }\r\n            }\r\n        case actionTypes.UPDATE_USER_STATE: {\r\n            //עידכון משתמש נוכחי\r\n            return {\r\n                ...state,\r\n                shoppingCart: action.payload,\r\n            }\r\n            }\r\n    }\r\n    return state;\r\n}\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\reducers\\siteManagerState.js",["401"],"import * as actionTypes from '../actionTypes';\r\nconst initialState = {\r\n\r\n}\r\nexport const siteManagerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.UPDATE_SITE_MANAGER_STATE:{\r\n            \r\n        }\r\n    }\r\n\r\n    return state;\r\n}\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\reducers\\mainState.js",["402"],"import * as actionTypes from '../actionTypes';\r\n\r\nexport const initialState = {\r\n    showContactForm: false,\r\n    //  רשימת המכירות באתר שלפנו ישירות מהמסד נתונים\r\n    auctionsList: []\r\n}\r\nexport const mainReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_SHOW_CONTACT_FORM:\r\n            return {\r\n                ...state,\r\n                showContactForm: action.payload\r\n            }\r\n    }\r\n    return state;\r\n}\r\n\r\n// export const allAuctions = initialState.auctionsList;","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\reducers\\newAuctionState.js",["403","404","405"],"import * as actionTypes from '../actionTypes';\r\n\r\nexport const initialState = {\r\n    _id: \"\",\r\n    status: \"\",\r\n    auctionManager: \"\",\r\n    lotteryApproval: false,\r\n    publicationApproval: false,//אישור פרסום באתר\r\n    packagesList: [],//רשימת חבילות purchasePackage\r\n    productsList: [],//רשימ מוצרים\r\n    showSetPackage: false,//האם להציג את קומפוננטת קביעת כמות לחבילה AddPackage\r\n    showSetProduct: true,//האם להציג את קומפוננטת  AddProduct\r\n    dateOfLottery: null,//תאריך ביצוע ההגרלות\r\n    registrationEndDate: null,//תאריך סיום ההרשמה\r\n    registrationStartDate: null,//תאריך תחילת ההרשמה\r\n    organizationName: \"\",\r\n    auctionName: \"\",\r\n    organizationTxt: \"\",\r\n    organizationPhotos: [],\r\n    terms: \"\",\r\n    finalStepModalIsOpen: true//האם להציג את המודל של האישור הסופי\r\n}\r\nexport const newAuctionReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_NEW_AUCTION:\r\n            return {\r\n                ...state,\r\n                status: action.payload.status,\r\n                lotteryApproval: action.payload.lotteryApproval,\r\n                publicationApproval: action.payload.publicationApproval,//אישור פרסום באתר\r\n                packagesList: action.payload.purchasePackage,//רשימת חבילות purchasePackage\r\n                productsList: action.payload.productList,//רשימ מוצרים\r\n                dateOfLottery: action.payload.lotteriesDate,//תאריך ביצוע ההגרלות\r\n                registrationEndDate: action.payload.registrationEndDate,//תאריך סיום ההרשמה\r\n                registrationStartDate: action.payload.registrationStartDate,//תאריך תחילת ההרשמה\r\n                organizationName: action.payload.organizationName,\r\n                auctionName: action.payload.name,\r\n                organizationTxt: action.payload.organizationText,\r\n                organizationPhotos: action.payload.organizationPhotos,\r\n                terms: \"\"\r\n            }\r\n        case actionTypes.SHOW_ADD_PACKAGE: {\r\n            //להציג את הטופס של הוספת חבילה חדשה\r\n            return {\r\n                ...state,\r\n                showSetPackage: true\r\n            }\r\n        }\r\n        case actionTypes.ADD_PACKAGE: {\r\n            //כבר נבדק שלא הוכנה חבילה עם מספר כרטיסים כזה\r\n            let arr = [...state.packagesList, action.payload];\r\n            return {\r\n                ...state,\r\n                packagesList: arr,\r\n                showSetPackage: false\r\n            }\r\n        }\r\n        case actionTypes.DELETE_PACKAGE:\r\n            let arr2 = state.packagesList.\r\n                filter(p => p.qty !== action.payload.qty);\r\n            return {\r\n                ...state,\r\n                packagesList: arr2,\r\n            };\r\n        case actionTypes.SET_ORGANIZATION_NAME:\r\n            return {\r\n                ...state,\r\n                organizationName: action.payload\r\n            }\r\n        case actionTypes.SET_ORGANIZATION_TEXT:\r\n            return {\r\n                ...state,\r\n                organizationTxt: action.payload\r\n            }\r\n        case actionTypes.ADD_PIC_ORGANIZATION:\r\n            let arrrr = [...state.organizationPhotos, action.payload];\r\n            return {\r\n                ...state,\r\n                organizationPhotos: arrrr\r\n            }\r\n        case actionTypes.SET_TERMS:\r\n            return {\r\n                ...state,\r\n                terms: action.payload\r\n            }\r\n        case actionTypes.SET_START_DATE:\r\n            return {\r\n                ...state,\r\n                registrationStartDate: action.payload\r\n            }\r\n        case actionTypes.SET_END_DATE:\r\n            return {\r\n                ...state,\r\n                registrationEndDate: action.payload\r\n            }\r\n        case actionTypes.SET_LOTERY_DATE:\r\n            return {\r\n                ...state,\r\n                dateOfLottery: action.payload\r\n            }\r\n        case actionTypes.SHOW_ADD_PRODUCT: {\r\n            return {\r\n                ...state,\r\n                showSetProduct: action.payload\r\n            }\r\n        }\r\n        case actionTypes.ADD_PRODUCT: {\r\n            let arr = [...state.productsList, action.payload];\r\n            return {\r\n                ...state,\r\n                productsList: arr,\r\n                showSetProduct: false\r\n            }\r\n        }\r\n        //מעדכן את רשימת מוצרים\r\n        case actionTypes.SET_PRODUCTS_LIST: {\r\n            return {\r\n                ...state,\r\n                productsList: action.payload,\r\n            }\r\n        }\r\n        //מעדכן את רשימת החבילות\r\n        case actionTypes.SET_PACKAGES_LIST: {\r\n            return {\r\n                ...state,\r\n                packagesList: action.payload,\r\n            }\r\n        }\r\n        case actionTypes.DELETE_PRODUCT:\r\n            let arr4 = state.productsList.\r\n                filter(p => p !== action.payload);\r\n            return {\r\n                ...state,\r\n                productsList: arr4,\r\n            };\r\n        case actionTypes.SET_FINAL_STEP:\r\n            return {\r\n                ...state,\r\n                finalStepModalIsOpen: action.payload\r\n            }\r\n        case actionTypes.UPDATE_NEW_AUCTION_STATE:\r\n            return {\r\n                ...state,\r\n                packagesList: action.payload.packagesList,\r\n                productsList: action.payload.productsList,\r\n                showSetPackage: action.payload.showSetPackage,\r\n                showSetProduct: action.payload.showSetProduct,\r\n                dateOfLottery: action.payload.dateOfLotery,\r\n                registrationEndDate: action.payload.dateOfEnd,\r\n                registrationStartDate: action.payload.dateOfStart,\r\n                organizationName: action.payload.organizationName,\r\n                organizationTxt: action.payload.organizationText,\r\n                organizationPhotos: action.payload.organizationPhotos,\r\n                terms: action.payload.terms,\r\n            }\r\n        case actionTypes.RESET_NEW_AUCTION_STATE:\r\n            //איפוס הסטייט לאחר בניית מכירה\r\n            return {\r\n                //pricesList: [],\r\n                packagesList: [],\r\n                productsList: [],\r\n                //showSetPrice: false,\r\n                showSetPackage: false,\r\n                showSetProduct: true,\r\n                dateOfLottery: null,\r\n                registrationEndDate: null,\r\n                organizationName: \"\",\r\n                organizationTxt: \"\",\r\n                organizationPhotos: [],\r\n                finalStepModalIsOpen: true,\r\n                terms: \"\"\r\n            }\r\n    }\r\n    return state;\r\n}\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\reducers\\auctionManagerState.js",["406"],"import * as actionTypes from '../actionTypes';\r\nconst initialState = {\r\n    deleteAuctionModal: false,\r\n    editAuctionModal: false,\r\n    approvalAuctionModal: false,\r\n    disapprovalAuctionModal: false,\r\n    selected_auction_to_options: null  //המכירה שנבחרה לצורך מחיקה/עריכה/אישור וזה יהיה רק ע''י מכירה\r\n}\r\nexport const auctionManagerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_EDIT_AUCTION_MODAL: {\r\n            return {\r\n                ...state,\r\n                editAuctionModal: action.payload.b,\r\n                selected_auction_to_options:action.payload._id\r\n            }\r\n        }\r\n        case actionTypes.SET_APPROVAL_AUCTION_MODAL: {\r\n            return {\r\n                ...state,\r\n                approvalAuctionModal: action.payload.b,\r\n                selected_auction_to_options:action.payload._id\r\n            }\r\n        }\r\n         case actionTypes.SET_DISAPPROVAL_AUCTION_MODAL: {\r\n            return {\r\n                ...state,\r\n                disapprovalAuctionModal: action.payload.b,\r\n                selected_auction_to_options:action.payload._id\r\n            }\r\n        }\r\n        case actionTypes.SET_DELETE_AUCTION_MODAL: {\r\n            return {\r\n                ...state,\r\n                deleteAuctionModal: action.payload.b,\r\n                selected_auction_to_options:action.payload._id\r\n            }\r\n        }\r\n        case actionTypes.SET_SELECTED_AUCTION_TO_OPTIONS: {\r\n            return {\r\n                ...state,\r\n                selected_auction_to_options: action.payload\r\n            }\r\n        }\r\n        case actionTypes.UPDATE_AUCTION_MANAGER_STATE: {\r\n            return {\r\n                //זה בנפרד כי בטח נוסיף עוד דברים לעדכון\r\n                ...state,\r\n                selected_auction_to_options: action.payload\r\n            }\r\n        } \r\n    }\r\n\r\n    return state;\r\n}\r\n//כשנעשה סיין-אאוט מהמשתמש\r\n//מה יהא על המשתנים בסטייט הזה","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\reducers\\currentAuctionState.js",["407"],"import * as actionTypes from '../actionTypes';\r\nexport const initialState = {\r\n    registrationEndDate: new Date(2021, 10, 9, 17, 0, 0),//תאריך אחרון להרשמה\r\n    productsList: [],//רשימת מוצרים של מכירה זו\r\n    _id: \"\",\r\n    currentAuction: \"\"\r\n}\r\nexport const currentAuctionReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_CURRENT_AUCTION:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    //קיבלנו לכאן קוד מכירה\r\n                    currentAuction: action.payload\r\n                }\r\n\r\n            }\r\n        case actionTypes.UPDATE_CURRENT_AUCTION_STATE:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    currentAuction: action.payload\r\n                }\r\n\r\n            }\r\n    }\r\n    return state;\r\n}\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\auction\\CurrentAuction.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\main\\SmallFooter.js",["408","409"],"import { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport './main.scss';\r\nimport { setLogin } from '../../store/actions/home';\r\nimport { updateCurrentUser } from '../../store/actions/user'\r\nimport c from '../../img/icons/copy_right.png'\r\n\r\nconst SmallFooter = (props) => {\r\n    return (\r\n        <footer id=\"small-footer\">\r\n            <div id=\"logo_in_footer\" />\r\n            <h4 id=\"made\">\r\n                N.Merahavi and M.Katan. Israel 2021.\r\n                <img id=\"copy-right-icon\" src={c} /> All rights reserved.\r\n            </h4>\r\n        </footer >\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.user.currentUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setLogin, updateCurrentUser })(SmallFooter);\r\n\r\n\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\auction\\Cart.js",["410"],"import ProductInCart from './ProductInCart'\r\nimport { Link } from 'react-router-dom'\r\nimport './Auction.scss';\r\nimport Button from '@material-ui/core/Button';\r\nimport Order from '../../models/order';\r\nimport {addOrderToState} from '../../store/actions/user';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Cart = (props) => {\r\n\r\n    const amountToPay = () => {\r\n        let sum = 0;\r\n        props.shoppingCart.map((item) => { sum = item.cnt * item.product.price });\r\n        return sum;\r\n    }\r\n\r\n    const orderCompletion = () => {\r\n        const newOrder = new Order(\r\n            props.currentUser,\r\n            props.shoppingCart,\r\n            \"\",//אחרי זה להכניס קוד תשלום\r\n            amountToPay(),\r\n            props.auction_id,\r\n            [],//להוסיף בחירת מתנות\r\n            new Date()\r\n        );\r\n\r\n        props.addOrderToState(newOrder);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <br />\r\n            <h1>Cart Component</h1>\r\n            <Link to={'/auction'}>Back</Link>{/*לצאת מהסל, חזרה לכל המוצרים*/}\r\n\r\n            {props.shoppingCart.map((item, index) => {\r\n                return (<ProductInCart key={parseInt(index)} item={item} /*setCount={props.setCnt}*/ />)\r\n            })}\r\n            <Button onClick={orderCompletion}>OK</Button>{/* כפתור אישור פה יועבר כל בסל מהלוקל סטורג למסד נתונים*/}\r\n\r\n            {amountToPay()}\r\n            {/* ולשלוח את הסכום שנדרש לשלם pay apl-פה צריך להתממשק ל */}\r\n        </div>);\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        shoppingCart:state.user.shoppingCart,\r\n        currentUser:state.user.currentUser,\r\n        auction_id:state.currentAuction._id//לבדוק אם הכוונה ב _id של מחירה\r\n    }\r\n  }\r\nexport default connect(mapStateToProps, {addOrderToState})(Cart);\r\n  ","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\new auction\\OrganizationInformation.js",["411"],"import React, { useEffect } from 'react';\r\nimport { setOrganizationPhotos, setOrganizationName, setOrganizationText } from \"../../store/actions/newAuction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst OrganizationInformation = (props) => {\r\n    let organizationName = \"\";\r\n    let organizationText = \"\";\r\n    let organizationPhotos = [];\r\n\r\n    useEffect(() => { // componentWillUnmount\r\n      /*  localStorage.setItem(\"organizationName\",JSON.stringify( organizationName));\r\n        localStorage.setItem(\"organizationText\", JSON.stringify(organizationText));\r\n        localStorage.setItem(\"organizationPhotos\", JSON.stringify(organizationPhotos));*/\r\n    });\r\n\r\n    return (<form>\r\n        {/* <TextField id=\"standard-basic\" label=\"Dccc\" /> */}\r\n\r\n        <label> The organization name</label>\r\n        <input type=\"text\" onChange={(e) => organizationName(e.target.value)} required={true} />\r\n        <area onChange={(e) => organizationText(e.target.value)}>\r\n        </area>\r\n        <label>Upload photos of the organization</label>\r\n        {/* לשמור תמונות שהוא מעלה */}\r\n        <input type=\"button\" value=\"upload photos\" onChange={(e) => { organizationPhotos.push(e.target.value) }} />\r\n    </form>)\r\n}\r\n//submit!!!!\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { setOrganizationPhotos, setOrganizationName, setOrganizationText })(OrganizationInformation);","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\new auction\\FinalStepModal.js",["412","413","414","415","416","417","418","419","420"],"import React, { useEffect } from 'react';\r\nimport './NewAuction.scss';\r\nimport { connect } from \"react-redux\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { setLastModal } from \"../../store/actions/newAuction\"; //האם להציג את מודל אישור סופי\r\nimport { pubicationApproval } from \"../../utils/newAuctionUtils\"\r\nimport { beManager } from \"../../utils/newAuctionUtils\";\r\nimport { createNewAuction } from \"../../utils/auctionUtils\"; //שמירת כל הנתונים במסד\r\nimport { Link } from 'react-router-dom'\r\nimport Auction from '../../models/auction';\r\nimport { useStorageReducer } from 'react-storage-hooks';\r\nimport { newAuctionReducer as reducer, initialState as newAuctionState } from '../../store/reducers/newAuctionState.js'\r\nimport * as actionTypes from '../../store/actionTypes'\r\n\r\nconst FinalStep = (props) => {\r\n    const [state, dispatch, writeError] = useStorageReducer(\r\n        localStorage,\r\n        'newAuction',//שם המשתנה בלוקל סטורג והוא יכיל את כל הסטייט\r\n        reducer,//רדיוסר\r\n        newAuctionState //מה הסטייט שיהיה בלוקל סטור' וזה גם הסטייט הכללי\r\n    );\r\n    const pubicationApproval = () => {//אישור פירסום\r\n        //TODO: אם קיים שדה _idלשאול\r\n        //pubicationApproval עדכון במסד נתונים\r\n        //dispatch עדכון הסטייט\r\n        pubicationApproval(JSON.parse(localStorage.getItem(\"newAuction\"))._id, true).then(succ => {\r\n            dispatch({ type: actionTypes.SET_NEW_AUCTION, payload: (succ.data) });\r\n            //לפנות את הלוכל-סטורג' מנתוני מכירה חדשה\r\n            localStorage.removeItem(\"newAuction\");\r\n            // window.history.pushState({}, null, \"/home\");\r\n            window.location.replace(`http://localhost:3000/home`);//לחזור לדף הבית\r\n        })\r\n    }\r\n\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    return (<div>\r\n        <Dialog\r\n            fullScreen={fullScreen}\r\n            open={true}\r\n            onClick={() => props.setLastModal(false)}\r\n            onClose={() => props.setLastModal(false)}\r\n            aria-labelledby=\"responsive-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"responsive-dialog-title\">{\"Ok\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    Do you want your sale to be displayed on the site?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button variant=\"contained\" size=\"medium\" onClick={props.setLastModal(false)} color=\"primary\">\r\n                    Not yet\r\n                </Button>\r\n                <Link to={'/home'}><Button variant=\"contained\" size=\"medium\" onClick={() => { pubicationApproval(); props.setLastModal(true) }} color=\"primary\">\r\n                    Ok\r\n                </Button></Link>\r\n            </DialogActions>\r\n        </Dialog>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default FinalStep;","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\actionTypes.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\OrderOptions.js",["421","422","423","424","425","426","427","428","429","430"],"import React, { useEffect, useState } from \"react\";\r\nimport Popover from '@mui/material/Popover';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport { getOrderDetails } from '../../utils/orderUtils'\r\nimport { getAuctionWithWinners } from '../../utils/auctionUtils'\r\nimport { getAuctionIsDone } from '../../store/actions/auctionManager';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport results from '../../img/icons/results.png'\r\nimport viewOrder from '../../img/icons/view-order.png'\r\nimport add from '../../img/icons/add-order.png'\r\nimport { Item } from \"semantic-ui-react\";\r\nimport { getInputAdornmentUtilityClass } from \"@mui/material\";\r\nimport OrderDetails from './OrderDetails'\r\nexport default function OrderOptions(props) {\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const handleClick = (event) => { setAnchorEl(event.currentTarget); };\r\n  const handleClose = () => { setAnchorEl(null); };\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  let [productsList, setProductsList] = useState([]);\r\n  let [details, setDetails] = useState([]);\r\n  let [gifts, setGifts] = useState([]);\r\n  let [status, setStatus] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n\r\n    getAuctionWithWinners(/*\"615dd14171ffd48b48935b3a\"*/props.order.auctionId).then(succ => {\r\n      console.log(succ.data.productList)\r\n      setProductsList(succ.data.productList);//רשיתמ מוצרים עם הזוכים של מכירה זו\r\n      setStatus(succ.data.status);\r\n    });\r\n\r\n    setDetails(props.order.orderDetails);//פרטי הזמנה זו\r\n    setGifts(props.order.giftCodes)//מתנות של הזמנה זו\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <OrderDetails details={details} gifts={gifts} />\r\n      <br/>\r\n      <br/>\r\n      <br/>\r\n      <IconButton aria-describedby={id} variant=\"contained\" onClick={handleClick} disabled={status==\"DONE\"}><img title=\"Chiense auction results\" className=\"table_options_icon\" src={results} /></IconButton>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n      >\r\n        <Typography sx={{ p: 2 }}>{\r\n          productsList.map((p, index) => { return <p key={index}>{p.name}:{p.winnerId.confidentiality ? \"Anonymous\" : p.winnerId.userName}</p> }\r\n          )\r\n        }\r\n\r\n        </Typography>\r\n      </Popover>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n    //מה שהפונ של רשימת זוכים מחזירה\r\n/*{\r\n        \"registrationStartDate\": \"2022-01-03T22:00:00.000Z\",\r\n      \"status\": \"NOT_DONE\",\r\n      \"lotteryApproval\": true,\r\n      \"organizationPhotos\": [],\r\n      \"publicationApproval\": true,\r\n      \"_id\": \"615dcef171ffd48b48935b38\",\r\n      \"name\": \"מצילים חיים\",\r\n      \"auctionManager\": \"222\",\r\n      \"lotteriesDate\": \"2025-10-04T21:00:00.000Z\",\r\n      \"registrationEndDate\": \"2025-09-04T21:00:00.000Z\",\r\n      \"purchasePackage\": [],\r\n      \"productList\": [\r\n      {\r\n        \"includedInPackages\": true,\r\n      \"   _id\": \"616c71c3e0eed5f333585a86\",\r\n          \"winnerId\": {\r\n        \"confidentiality\": false,\r\n      \"_id\": \"616b3feeaea25e30d4c2d118\",\r\n      \"userName\": \"Noam\"\r\n  },\r\n  \"name\": \"car\"\r\n},\r\n      {\r\n        \"includedInPackages\": true,\r\n      \"_id\": \"616c72908c4a971c882b8c7a\",\r\n      \"name\": \"gold\",\r\n          \"winnerId\": {\r\n        \"confidentiality\": false,\r\n      \"_id\": \"616b3feeaea25e30d4c2d118\",\r\n      \"userName\": \"Noam\"\r\n  }\r\n},\r\n      {\r\n        \"includedInPackages\": true,\r\n      \"_id\": \"616c72c28c4a971c882b8c7b\",\r\n      \"name\": \"cow\",\r\n          \"winnerId\": {\r\n        \"confidentiality\": false,\r\n      \"_id\": \"611c2f2e18f13934fc07bc27\",\r\n      \"userName\": \"Michal\"\r\n  }\r\n}\r\n],\r\n\"organizationName\": \"עזר מציון\",\r\n\"organizationText\": \"ארגון חסד מציל חיים\",\r\n\"terms\": \"\"\r\n}*/","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\auction manager\\DisApprovalModal.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\auction manager\\ApprovalModal.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\auction manager\\DeleteModal.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\actions\\auctionManager.js",["431"],"import * as actionTypes from '../actionTypes';\r\nimport axios from 'axios';\r\n\r\n//מביא את כל המכירות של המנהל הזה\r\nexport const getAuctionsArray = (user) => {\r\n    //let manager_id='611c2f2e18f13934fc07bc27';\r\n    let manager_id = user._id;\r\n    return (dispatch) => {\r\n        axios.get(`http://localhost:5000/auctions/getAuctionsByManagerId/${manager_id}`).then(succ => {\r\n            console.log(succ.data);\r\n            //if (succ.status != 400) dispatch();\r\n        })\r\n    }\r\n}\r\n//הצגת מודלים\r\nexport const setEditAuctionModal = (b, _id) => {\r\n    return {\r\n        type: actionTypes.SET_EDIT_AUCTION_MODAL,\r\n        payload: { b: b, _id: _id }\r\n    }\r\n}\r\nexport const setDeleteAuctionModal = (b, _id) => {\r\n    return {\r\n        type: actionTypes.SET_DELETE_AUCTION_MODAL,\r\n        payload: { b: b, _id: _id }\r\n    }\r\n}\r\nexport const setApprovalAuctionModal = (b, _id) => {\r\n    return {\r\n        type: actionTypes.SET_APPROVAL_AUCTION_MODAL,\r\n        payload: { b: b, _id: _id }\r\n    }\r\n}\r\nexport const setDisApprovalAuctionModal = (b, _id) => {\r\n    return {\r\n        type: actionTypes.SET_DISAPPROVAL_AUCTION_MODAL,\r\n        payload: { b: b, _id: _id }\r\n    }\r\n}\r\nexport const setSelectedAuctionToOptions = (_id) => {\r\n    return {\r\n        type: actionTypes.SET_SELECTED_AUCTION_TO_OPTIONS,\r\n        payload: _id\r\n    }\r\n}\r\nexport const deleteAuction = (_id) => {\r\n    //TODO\r\n    alert(\"deleted!!\");\r\n    return {\r\n        //זה סתם רק בגלל השגיאה\r\n        //לעשות מחיקה מהמסד נתונים\r\n        //ואז למחוק את הרטרן הזה\r\n        type: actionTypes.SET_DELETE_AUCTION_MODAL,\r\n        payload: false\r\n    }\r\n}\r\nexport const updateAuction = (_id, auction) => {\r\n    //TODO\r\n    alert(\"updated!!\");\r\n    return {\r\n        //זה סתם רק בגלל השגיאה\r\n        //לעשות עדכון במסד נתונים\r\n        //ואז למחוק את הרטרן הזה\r\n        type: actionTypes.SET_EDIT_AUCTION_MODAL,\r\n        payload: false\r\n    }\r\n}\r\nexport const approvalAuction = (a_id, status) => {\r\n    // TODO       put/get ??\r\n    if (status) alert(\"approved!!\");\r\n    else alert(\"disapproved\")\r\n    return {\r\n        //זה סתם רק בגלל השגיאה\r\n        //לעשות עדכון במסד נתונים\r\n        //ואז למחוק את הרטרן הזה\r\n        type: actionTypes.SET_APPROVAL_AUCTION_MODAL,\r\n        payload: false\r\n    }\r\n\r\n    /* return (dispatch) => {\r\n         axios.put(`http://localhost:5000/auctions/approvalAuction/${a_id}&${status}`).then(succ => {\r\n             console.log(succ.data);\r\n             //if (succ.status != 400) dispatch();\r\n         })\r\n     }*/\r\n}\r\n//האם ההגרלות מאושרות\r\nexport const isAuctionApproved = (_id) => {\r\n    return (dispatch) => {\r\n        axios.get(`http://localhost:5000/auctions/getAuctionIsApproved/${_id}`).then(succ => {\r\n            console.log(succ.data);\r\n            //if (succ.status != 400) dispatch();\r\n        })\r\n    }\r\n}\r\n//האם ההגרלות התבצעו\r\nexport const getAuctionIsDone = (_id) => {\r\n    return (dispatch) => {\r\n        axios.get(`http://localhost:5000/auctions/getAuctionIsDone/${_id}`).then(succ => {\r\n            console.log(succ.data);\r\n            if (succ.status != 400) dispatch();\r\n        })\r\n    }\r\n}\r\n\r\n/*\r\nexport const updateAuctionManagerState = () => {\r\n    //TODO: אפשר?\r\n    updateCurrentUser(JSON.parse(localStorage.getItem(\"currentUser\")));\r\n    return {\r\n        type: actionTypes.UPDATE_AUCTION_MANAGER_STATE,\r\n        payload: JSON.parse(localStorage.getItem(\"selected_auction_to_options\"))\r\n    };\r\n}\r\n*/\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\main\\SmallHeader.js",["432","433","434"],"import React, { useEffect, useState } from 'react';\r\nimport Login from '../user/Login';\r\nimport Button from '@material-ui/core/Button';\r\nimport ProfileButton from '../user/ProfileButton';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport './main.scss';\r\nimport { setLogin } from '../../store/actions/home';\r\n\r\nconst SmallHeader = (props) => {\r\n\r\n    return (<>\r\n        <header id=\"small-header\">\r\n            <Link to={\"/home\"} id=\"logo_home_small_header\" />\r\n            {props.currentUser ?\r\n                <ProfileButton /> :\r\n                <Button type=\"button\" className=\"btn\" id=\"login_btn_small_header\"\r\n                    onClick={() => { props.setLogin(true) }}>Login</Button>}\r\n        </header>\r\n\r\n    </>);\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentUser: state.user.currentUser,\r\n        loginIsOpen: state.user.loginIsOpen\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { setLogin })(SmallHeader);\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\homePage\\AuctionsList.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\homePage\\HomeFooter.js",["435","436","437"],"import { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport './home.scss';\r\nimport { setLogin } from '../../store/actions/home';\r\nimport { useEffect } from \"react\";\r\nimport { updateCurrentUser } from '../../store/actions/user'\r\nimport ContactForm from '../main/ContactForm'\r\n\r\nconst HomeFooter = (props) => {\r\n\r\n\r\n    return (\r\n        <footer className=\"home_footer\">\r\n            <div id=\"logo_in_home_footer\" ></div>\r\n            <Link to={'/about'}><div id=\"contact_us\" onClick={() => window.scrollTo(0, 12000)}><p>CONTACT US</p></div></Link>\r\n            <div id=\"menu_footer\">\r\n                <Link to={\"/home\"}><p className=\"menu_footer_link\">HOME</p></Link>\r\n                <Link to={\"/home\"} onClick={() => window.scrollTo(0, 900)}><p className=\"menu_footer_link\">AUCTIONS</p></Link>\r\n                <Link onClick={props.currentUser ? null : () => { window.scrollTo(0, 0); props.setLogin(true) }} to={props.currentUser ? \"/new_auction\" : '#'}>\r\n                    <p className=\"menu_footer_link\">BUILDING</p>\r\n                </Link>\r\n                <Link to={\"/about\"}><p className=\"menu_footer_link\">ABOUT</p></Link>\r\n            </div>\r\n            <div id=\"text_footer\">\r\n                <p>  Building Chinese auctions,<br />\r\n                    And a database of all auctions built.<br />\r\n                    The site is used by the masses<br />\r\n                    And is gaining momentum among the general public.<br />\r\n                    The site has gained worldwide publicity<br />\r\n                    Thanks to its uniqueness.\r\n                </p>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentUser: state.user.currentUser\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { setLogin })(HomeFooter);\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\homePage\\HomeHeader.js",["438","439","440","441"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Login from '../user/Login';\r\nimport './home.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport ProfileButton from '../user/ProfileButton';\r\nimport { setLogin } from '../../store/actions/home'\r\nimport { setCurrentUser } from '../../store/actions/signUp'\r\n\r\nimport SmallHeader from '../main/SmallHeader';\r\nimport User from '../../models/user'\r\n\r\nconst HomeHeader = (props) => {\r\n\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", changeHeader);\r\n    return () => { window.removeEventListener('scroll', changeHeader); };\r\n  }, []);\r\n\r\n  const changeHeader = () => {\r\n    let s = document.getElementById(\"small-header\");\r\n    if (s != null) {\r\n      let height = 900//הגובה של ההידר הגדול\r\n      if (document.body.scrollTop > height || document.documentElement.scrollTop > height) {\r\n        if (s != null) s.style.top = \"0\";\r\n      }\r\n      else if (s != null) s.style.top = \"-500px\";\r\n    }\r\n  }\r\n  return (<>\r\n    <header id=\"home_header\" >\r\n      <Link to={\"/home\"} id=\"logo_home_header\" />\r\n\r\n      {props.currentUser ? <ProfileButton />\r\n        : <Button type=\"button\" className=\"btn\" id=\"btnLogin\"\r\n          onClick={() => props.setLogin(true)}>Login</Button>}\r\n\r\n      {props.loginIsOpen ? <Login /> : null}\r\n\r\n      <div id=\"home_text\">\r\n        <h3>Build your </h3>\r\n        <h5>chinese auction</h5>\r\n        <p>\r\n          If you dreamed of having your own Chinese auction,<br />\r\n          here you can easily do so.<br />\r\n          In a short, simple, light and convenient process,<br />\r\n          you will create your Chinese auction.\r\n        </p>\r\n\r\n        <Button type=\"button\" className=\"btn\" id=\"btnMoreInfo\" href=\"/about\">MORE INFO</Button>\r\n\r\n        <Button\r\n          href={props.currentUser ? \"/new_auction\" : '#'}\r\n          onClick={props.currentUser ?\r\n            localStorage.removeItem(\"newAuction\")  //לפנות את הלוכל-סטורג' מנתיוני מכירה חדשה\r\n            : () => {\r\n              props.setLogin(true);\r\n              window.scrollTo(0, 0);\r\n            }\r\n          }\r\n          type=\"button\" className=\"btn\" id=\"btnNewAuction\">\r\n          BUILD CHINESE AUCTION\r\n        </Button>\r\n      </div>\r\n\r\n\r\n      <div id=\"right_pic\" />\r\n      <div id=\"left_pic\" />\r\n    </header>\r\n    {/* <SmallHeader /> */}\r\n  </>)\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentUser: state.user.currentUser,\r\n    loginIsOpen:state.user.loginIsOpen\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {setLogin})(HomeHeader);\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\new auction\\auction pricing\\AuctionPricing.js",["442"],"import AddPackage from './AddPackage';\r\nimport PackagesList from './PackagesList';\r\nimport { connect } from \"react-redux\";\r\nimport {showAddPackage} from \"../../../store/actions/newAuction\";\r\n\r\nconst AuctionPricing = (props) => {\r\n    //חבילות\r\n    return (<>\r\n        <h1>Packages</h1>\r\n        {/* חבילת רכישה היא כמות כרטיסים ממכלול הכרטיסים במכירה הפומבית,\r\n     במחיר מוזל לפי אחוזי ההנחה שתקבע */}\r\n        <label>Purchase package is the quantity of tickets from the set of tickets at the auction,\r\n            at a discounted price according to the percentage of the discount you will determine.</label>\r\n        {props.showSetPackage == false && <button className=\"positive ui button\" \r\n        onClick={ props.showAddPackage}>Add new Package</button>}\r\n        {<PackagesList />}\r\n        {props.showSetPackage && <AddPackage />}\r\n    </>);\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        showSetPackage:state.auction.showSetPackage\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {  showAddPackage})(AuctionPricing);\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\utils\\newAuctionUtils.js",["443","444","445","446"],"import axios from 'axios';\r\n\r\n\r\n//להפוך סטטוס של משתמש רגיל למנהל\r\nexport const beManager = (_id) => {\r\n    return axios.post(`http://localhost:5000/users/beManager/:${_id}`)\r\n}\r\n// אישור פירסום מכירה \r\n\r\nexport const pubicationApproval = (a_id, status) => {\r\n    return axios.put(`http://localhost:5000/auctions/publicationApproval/${a_id}&${status}`)\r\n}\r\n\r\n//--------------שמירת נתוני מכירה לפי שלבים\r\n\r\n//תמחור מכירה\r\nexport const savePackages = (auction_id, packages) => {\r\n    return (dispatch) => {\r\n        axios.post(`http://localhost:5000/auctions/setPackages/:${auction_id}&${packages}`).then(succ => {\r\n            console.log(succ.data);\r\n            if (succ.status != 400)\r\n                dispatch(console.log(succ.data));\r\n        })\r\n    }\r\n}\r\n//העלאת מוצרים\r\nexport const saveProducts = (products) => {\r\n    return (dispatch) => {\r\n        axios.post(`http://localhost:5000/auctions/setProducts/:${products}`).then(succ => {\r\n            console.log(succ.data);\r\n            if (succ.status != 400)\r\n                dispatch(console.log(succ.data));\r\n        })\r\n    }\r\n}\r\n//מידע על הארגון\r\nexport const saveOrganizationInformation = (details) => {\r\n    return (dispatch) => {\r\n        axios.post(`http://localhost:5000/auctions/setOrganizationInformation/:${details}`).then(succ => {\r\n            console.log(succ.data);\r\n            if (succ.status != 400)\r\n                dispatch(console.log(succ.data));\r\n        })\r\n    }\r\n}\r\n\r\n//מידע על המכירה\r\nexport const saveAuctionInformation = (details) => {\r\n    return (dispatch) => {\r\n        axios.post(`http://localhost:5000/auctions/setAuctionInformation/`,details).then(succ => {\r\n            console.log(succ.data);\r\n            if (succ.status != 400)\r\n                dispatch(console.log(succ.data));\r\n        })\r\n    }\r\n}","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\utils\\userUtils.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\actions\\currentAuction.js",["447"],"import * as actionTypes from '../actionTypes';\r\nimport axios from 'axios';\r\nimport { updateCurrentUser } from './user'\r\nimport { setProductsList } from './newAuction';\r\n\r\nexport const setCurrentAuction = (auctionId) => {\r\n  return (dispatch) => {\r\n    axios.get(`http://localhost:5000/auctions/${auctionId}`).then(succ => {\r\n      console.log(succ.data);\r\n      if (succ.status != 400)\r\n        dispatch(updateCurrentAuction(succ.data));\r\n    })\r\n  }\r\n}\r\nexport const setCntOfProductInCart = (_id, cnt) => {\r\n  return {\r\n    type: actionTypes.SET_CNT_PRODUCT_IN_CART,\r\n    payload: {\r\n      _id: _id,\r\n      cnt: cnt\r\n    }\r\n  }\r\n}\r\nexport const updateCurrentAuction = (auction) => {\r\n  return {\r\n    type: actionTypes.SET_CURRENT_AUCTION,\r\n    payload: auction\r\n  }\r\n}\r\n\r\nexport const getProducts = (auction_id) => {\r\n  return (dispatch) => {\r\n    return axios.get(`http://localhost:5000/auctions/${auction_id}`).then(succ => {\r\n      dispatch(setProductsList(succ.data))\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport const updateCurrentAuctionState = () => {\r\n  updateCurrentUser(JSON.parse(localStorage.getItem(\"currentUser\")));\r\n  return {\r\n    type: actionTypes.UPDATE_CURRENT_AUCTION_STATE,\r\n    payload: JSON.parse(localStorage.getItem(\"currentAuction\"))\r\n  }\r\n}\r\n\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\actions\\user.js",["448","449","450","451","452","453"],"import * as actionTypes from '../actionTypes';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const updateCurrentUser = (user) => {\r\n    return {\r\n        type: actionTypes.UPDATE_CURRENT_USER,\r\n        payload: user\r\n    }\r\n}\r\n\r\n//עדכון פרטי משתמש\r\nexport const updateUserInDB = (user) => {\r\n    return (dispatch) => {\r\n        return axios.put(`http://localhost:5000/users/${user._id}`, user).then(succ => {\r\n            if (succ.status != 400) {\r\n                dispatch(updateCurrentUser(succ.data))\r\n            }\r\n        });;\r\n    }\r\n\r\n}\r\n\r\n//של משתמש ומחזירה את ההזמנות של אותו משתמש _id מקבלת  \r\nexport const getOrdersList = (user) => {\r\n    let id = user._id;\r\n    return (dispatch) => {\r\n        axios.get(`http://localhost:5000/orders/orderList/${id}`).then(succ => {\r\n            if (succ.status != 400)\r\n                return succ.data;\r\n        })\r\n    }\r\n}\r\n\r\n//בלחיצה על כפתור הצג הזמנה \r\nexport const getOrderById = (order) => {\r\n    let id = order._id;\r\n    return (dispatch) => {\r\n        axios.get(`http://localhost:5000/orders/${id}`).then(succ => {\r\n            if (succ.status != 400)\r\n                return succ.data;\r\n        })\r\n    }\r\n}\r\n\r\nexport const addOrderToState = (order) => {\r\n    return {\r\n        type: actionTypes.ADD_ORDER,\r\n        payload: order\r\n    }\r\n}\r\n\r\nexport const addProductToCart = (cnt,product) => {\r\n    return {\r\n        type: actionTypes.ADD_PRODUCT_TO_CART,\r\n        payload: {\r\n            cnt: cnt,\r\n            product: product\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const signOut = () => {\r\n    return {\r\n        type: actionTypes.SIGN_OUT\r\n    }\r\n}\r\n\r\nexport const updateShoppingCart = (arr) => {\r\n    return {\r\n        type: actionTypes.UPDATE_SHOPPING_CART,\r\n        payload: arr\r\n    }\r\n}\r\n\r\nexport const addOrderToDB = (order) => {\r\n    return (dispatch) => {\r\n        axios.post(`http://localhost:5000/orders`, order).then(succ => {\r\n            console.log(succ.data);\r\n            if (succ.status != 400)\r\n                dispatch(console.log(succ.data));\r\n        })\r\n    }\r\n}\r\n\r\n//מחזירה הזמנה עפ\"י קוד משתמש ומכירה\r\nexport const getOrderByUserAndAuction = (user_id, auction_id) => {\r\n    return (dispatch) => {\r\n        axios.get(`http://localhost:5000/orders/${user_id}&${auction_id}`).then(succ => {\r\n            if (succ.status != 400) {\r\n                const arr = (succ.data).orderDetails;\r\n                dispatch();\r\n            }\r\n        })\r\n    }\r\n}\r\nexport const deleteProductFromCart = (_id) => {\r\n    return {\r\n        type: actionTypes.DELETE_PRODUCT_FROM_CART,\r\n        payload: _id\r\n    }\r\n}","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\actions\\newAuction.js",["454","455","456","457"],"import * as actionTypes from '../actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const showAddPackage = () => {\r\n    return {\r\n        type: actionTypes.SHOW_ADD_PACKAGE\r\n    }\r\n}\r\nexport const addPackage = (p) => {\r\n    return {\r\n        type: actionTypes.ADD_PACKAGE,\r\n        payload: p\r\n    }\r\n}\r\nexport const deletePackage = (p) => {\r\n    return {\r\n        type: actionTypes.DELETE_PACKAGE,\r\n        payload: p\r\n    }\r\n}\r\nexport const setOrganizationName = (na) => {\r\n    return {\r\n        type: actionTypes.SET_ORGANIZATION_NAME,\r\n        payload: na\r\n    }\r\n}\r\nexport const setOrganizationText = (txt) => {\r\n    return {\r\n        type: actionTypes.SET_ORGANIZATION_TEXT,\r\n        payload: txt\r\n    }\r\n}\r\nexport const setOrganizationPhotos = (pic) => {\r\n    return {\r\n        type: actionTypes.ADD_PIC_ORGANIZATION,\r\n        payload: pic\r\n    }\r\n}\r\nexport const setDateOfStart = (date) => {\r\n    return {\r\n        type: actionTypes.SET_START_DATE,\r\n        payload: date\r\n    }\r\n}\r\nexport const setDateOfEnd = (date) => {\r\n    return {\r\n        type: actionTypes.SET_END_DATE,\r\n        payload: date\r\n    }\r\n}\r\nexport const setDateOfLotery = (date) => {\r\n    return {\r\n        type: actionTypes.SET_LOTERY_DATE,\r\n        payload: date\r\n    }\r\n}\r\nexport const setTerms = (date) => {\r\n    return {\r\n        type: actionTypes.SET_LOTERY_DATE,\r\n        payload: date\r\n    }\r\n}\r\nexport const setProductsList = (arr) => {\r\n    return {\r\n        type: actionTypes.SET_PRODUCTS_LIST,\r\n        payload: arr\r\n    }\r\n}\r\nexport const setPackagesList = (arr) => {\r\n    return {\r\n        type: actionTypes.SET_PACKAGES_LIST,\r\n        payload: arr\r\n    }\r\n}\r\n\r\n\r\nexport const addProduct = (p) => {\r\n    return {\r\n        type: actionTypes.ADD_PRODUCT,\r\n        payload: p\r\n    }\r\n}\r\nexport const showAddProduct = (b) => {\r\n    return {\r\n        type: actionTypes.SHOW_ADD_PRODUCT,\r\n        payload: b\r\n    }\r\n}\r\nexport const deleteProduct = (p) => {\r\n    return {\r\n        type: actionTypes.DELETE_PRODUCT,\r\n        payload: p\r\n    }\r\n}\r\n\r\nexport const setLastModal = (b) => {\r\n    return {\r\n        type: actionTypes.SET_FINAL_STEP,\r\n        payload: b\r\n    }\r\n}\r\nexport const resetNewAuctionState = () => {\r\n    return {\r\n        type: actionTypes.RESET_NEW_AUCTION_STATE\r\n    }\r\n}\r\n\r\nexport const setNewAuction=(newAuction)=>{\r\n  return{\r\n      type:actionTypes.SET_NEW_AUCTION,\r\n      payload:newAuction\r\n  }  \r\n}\r\n\r\n//להפוך סטטוס של משתמש רגיל למנהל\r\nexport const beManager = (_id) => {\r\n    return axios.post(`http://localhost:5000/users/beManager`, _id)\r\n}\r\n\r\n// אישור פירסום מכירה            \r\nexport const pubicationApproval = (a_id, status) => {\r\n    return axios.put(`http://localhost:5000/auctions/publicationApproval/${a_id}&${status}`)\r\n}\r\n\r\n//--------------שמירת נתוני מכירה לפי שלבים\r\n\r\n//תמחור מכירה\r\nexport const savePackages = (_id, packages) => {\r\n    return (dispatch) => {\r\n        axios.put(`http://localhost:5000/auctions/setPackages/${_id}&${packages}`).then(succ => {\r\n            console.log(succ.data);\r\n            if (succ.status != 400)\r\n                dispatch(console.log(succ.data));\r\n        })\r\n    }\r\n}\r\n\r\n//העלאת מוצרים\r\nexport const saveProducts = (_id, products) => {\r\n    return (dispatch) => {\r\n        axios.put(`http://localhost:5000/auctions/setProducts/${_id}&${products}`).then(succ => {\r\n            console.log(succ.data);\r\n            if (succ.status != 400)\r\n                dispatch(console.log(succ.data));\r\n        })\r\n    }\r\n}\r\n\r\n//מידע על הארגון\r\nexport const saveOrganizationInformation = (_id, details) => {\r\n    return (dispatch) => {\r\n        axios.put(`http://localhost:5000/auctions/setOrganizationInformation/${_id}&${details}`).then(succ => {\r\n            console.log(succ.data);\r\n            if (succ.status != 400)\r\n                dispatch(console.log(succ.data));\r\n        })\r\n    }\r\n}\r\n\r\n//מידע על המכירה\r\nexport const saveAuctionInformation = (_id, details) => {\r\n    return (dispatch) => {\r\n        axios.put(`http://localhost:5000/auctions/setAuctionInformation/${_id}&${details}`).then(succ => {\r\n            console.log(succ.data);\r\n            if (succ.status != 400)\r\n                dispatch(console.log(succ.data));\r\n        })\r\n    }\r\n\r\n}\r\n//למחוק ישירות מהמסד נתונים\r\n//מקבלת קוד מכירה וקוד חבילה ומוחקת מהמסד נתונים\r\n// export const deletePackage = (_id,package_id) => {\r\n//     return (dispatch) => {\r\n//         axios.delete(`http://localhost:5000/auction/deletePackage/${_id}&${package_id}`).then(succ => {\r\n//             console.log(succ.data);\r\n//             if (succ.status != 400) {\r\n//                 dispatch(console.log(succ.data));\r\n//             }\r\n//         })}\r\n\r\n// }\r\n\r\n// export const deleteProduct = (_id,product_id) => {\r\n//     return (dispatch) => {\r\n//         axios.delete(`http://localhost:5000/auction/deleteProduct/${_id}&${product_id}`).then(succ => {\r\n//             console.log(succ.data);\r\n//             if (succ.status != 400) {\r\n//                 dispatch(console.log(succ.data));\r\n//             }\r\n//         })}\r\n\r\n// }\r\n\r\n\r\n//מחזירה את המכירות שלא אושרו של המשתמש שנשלח\r\nexport const getAllUnapprovedAuctionsByUser = (user_id) => {\r\n    return (dispatch) => {\r\n        axios.get(`http://localhost:5000/auctions/getAllUnapprovedAuctionsByUser/${user_id}`);\r\n    }\r\n}\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\new auction\\uploading products\\ProducstList.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\auction manager\\AuctionStatistics.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\auction\\Timer.js",["458","459"],"import { minutesToMilliseconds } from 'date-fns';\r\nimport React from 'react';\r\nimport { useTimer } from 'react-timer-hook';\r\n\r\nfunction MyTimer({ expiryTimestamp }) {\r\n    //פה נכניס את הזמן שנותר עד לתאריך ביצוע ההגרלות\r\n    const time = new Date();\r\n    time.setSeconds(time.getSeconds() + 600); // 10 minutes timer \r\n\r\n    const {\r\n        seconds,\r\n        minutes,\r\n        hours,\r\n        days,\r\n        isRunning\r\n    } = useTimer({ expiryTimestamp:time, onExpire: () => console.warn('onExpire called') });\r\n\r\n\r\n    return (\r\n        <div style={{ textAlign: 'center', fontSize: '100px', marginTop: '10vh' }}>\r\n            <span>{days}</span>:\r\n            <span>{String(hours).padStart(2, '0')}</span>:\r\n            <span>{String(minutes).padStart(2, '0')}</span>:\r\n            <span>{String(seconds).padStart(2, '0')}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function App() {\r\n\r\n    return (\r\n        <div>\r\n            <MyTimer />\r\n        </div>\r\n    );\r\n}","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\utils\\auctionUtils.js",["460"],"import * as actions from '../store/actions/newAuction';\r\nimport axios from 'axios';\r\nexport const getAuctionById = (_id) => {\r\n  return axios.get(`http://localhost:5000/auctions/${_id}`)\r\n}\r\nexport const createNewAuction = (auction) => {\r\n  return (dispatch) => {\r\n    axios.post(`http://localhost:5000/auctions`, auction).then(succ => {\r\n      console.log(succ.data);\r\n      if (succ.status != 404)//אם הצליח ליצור את המכירה, ימחק את נתוניה מהסטייט\r\n        dispatch(actions.setLastModal(false), actions.resetNewAuctionState());//?\r\n      //ולהחזיר לדף הבית\r\n    })\r\n  }\r\n}\r\n\r\n//מחזירה את רשימת המכירות הקיימות במסד נתונים \r\nexport const getAuctionsList = async () => {\r\n  return axios.get(`http://localhost:5000/auctions`)\r\n}\r\n\r\n\r\nexport const getAuctionWithWinners = async (_id) => {\r\n  return axios.get(`http://localhost:5000/auctions/getAuctionWithWinners/${_id}`);\r\n}\r\n\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\OrderDetails.js",["461","462","463","464","465","466"],"import Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport viewOrder from '../../img/icons/view-order.png'\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport './yourProfile.scss';\r\nimport{getProduct}from '../../utils/auctionUtils'\r\n\r\nexport default function OrerDetails(props) {\r\n    const [anchorEl1, setAnchorEl1] = React.useState(null);\r\n    const open1 = Boolean(anchorEl1);\r\n\r\n    //לחלון שנפתח למטה\r\n    const [state, setState] = React.useState({ bottom: false });\r\n    const id1 = open1 ? 'simple-popover' : undefined;\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) { return; }\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n    const list = (anchor) => (\r\n        <Box\r\n            sx={{ width: anchor === 'left' ? 'auto' : 250 }}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n\r\n            <TableContainer component={Paper} sx={{ width: '500' }}  >\r\n                <Table sx={{ minWidth: 500 }} aria-label=\"caption table\">\r\n                    <TableCell component=\"th\" scope=\"row\" style={style1} onClick={console.log(props.details)}> qty</TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\" style={style1}>prod</TableCell>\r\n                    <TableBody>\r\n\r\n                        {props.details.map((row, index) => (\r\n                            <TableRow key={index} >\r\n                                <TableCell component=\"th\" scope=\"row\" >{row.ticketsQuantity}</TableCell>\r\n                                <TableCell component=\"th\" scope=\"row\">{row.productName}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                    <TableCell style={style1} component=\"th\" scope=\"row\">Gifts:</TableCell>\r\n                    <TableBody>\r\n                        {props.gifts.map((row, index) => (\r\n                            <TableRow key={index}><TableCell component=\"th\" scope=\"row\">{row}</TableCell></TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Box >\r\n    );\r\n    const divStyle = { display: 'inline-block' };\r\n    const style1 = { backgroundColor: 'rgb(253, 220, 220)', fontWeight: 'bold' };\r\n\r\n    return (<div style={divStyle}>\r\n        {['left'].map((anchor) => (\r\n            <React.Fragment key={anchor}>\r\n                <IconButton aria-describedby={id1} variant=\"contained\" onClick={toggleDrawer(anchor, true)}><img title=\"Order details\" className=\"table_options_icon\" src={viewOrder} /></IconButton>\r\n                <Drawer\r\n                    anchor={anchor}\r\n                    open={state[anchor]}\r\n                    onClose={toggleDrawer(anchor, false)}\r\n                >\r\n                    {list(anchor)}\r\n                </Drawer>\r\n            </React.Fragment>\r\n        ))}\r\n\r\n    </ div>)\r\n\r\n}","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\actions\\home.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\auction\\ProductList.js",["467"],"import Product from './Product';\r\nimport './Auction.scss';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getProducts } from '../../store/actions/currentAuction';\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction ProductList (props)  {\r\n\r\n    const [products, setProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setProducts(props.getProducts(props.currnetAuction))\r\n    },[]);\r\n    return (<div>\r\n        {products.length&&\r\n        products.map((item) => {\r\n            return (<Product key={parseInt(item._id)} item={item} />)\r\n        })}\r\n    </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentUser: state.user.currentUser,\r\n        loginIsOpen: state.user.loginIsOpen,\r\n        currnetAuction: state.auction._id\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { getProducts })(ProductList);\r\n\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\models\\auction.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\models\\user.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\new auction\\auction pricing\\PackagesList.js",["468","469"],"//רשימת חבילות רכישה קיימות\r\nimport { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n import { deletePackage } from '../../../store/actions/newAuction'\r\n\r\nconst PackagesList = (props) => {\r\n\r\n\r\n    return (<>\r\n        {/* אם יש חבילות שלו שנמצאות במסד נתונים, אם כן - להוסיפן */}\r\n        <div className=\"ui divided selection list\">\r\n            {props.packagesList.map((item, index) => {\r\n                return (<div key={index}>\r\n                    <h2>qty: {item.qty}</h2>\r\n                    <h2>discount: {item.discount}</h2>\r\n                    <input key={index} className=\"tiny ui button\" type=\"button\" value=\"Delete\" onClick={() => {\r\n                       props.deletePackage(item)\r\n                    }} />\r\n                </div>\r\n                )\r\n            })}\r\n        </div></>\r\n    );\r\n}\r\nconst myMapStateToProps = (state) => {\r\n    return {\r\n        packagesList: state.auction.packagesList\r\n    }\r\n}\r\nexport default connect(myMapStateToProps, {deletePackage })(PackagesList);\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\new auction\\auction pricing\\AddPackage.js",["470","471"],"import { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import { setPackagesList, showAddPackage } from '../../../store/actions/newAuction'\r\nimport { useStorageReducer } from 'react-storage-hooks';\r\nimport { newAuctionReducer as reducer, initialState as newAuctionState } from '../../../store/reducers/newAuctionState.js'\r\nimport * as actionTypes from '../../../store/actionTypes'\r\n\r\nconst AddPackage = (props) => {\r\n    const [state, dispatch, writeError] = useStorageReducer(\r\n        localStorage,\r\n        'newAuction',//שם המשתנה בלוקל סטורג והוא יכיל את כל הסטייט\r\n        reducer,//רדיוסר\r\n        newAuctionState //מה הסטייט שיהיה בלוקל סטורג' וזה גם הסטייט הכללי\r\n    );\r\n    let newPackage = { qty: 0, discount: 0 };\r\n    let checkQty = () => {\r\n        let tmp = state.packagesList.filter(p => p.qty === newPackage.qty);//פילטר מחזיר רק את אלה שעונים לתנאי\r\n        if (tmp.length > 0 || newPackage.qty < 2) document.getElementById(\"qtyInput\").style.borderColor = \"red\";\r\n        else document.getElementById(\"qtyInput\").style.borderColor = \"\";\r\n    }\r\n    let checkDiscount = () => {\r\n        if (newPackage.discount < 2) document.getElementById(\"discountInput\").style.borderColor = \"red\";\r\n        else document.getElementById(\"discountInput\").style.borderColor = \"\";\r\n    }\r\n    \r\n    return (\r\n        <form >\r\n            <div className=\"ui equal width form\">\r\n                <div className=\"fields\">\r\n                    <div className=\"field\">\r\n                        <label>Quantity of tickets</label>\r\n                        <input type=\"number\" id=\"qtyInput\" onChange={(e) => { newPackage.qty = e.target.value; checkQty() }} />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Discount percentages</label>\r\n                        <input id=\"discountInput\" type=\"number\" min=\"2\" required={(newPackage.qty > 0)} onChange={(e) => { newPackage.discount = e.target.value; checkDiscount() }} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button className=\"positive ui button\"\r\n                // disabled={parseInt(newPackage.qty) < 1 || parseInt(newPackage.discount) < 2}\r\n                onClick={() => {\r\n                    dispatch({\r\n                        type: actionTypes.ADD_PACKAGE,\r\n                        payload: newPackage\r\n                    })\r\n                    /*addPackageToLS(newPackage);*/\r\n                }}>Add</button>\r\n        </form >\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // arr: state.auction.packagesList\r\n    };\r\n}\r\nexport default connect(mapStateToProps, {/* setPackagesList, showAddPackage*/ })(AddPackage);\r\n\r\n//לא לאפשר הוספת חבילה עם כמות שכבר קיימת\r\n//disable\r\n//להציג מסגרת אדומה אם לחץ מספר שלילי\r\n\r\n// showAddPackage פונקציה שמקבלת פרמטר בוליאני ומגדירה את \r\n// המשתנה הבוליאני showSetPackage שבסטייט\r\n\r\n// showSetPackageBtn משתנה בוליאני בלוקלסטורג'\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\actions\\signUp.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\ProfileButton.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\Login.js",["472","473"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './User.scss';\r\nimport SignUp from './SignUp';\r\nimport SignIn from './SignIn';\r\nimport { setLogin } from '../../store/actions/home';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nconst Login = (props) => {\r\n \r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => { setValue(newValue); };\r\n  const [show, setShow] = useState(<SignIn />);\r\n  const signInShow = (e) => { setShow(<SignIn />); }\r\n  const signUpShow = (e) => { setShow(<SignUp />); }\r\n  const click = (e) => { e.stopPropagation(); }\r\n\r\n  return (\r\n    <>\r\n      <center>\r\n        <div className=\"glass_login\" onClick={()=>props.setLogin(false)}>\r\n          <div className=\"modal-content_login\" onClick={click}>\r\n            <Tabs\r\n              value={value}\r\n              onChange={handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              centered\r\n            >\r\n              <Tab label=\"SIGN IN\" id=\"btn_signin\" onClick={signInShow} />\r\n              <Tab label=\"SIGN UP\" id=\"btn_signup\" onClick={signUpShow} />\r\n\r\n            </Tabs>\r\n            <div id=\"login_top\" >{show}</div>\r\n            <div id=\"login_bottom\" />\r\n\r\n          </div>\r\n        </div>\r\n      </center>\r\n    </>)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n\r\n  };\r\n}\r\nexport default connect(mapStateToProps, { setLogin })(Login);\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\homePage\\OneAuction.js",["474","475","476"],"import './home.scss';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { connect } from \"react-redux\";\r\nimport { setLogin } from '../../store/actions/home'\r\nimport { setCurrentUser } from '../../store/actions/signUp'\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    minWidth: 300,\r\n    width: '100%',\r\n\r\n  },\r\n  image: {\r\n    top: 50,\r\n    left: '10vw',\r\n    position: 'relative',\r\n    height: 250,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '100% !important', // Overrides inline-style\r\n      height: 100,\r\n    },\r\n    '&:hover, &$focusVisible': {\r\n      zIndex: 1,\r\n      '& $imageBackdrop': {\r\n        opacity: 0.15,\r\n      },\r\n      '& $imageMarked': {\r\n        opacity: 0,\r\n      },\r\n      '& $imageTitle': {\r\n        border: '1px solid currentColor',\r\n      },\r\n    },\r\n  },\r\n  focusVisible: {},\r\n  imageButton: {\r\n    position: 'absolute',\r\n    left: 20,\r\n    right: 20,\r\n    top: 15,\r\n    bottom: 15,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: theme.palette.common.white,\r\n  },\r\n  imageSrc: {\r\n    position: 'absolute',\r\n    left: 20,\r\n    right: 20,\r\n    top: 10,\r\n    bottom: 10,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center 27%',\r\n  },\r\n  //רקע\r\n  imageBackdrop: {\r\n    position: 'absolute',\r\n    left: 20,\r\n    right: 20,\r\n    top: 10,\r\n    bottom: 10,\r\n    backgroundColor: theme.palette.common.black,\r\n    opacity: 0.6,\r\n    transition: theme.transitions.create('opacity'),\r\n  },\r\n  //הכיתוב\r\n  imageTitle: {\r\n    position: 'relative',\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\r\n  },\r\n  //הפס שנמצא מתחת הכיתוב בכל תמונה\r\n  imageMarked: {\r\n    height: 3,\r\n    width: 18,\r\n    backgroundColor: theme.palette.common.white,\r\n    position: 'absolute',\r\n    bottom: -2,\r\n    left: 'calc(50% - 9px)',\r\n    transition: theme.transitions.create('opacity'),\r\n  },\r\n}));\r\n\r\nconst OneAuction = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (<>\r\n    <ButtonBase\r\n      focusRipple\r\n      key={props.item.name}\r\n      className={classes.image}\r\n      focusVisibleClassName={classes.focusVisible}\r\n      style={{\r\n        width: '27%',\r\n\r\n      }}\r\n    >\r\n      <span\r\n        className={classes.imageSrc}\r\n        style={{\r\n          backgroundImage: `url(${props.item.image})`,\r\n          backgroundSize: '100% 100%'\r\n        }}\r\n      />\r\n      <span className={classes.imageBackdrop} />\r\n      <span className={classes.imageButton}>\r\n        <Typography\r\n          component=\"span\"\r\n          variant=\"subtitle1\"\r\n          color=\"inherit\"\r\n          className={classes.imageTitle}\r\n        >\r\n          {props.item.name}\r\n          <span className={classes.imageMarked} />\r\n        </Typography>\r\n      </span>\r\n    </ButtonBase>\r\n\r\n  </>\r\n  )\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentUser: state.user.currentUser,\r\n    loginIsOpen: state.user.loginIsOpen\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { setLogin })(OneAuction);\r\n\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\utils\\orderUtils.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\auction\\Product.js",["477"],"import './Auction.scss';\r\nimport { Header, Modal } from 'semantic-ui-react';\r\nimport p from '../../img/car.jpg';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React from 'react';\r\nimport {addProductToCart} from '../../store/actions/user';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 300,\r\n  },\r\n  media: {\r\n    height: 160,\r\n  },\r\n});\r\n\r\nconst Product = (props) => {\r\n\r\n\r\n  const [open, setOpen] = React.useState(false)\r\n  const classes = useStyles();\r\n  let [cnt, setCnt] = useState(0);\r\n  let image_src = p;//עד שנעשה את הקטע של התמונות\r\n  let description = props.item.description;\r\n  let name = props.item.name;\r\n  let price = props.item.prices;\r\n\r\n  return (\r\n    <Modal\r\n      closeIcon\r\n      open={open}\r\n      trigger={\r\n        <Card className={classes.root} >\r\n          {name}\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {price}\r\n          </Typography>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={image_src}\r\n            title=\"Contemplative Reptile\"\r\n          />\r\n          {/* הוסף לסל */}\r\n          <IconButton color=\"primary\" aria-label=\"add to shopping cart\">\r\n            <AddShoppingCartIcon\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                props.addProductToCart(cnt, props.item);\r\n                setCnt(0);\r\n              }} />\r\n          </IconButton>\r\n\r\n          <IconButton color=\"primary\" onClick={(e) => { let c = cnt; if (cnt > 0) setCnt(c - 1); e.stopPropagation(); }}  >-</IconButton>\r\n\r\n          <h2>{cnt}</h2>\r\n\r\n          <IconButton color=\"primary\" onClick={(e) => { let c = cnt; setCnt(c + 1); e.stopPropagation(); }}>+ </IconButton>\r\n\r\n        </Card>}\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n    >\r\n\r\n      <Header ><h1>{name}</h1></Header>\r\n      <Modal.Content>\r\n        {description}<br />\r\n        <img src={image_src}></img>\r\n      </Modal.Content>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { addProductToCart })(Product);\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\SignIn.js",["478","479","480","481","482","483","484","485","486","487"],"import p from '../../img/profile.png';\r\nimport React, { useState } from 'react';\r\nimport { signIn } from '../../store/actions/signIn';\r\nimport { connect } from 'react-redux';\r\nimport \"./User.scss\"\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LoginGoogle from './LoginGoogle';\r\nimport { useStorageReducer } from 'react-storage-hooks';\r\nimport { userReducer as reducer, initialState as userState } from '../../store/reducers/userState.js'\r\nimport * as actionTypes from '../../store/actionTypes';\r\nimport { setCurrentUser } from '../../store/actions/signUp';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    width: '100%'\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  textField: {\r\n    width: '25ch',\r\n  },\r\n  input_pas_ma: {\r\n    color: '#8e8e95',\r\n    height: '4vh !important',\r\n    background: 'none !important',\r\n    color: '#8e8e95 !important',\r\n    width: '70% !important',\r\n    padding: '0vw !important',\r\n    borderBottomColor: '8e8e95 !important',\r\n    background: 'none !important',\r\n    alignSelf: 'flex-end',\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto'\r\n  },\r\n  eye: {\r\n    color: '#8e8e95',\r\n\r\n  }\r\n}));\r\n\r\nconst SignIn = (props) => {\r\n  const [values, setValues] = React.useState({\r\n    amount: '',\r\n    password: '',\r\n    weight: '',\r\n    weightRange: '',\r\n    showPassword: false,\r\n  });\r\n\r\n\r\n  const handleChange = (prop) => (event) => { setValues({ ...values, [prop]: event.target.value }); };\r\n\r\n  const handleClickShowPassword = () => { setValues({ ...values, showPassword: !values.showPassword }); };\r\n\r\n  const handleMouseDownPassword = (event) => { event.preventDefault(); };\r\n\r\n\r\n  const classes = useStyles();\r\n  let [password, setPassword] = useState(\"\");\r\n  let [email, setEmail] = useState(\"\");\r\n\r\n  return (\r\n    <center>\r\n      <form className={classes.root} noValidate autoComplete=\"off\">\r\n        <img className='profile_img' src={p} />\r\n        <div className={\"inputs_btns\"}>\r\n          <FilledInput\r\n            type={'text'}\r\n            placeholder=\"Email\"\r\n            required\r\n            className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n            variant=\"filled\"\r\n            onChange={(e) => { setEmail(e.target.value) }}\r\n            startAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <i className=\"envelope icon\"></i>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n          <FilledInput\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            onChange={handleChange('password')}\r\n            placeholder=\"Password\"\r\n            required\r\n            className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n            variant=\"filled\"\r\n            onChange={(e) => { setPassword(e.target.value) }}\r\n            startAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <i className=\"lock icon\"></i>\r\n              </InputAdornment>\r\n            }\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n\r\n                <IconButton\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                  className={classes.eye}\r\n                >\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </div>\r\n        <Button type=\"button\" variant=\"contained\" className={\"login_btn_sign_in\"}\r\n          onClick={() => { props.signIn(password, email) }}>Login</Button>\r\n        {password == \"\" ? <h2 id=\"forgot\">Forgot Password?</h2> : null}\r\n        <br />\r\n        {/* <LoginGoogle /> */}\r\n\r\n      </form>\r\n    </center >\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n  };\r\n}\r\nexport default connect(mapStateToProps, { signIn, setCurrentUser })(SignIn);\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\SignUp.js",["488","489","490","491","492","493","494","495"],"import React, { useState } from 'react';\r\nimport { addUser } from '../../utils/userUtils';//הוספת משתמש למאגר\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport './User.scss';\r\nimport User from '../../models/user'\r\nimport { useStorageReducer } from 'react-storage-hooks';\r\nimport { userReducer as reducer, initialState as userState } from '../../store/reducers/userState.js'\r\nimport * as actionTypes from '../../store/actionTypes';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport { setCurrentUser } from '../../store/actions/signUp';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n        width: '25ch',\r\n    },\r\n    input_pas_ma: {\r\n        color: '#8e8e95',\r\n        height: '4vh !important',\r\n        background: 'none !important',\r\n        color: '#8e8e95 !important',\r\n        width: '70% !important',\r\n        padding: '0vw !important',\r\n        borderBottomColor: '8e8e95 !important',\r\n        background: 'none !important',\r\n        alignSelf: 'flex-end',\r\n        marginRight: 'auto',\r\n        marginLeft: 'auto'\r\n\r\n    },\r\n    eye: {\r\n        color: '#8e8e95',\r\n\r\n    },\r\n    placeholder_in_form: {\r\n        marginLeft: '3% !important',\r\n        marginBottom: ' -2% !important'\r\n    }\r\n}));\r\n\r\nconst SignUp = (props) => {\r\n\r\n    const classes = useStyles();\r\n    const handleChangePassword = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n        setNewUser(prevState => ({\r\n            ...prevState,\r\n            ['password']: event.target.value\r\n        }))\r\n    };\r\n    const handleClickShowPassword = () => { setValues({ ...values, showPassword: !values.showPassword }); };\r\n    const handleMouseDownPassword = (event) => { event.preventDefault(); };\r\n    const [values, setValues] = React.useState({\r\n        amount: '',\r\n        password: '',\r\n        weight: '',\r\n        weightRange: '',\r\n        showPassword: false,\r\n    });\r\n\r\n\r\n    const [newUser, setNewUser] = useState({ password: \"\", userName: \"\", email: \"\", phone: \"\", birthYear: \"\", city: \"\", confidentiality: false })\r\n\r\n    const createUser = () => {\r\n        let addNewUser = new User(newUser);\r\n        console.log(addNewUser)\r\n        addUser(addNewUser).then(succ => {\r\n            props.setCurrentUser(succ.data);\r\n        });\r\n    };\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        setNewUser(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n    }\r\n    return (\r\n        <center>\r\n            <form className={classes.root} noValidate autoComplete=\"off\" >\r\n                <div className={\"inputs_btns\"}>\r\n\r\n                    <FilledInput\r\n                        name=\"name\"\r\n                        type={'text'}\r\n                        placeholder=\"Name\"\r\n                        required\r\n                        className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n                        variant=\"filled\"\r\n                        onChange={handleChange}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <i className=\"user icon\"></i>\r\n                            </InputAdornment>\r\n                        }\r\n                    />\r\n                    <FilledInput\r\n                        name=\"email\"\r\n                        type={'email'}\r\n                        placeholder=\"Email address\"\r\n                        className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n                        variant=\"filled\"\r\n                        required\r\n                        onChange={handleChange}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <i className=\"envelope icon\"></i>\r\n                            </InputAdornment>\r\n                        }\r\n                    />\r\n                    <FilledInput\r\n                        name=\"city\"\r\n                        type={'text'}\r\n                        placeholder=\"city\"\r\n                        required\r\n                        className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n                        variant=\"filled\"\r\n                        onChange={handleChange}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <i className=\"map marker alternate icon\"></i>\r\n                            </InputAdornment>\r\n                        }\r\n                    />\r\n                    <FilledInput\r\n                        name=\"birthYear\"\r\n                        type={'text'}\r\n                        placeholder=\"Year Of Birth\"\r\n                        required\r\n                        className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n                        variant=\"filled\"\r\n                        onChange={handleChange}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <i className=\"calendar alternate outline icon\"></i>\r\n                            </InputAdornment>\r\n                        }\r\n                    />\r\n                    <FilledInput\r\n                        type={'text'}\r\n                        name=\"phone\"\r\n                        placeholder=\"Phone Number\"\r\n                        required\r\n                        className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n                        variant=\"filled\"\r\n                        onChange={handleChange}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <i className=\"mobile alternate icon\" />\r\n                            </InputAdornment>\r\n                        }\r\n                    />\r\n                    <FilledInput\r\n                        name=\"password\"\r\n                        type={values.showPassword ? 'text' : 'password'}\r\n                        placeholder=\"Password\"\r\n                        required\r\n                        className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n                        variant=\"filled\"\r\n                        onChange={handleChangePassword('password')}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <i className=\"lock icon\" />\r\n                            </InputAdornment>\r\n                        }\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    onClick={handleClickShowPassword}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                    className={classes.eye}\r\n                                >\r\n                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                    />\r\n                    <FormControlLabel\r\n                        control=\r\n                        {<Checkbox onChange={(e) => setNewUser(prevState => ({\r\n                            ...prevState,\r\n                            ['confidentiality']: e.target.checked\r\n                        }))} />}\r\n                        label=\"Confidentiality\" />\r\n\r\n\r\n                    <Button type=\"button\" variant=\"contained\" className={\"login_btn\"} onClick={createUser}>Login</Button>\r\n                </div>\r\n\r\n            </form>\r\n        </center>\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n       \r\n    }\r\n  }\r\n  export default connect(mapStateToProps, { setCurrentUser })(SignUp);\r\n  \r\n  \r\n  ","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\LoginGoogle.js",["496"],"import GoogleLogin from 'react-google-login';\r\nimport { loginGoogle } from '../../store/actions/signIn';\r\nimport './User.scss';\r\nimport { uteThemeProps } from '@mui/material';\r\nimport { setCurrentUser } from '../../store/actions/signUp';\r\nimport { connect } from \"react-redux\";\r\nimport { setLogin } from '../../store/actions/home';\r\n\r\nconst LoginGoogle = (props) => {\r\n\r\n\r\n  const responseGoogle = async (response) => {\r\n    console.log(response);\r\n    let name = response.profileObj.name;\r\n    let email = response.profileObj.email;\r\n    props.loginGoogle(name, email);\r\n  }\r\n\r\n  return (\r\n    <GoogleLogin\r\n      clientId=\"162776101343-sv1b9hlaroe31tphqa5a9va22vptra1c.apps.googleusercontent.com\"\r\n      buttonText=\"Login with Google\"\r\n      onSuccess={responseGoogle}\r\n      onFailure={responseGoogle}\r\n      cookiePolicy={'single_host_origin'}\r\n    />\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {loginGoogle, setCurrentUser ,setLogin})(LoginGoogle);\r\n\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\store\\actions\\signIn.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\models\\order.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\auction manager\\AuctionResults.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\auction manager\\EditAuction.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\auction\\ProductInCart.js",["497","498","499","500","501","502"],"import './Auction.scss';\r\nimport { Header, Modal } from 'semantic-ui-react';\r\nimport p from '../../img/car.jpg';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { connect } from \"react-redux\";\r\nimport Button from '@material-ui/core/Button';\r\nimport {deleteProductFromCart} from '../../store/actions/user';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 300,\r\n  },\r\n  media: {\r\n    height: 160,\r\n  },\r\n});\r\n\r\nconst getCnt = (_id) => {\r\n  let arr = JSON.parse(localStorage.getItem(\"shoppingCart\"));\r\n  if (!arr) return 0;\r\n  let index = arr.findIndex(item => item.product_id == _id);\r\n  if (index != -1)\r\n    return arr[index].cnt;\r\n  return 0;\r\n}\r\n\r\nconst ProductInCart = (props) => {\r\n  const [open, setOpen] = React.useState(false)\r\n  const classes = useStyles();\r\n\r\n  let image_src = p;//עד שנעשה את הקטע של התמונות\r\n  let description = props.item.product.description;\r\n  let name = props.item.product.name;\r\n  let price = props.item.product.prices;\r\n  let _id = props.item.product._id;\r\n\r\n  return (\r\n    <Modal\r\n      closeIcon\r\n      open={open}\r\n      trigger={\r\n        <Card className={classes.root} >\r\n          {name}\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {price}\r\n          </Typography>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={image_src}\r\n            title=\"Contemplative Reptile\"\r\n          />\r\n\r\n          <i className=\"trash icon\" onClick={(e) => { e.stopPropagation();props.deleteProductFromCart(_id)}}></i>\r\n          <IconButton color=\"primary\"\r\n            onClick={(e) => {\r\n              let c = getCnt(_id);\r\n              if (c > 0) props.setCntOfProductInCart(_id, c - 1);\r\n              e.stopPropagation();\r\n            }}  >\r\n            -</IconButton>\r\n          <h2>{getCnt()}</h2>\r\n          <IconButton color=\"primary\"\r\n            onClick={(e) => {\r\n              let c = getCnt(_id);\r\n              props.setCntOfProductInCart(_id, c + 1);\r\n\r\n              e.stopPropagation();\r\n            }}\r\n          >+</IconButton>\r\n        </Card >}\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n    >\r\n\r\n      <Header ><h1>{name}</h1></Header>\r\n      <Modal.Content>\r\n        {description}<br />\r\n        <img src={image_src}></img>\r\n      </Modal.Content>\r\n    </Modal >\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentUser: state.user.currentUser,\r\n    loginIsOpen: state.user.loginIsOpen,\r\n    currnetAuction: state.auction._id\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {deleteProductFromCart})(ProductInCart);\r\n\r\n","C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\site manager\\SiteManagerTable.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\auction manager\\EditProducts.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\auction manager\\EditModal.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\auction manager\\EditAouctionDetails.js",[],"C:\\Users\\USER\\Documents\\GitHub\\project-good\\project\\client\\src\\components\\user\\auction manager\\EditProductList.js",[],{"ruleId":"503","replacedBy":"504"},{"ruleId":"505","replacedBy":"506"},{"ruleId":"507","severity":1,"message":"508","line":10,"column":8,"nodeType":"509","messageId":"510","endLine":10,"endColumn":20},{"ruleId":"507","severity":1,"message":"511","line":11,"column":8,"nodeType":"509","messageId":"510","endLine":11,"endColumn":26},{"ruleId":"507","severity":1,"message":"512","line":12,"column":8,"nodeType":"509","messageId":"510","endLine":12,"endColumn":17},{"ruleId":"507","severity":1,"message":"513","line":13,"column":8,"nodeType":"509","messageId":"510","endLine":13,"endColumn":27},{"ruleId":"507","severity":1,"message":"514","line":14,"column":8,"nodeType":"509","messageId":"510","endLine":14,"endColumn":19},{"ruleId":"507","severity":1,"message":"515","line":16,"column":8,"nodeType":"509","messageId":"510","endLine":16,"endColumn":25},{"ruleId":"507","severity":1,"message":"516","line":17,"column":8,"nodeType":"509","messageId":"510","endLine":17,"endColumn":18},{"ruleId":"507","severity":1,"message":"517","line":3,"column":10,"nodeType":"509","messageId":"510","endLine":3,"endColumn":14},{"ruleId":"507","severity":1,"message":"518","line":3,"column":23,"nodeType":"509","messageId":"510","endLine":3,"endColumn":36},{"ruleId":"507","severity":1,"message":"519","line":6,"column":17,"nodeType":"509","messageId":"510","endLine":6,"endColumn":26},{"ruleId":"507","severity":1,"message":"519","line":1,"column":17,"nodeType":"509","messageId":"510","endLine":1,"endColumn":26},{"ruleId":"507","severity":1,"message":"520","line":30,"column":11,"nodeType":"509","messageId":"510","endLine":30,"endColumn":16},{"ruleId":"521","severity":1,"message":"522","line":38,"column":77,"nodeType":"509","messageId":"523","endLine":38,"endColumn":81},{"ruleId":"507","severity":1,"message":"524","line":38,"column":77,"nodeType":"509","messageId":"510","endLine":38,"endColumn":81},{"ruleId":"507","severity":1,"message":"525","line":19,"column":10,"nodeType":"509","messageId":"510","endLine":19,"endColumn":19},{"ruleId":"507","severity":1,"message":"526","line":23,"column":13,"nodeType":"509","messageId":"510","endLine":23,"endColumn":24},{"ruleId":"507","severity":1,"message":"527","line":59,"column":19,"nodeType":"509","messageId":"510","endLine":59,"endColumn":27},{"ruleId":"507","severity":1,"message":"528","line":59,"column":29,"nodeType":"509","messageId":"510","endLine":59,"endColumn":39},{"ruleId":"529","severity":1,"message":"530","line":82,"column":9,"nodeType":"531","messageId":"532","endLine":104,"endColumn":10},{"ruleId":"507","severity":1,"message":"533","line":2,"column":28,"nodeType":"509","messageId":"510","endLine":2,"endColumn":36},{"ruleId":"534","severity":1,"message":"535","line":36,"column":7,"nodeType":"536","endLine":36,"endColumn":38},{"ruleId":"507","severity":1,"message":"537","line":2,"column":10,"nodeType":"509","messageId":"510","endLine":2,"endColumn":17},{"ruleId":"507","severity":1,"message":"538","line":3,"column":10,"nodeType":"509","messageId":"510","endLine":3,"endColumn":14},{"ruleId":"507","severity":1,"message":"539","line":3,"column":16,"nodeType":"509","messageId":"510","endLine":3,"endColumn":21},{"ruleId":"507","severity":1,"message":"540","line":3,"column":23,"nodeType":"509","messageId":"510","endLine":3,"endColumn":31},{"ruleId":"507","severity":1,"message":"541","line":5,"column":8,"nodeType":"509","messageId":"510","endLine":5,"endColumn":12},{"ruleId":"507","severity":1,"message":"542","line":6,"column":8,"nodeType":"509","messageId":"510","endLine":6,"endColumn":15},{"ruleId":"507","severity":1,"message":"543","line":7,"column":10,"nodeType":"509","messageId":"510","endLine":7,"endColumn":28},{"ruleId":"507","severity":1,"message":"544","line":79,"column":57,"nodeType":"509","messageId":"510","endLine":79,"endColumn":63},{"ruleId":"507","severity":1,"message":"545","line":3,"column":10,"nodeType":"509","messageId":"510","endLine":3,"endColumn":22},{"ruleId":"546","severity":1,"message":"547","line":23,"column":24,"nodeType":"548","messageId":"549","endLine":23,"endColumn":26},{"ruleId":"534","severity":1,"message":"535","line":91,"column":166,"nodeType":"536","endLine":91,"endColumn":203},{"ruleId":"534","severity":1,"message":"535","line":92,"column":165,"nodeType":"536","endLine":92,"endColumn":205},{"ruleId":"534","severity":1,"message":"535","line":93,"column":137,"nodeType":"536","endLine":93,"endColumn":172},{"ruleId":"534","severity":1,"message":"535","line":94,"column":94,"nodeType":"536","endLine":94,"endColumn":129},{"ruleId":"507","severity":1,"message":"550","line":113,"column":18,"nodeType":"509","messageId":"510","endLine":113,"endColumn":25},{"ruleId":"507","severity":1,"message":"551","line":114,"column":25,"nodeType":"509","messageId":"510","endLine":114,"endColumn":39},{"ruleId":"546","severity":1,"message":"547","line":72,"column":31,"nodeType":"548","messageId":"549","endLine":72,"endColumn":33},{"ruleId":"507","severity":1,"message":"550","line":78,"column":18,"nodeType":"509","messageId":"510","endLine":78,"endColumn":25},{"ruleId":"507","severity":1,"message":"551","line":79,"column":25,"nodeType":"509","messageId":"510","endLine":79,"endColumn":39},{"ruleId":"552","severity":1,"message":"553","line":32,"column":9,"nodeType":"554","messageId":"555","endLine":32,"endColumn":14},{"ruleId":"552","severity":1,"message":"556","line":36,"column":9,"nodeType":"554","messageId":"555","endLine":36,"endColumn":19},{"ruleId":"557","severity":1,"message":"558","line":180,"column":25,"nodeType":"559","messageId":"560","endLine":180,"endColumn":72},{"ruleId":"507","severity":1,"message":"561","line":1,"column":17,"nodeType":"509","messageId":"510","endLine":1,"endColumn":23},{"ruleId":"507","severity":1,"message":"519","line":1,"column":35,"nodeType":"509","messageId":"510","endLine":1,"endColumn":44},{"ruleId":"529","severity":1,"message":"530","line":13,"column":5,"nodeType":"531","messageId":"532","endLine":88,"endColumn":6},{"ruleId":"562","severity":1,"message":"563","line":33,"column":83,"nodeType":"564","messageId":"555","endLine":33,"endColumn":85},{"ruleId":"562","severity":1,"message":"563","line":35,"column":27,"nodeType":"564","messageId":"555","endLine":35,"endColumn":29},{"ruleId":"565","severity":1,"message":"566","line":44,"column":46,"nodeType":"567","messageId":"568","endLine":44,"endColumn":47,"fix":"569"},{"ruleId":"562","severity":1,"message":"563","line":55,"column":83,"nodeType":"564","messageId":"555","endLine":55,"endColumn":85},{"ruleId":"562","severity":1,"message":"570","line":57,"column":27,"nodeType":"564","messageId":"555","endLine":57,"endColumn":29},{"ruleId":"529","severity":1,"message":"530","line":6,"column":5,"nodeType":"531","messageId":"532","endLine":10,"endColumn":6},{"ruleId":"529","severity":1,"message":"530","line":9,"column":5,"nodeType":"531","messageId":"532","endLine":15,"endColumn":6},{"ruleId":"529","severity":1,"message":"530","line":24,"column":5,"nodeType":"531","messageId":"532","endLine":173,"endColumn":6},{"ruleId":"565","severity":1,"message":"566","line":59,"column":42,"nodeType":"567","messageId":"568","endLine":59,"endColumn":43,"fix":"571"},{"ruleId":"565","severity":1,"message":"566","line":130,"column":42,"nodeType":"567","messageId":"568","endLine":130,"endColumn":43,"fix":"572"},{"ruleId":"529","severity":1,"message":"530","line":10,"column":5,"nodeType":"531","messageId":"532","endLine":52,"endColumn":6},{"ruleId":"529","severity":1,"message":"530","line":9,"column":5,"nodeType":"531","messageId":"532","endLine":27,"endColumn":6},{"ruleId":"507","severity":1,"message":"517","line":2,"column":10,"nodeType":"509","messageId":"510","endLine":2,"endColumn":14},{"ruleId":"534","severity":1,"message":"535","line":14,"column":17,"nodeType":"536","endLine":14,"endColumn":53},{"ruleId":"546","severity":1,"message":"547","line":13,"column":39,"nodeType":"548","messageId":"549","endLine":13,"endColumn":41},{"ruleId":"534","severity":1,"message":"573","line":21,"column":9,"nodeType":"536","endLine":21,"endColumn":66},{"ruleId":"507","severity":1,"message":"519","line":1,"column":17,"nodeType":"509","messageId":"510","endLine":1,"endColumn":26},{"ruleId":"507","severity":1,"message":"537","line":3,"column":10,"nodeType":"509","messageId":"510","endLine":3,"endColumn":17},{"ruleId":"507","severity":1,"message":"574","line":12,"column":10,"nodeType":"509","messageId":"510","endLine":12,"endColumn":22},{"ruleId":"507","severity":1,"message":"575","line":13,"column":10,"nodeType":"509","messageId":"510","endLine":13,"endColumn":28},{"ruleId":"507","severity":1,"message":"525","line":14,"column":10,"nodeType":"509","messageId":"510","endLine":14,"endColumn":19},{"ruleId":"507","severity":1,"message":"576","line":15,"column":10,"nodeType":"509","messageId":"510","endLine":15,"endColumn":26},{"ruleId":"507","severity":1,"message":"577","line":17,"column":8,"nodeType":"509","messageId":"510","endLine":17,"endColumn":15},{"ruleId":"507","severity":1,"message":"578","line":23,"column":12,"nodeType":"509","messageId":"510","endLine":23,"endColumn":17},{"ruleId":"507","severity":1,"message":"528","line":23,"column":29,"nodeType":"509","messageId":"510","endLine":23,"endColumn":39},{"ruleId":"507","severity":1,"message":"579","line":4,"column":8,"nodeType":"509","messageId":"510","endLine":4,"endColumn":14},{"ruleId":"507","severity":1,"message":"580","line":5,"column":10,"nodeType":"509","messageId":"510","endLine":5,"endColumn":25},{"ruleId":"507","severity":1,"message":"581","line":7,"column":10,"nodeType":"509","messageId":"510","endLine":7,"endColumn":26},{"ruleId":"507","severity":1,"message":"582","line":10,"column":8,"nodeType":"509","messageId":"510","endLine":10,"endColumn":17},{"ruleId":"507","severity":1,"message":"583","line":11,"column":8,"nodeType":"509","messageId":"510","endLine":11,"endColumn":11},{"ruleId":"507","severity":1,"message":"584","line":12,"column":10,"nodeType":"509","messageId":"510","endLine":12,"endColumn":14},{"ruleId":"507","severity":1,"message":"585","line":13,"column":10,"nodeType":"509","messageId":"510","endLine":13,"endColumn":39},{"ruleId":"586","severity":1,"message":"587","line":38,"column":6,"nodeType":"588","endLine":38,"endColumn":8,"suggestions":"589"},{"ruleId":"562","severity":1,"message":"563","line":46,"column":99,"nodeType":"564","messageId":"555","endLine":46,"endColumn":101},{"ruleId":"534","severity":1,"message":"535","line":46,"column":109,"nodeType":"536","endLine":46,"endColumn":193},{"ruleId":"562","severity":1,"message":"570","line":101,"column":29,"nodeType":"564","messageId":"555","endLine":101,"endColumn":31},{"ruleId":"507","severity":1,"message":"519","line":1,"column":17,"nodeType":"509","messageId":"510","endLine":1,"endColumn":26},{"ruleId":"507","severity":1,"message":"533","line":1,"column":28,"nodeType":"509","messageId":"510","endLine":1,"endColumn":36},{"ruleId":"507","severity":1,"message":"590","line":2,"column":8,"nodeType":"509","messageId":"510","endLine":2,"endColumn":13},{"ruleId":"507","severity":1,"message":"519","line":5,"column":10,"nodeType":"509","messageId":"510","endLine":5,"endColumn":19},{"ruleId":"507","severity":1,"message":"591","line":6,"column":10,"nodeType":"509","messageId":"510","endLine":6,"endColumn":27},{"ruleId":"507","severity":1,"message":"514","line":7,"column":8,"nodeType":"509","messageId":"510","endLine":7,"endColumn":19},{"ruleId":"507","severity":1,"message":"533","line":1,"column":28,"nodeType":"509","messageId":"510","endLine":1,"endColumn":36},{"ruleId":"507","severity":1,"message":"592","line":9,"column":10,"nodeType":"509","messageId":"510","endLine":9,"endColumn":24},{"ruleId":"507","severity":1,"message":"593","line":11,"column":8,"nodeType":"509","messageId":"510","endLine":11,"endColumn":19},{"ruleId":"507","severity":1,"message":"594","line":12,"column":8,"nodeType":"509","messageId":"510","endLine":12,"endColumn":12},{"ruleId":"562","severity":1,"message":"563","line":14,"column":31,"nodeType":"564","messageId":"555","endLine":14,"endColumn":33},{"ruleId":"562","severity":1,"message":"570","line":21,"column":29,"nodeType":"564","messageId":"555","endLine":21,"endColumn":31},{"ruleId":"562","severity":1,"message":"570","line":31,"column":29,"nodeType":"564","messageId":"555","endLine":31,"endColumn":31},{"ruleId":"562","severity":1,"message":"570","line":41,"column":29,"nodeType":"564","messageId":"555","endLine":41,"endColumn":31},{"ruleId":"562","severity":1,"message":"570","line":52,"column":29,"nodeType":"564","messageId":"555","endLine":52,"endColumn":31},{"ruleId":"562","severity":1,"message":"570","line":10,"column":23,"nodeType":"564","messageId":"555","endLine":10,"endColumn":25},{"ruleId":"562","severity":1,"message":"570","line":16,"column":29,"nodeType":"564","messageId":"555","endLine":16,"endColumn":31},{"ruleId":"562","severity":1,"message":"570","line":29,"column":29,"nodeType":"564","messageId":"555","endLine":29,"endColumn":31},{"ruleId":"562","severity":1,"message":"570","line":40,"column":29,"nodeType":"564","messageId":"555","endLine":40,"endColumn":31},{"ruleId":"562","severity":1,"message":"570","line":81,"column":29,"nodeType":"564","messageId":"555","endLine":81,"endColumn":31},{"ruleId":"562","severity":1,"message":"570","line":91,"column":29,"nodeType":"564","messageId":"555","endLine":91,"endColumn":31},{"ruleId":"507","severity":1,"message":"595","line":92,"column":23,"nodeType":"509","messageId":"510","endLine":92,"endColumn":26},{"ruleId":"562","severity":1,"message":"570","line":132,"column":29,"nodeType":"564","messageId":"555","endLine":132,"endColumn":31},{"ruleId":"562","severity":1,"message":"570","line":143,"column":29,"nodeType":"564","messageId":"555","endLine":143,"endColumn":31},{"ruleId":"562","severity":1,"message":"570","line":154,"column":29,"nodeType":"564","messageId":"555","endLine":154,"endColumn":31},{"ruleId":"562","severity":1,"message":"570","line":165,"column":29,"nodeType":"564","messageId":"555","endLine":165,"endColumn":31},{"ruleId":"507","severity":1,"message":"596","line":1,"column":10,"nodeType":"509","messageId":"510","endLine":1,"endColumn":31},{"ruleId":"507","severity":1,"message":"597","line":15,"column":9,"nodeType":"509","messageId":"510","endLine":15,"endColumn":18},{"ruleId":"562","severity":1,"message":"570","line":10,"column":23,"nodeType":"564","messageId":"555","endLine":10,"endColumn":25},{"ruleId":"507","severity":1,"message":"598","line":5,"column":8,"nodeType":"509","messageId":"510","endLine":5,"endColumn":17},{"ruleId":"507","severity":1,"message":"519","line":8,"column":17,"nodeType":"509","messageId":"510","endLine":8,"endColumn":26},{"ruleId":"507","severity":1,"message":"533","line":8,"column":28,"nodeType":"509","messageId":"510","endLine":8,"endColumn":36},{"ruleId":"507","severity":1,"message":"599","line":15,"column":8,"nodeType":"509","messageId":"510","endLine":15,"endColumn":18},{"ruleId":"507","severity":1,"message":"600","line":18,"column":23,"nodeType":"509","messageId":"510","endLine":18,"endColumn":35},{"ruleId":"534","severity":1,"message":"535","line":66,"column":109,"nodeType":"536","endLine":66,"endColumn":185},{"ruleId":"586","severity":1,"message":"601","line":13,"column":7,"nodeType":"588","endLine":13,"endColumn":9,"suggestions":"602"},{"ruleId":"507","severity":1,"message":"519","line":2,"column":10,"nodeType":"509","messageId":"510","endLine":2,"endColumn":19},{"ruleId":"507","severity":1,"message":"533","line":2,"column":21,"nodeType":"509","messageId":"510","endLine":2,"endColumn":29},{"ruleId":"507","severity":1,"message":"519","line":1,"column":10,"nodeType":"509","messageId":"510","endLine":1,"endColumn":19},{"ruleId":"507","severity":1,"message":"528","line":9,"column":29,"nodeType":"509","messageId":"510","endLine":9,"endColumn":39},{"ruleId":"507","severity":1,"message":"519","line":4,"column":17,"nodeType":"509","messageId":"510","endLine":4,"endColumn":26},{"ruleId":"507","severity":1,"message":"603","line":19,"column":9,"nodeType":"509","messageId":"510","endLine":19,"endColumn":16},{"ruleId":"507","severity":1,"message":"592","line":7,"column":10,"nodeType":"509","messageId":"510","endLine":7,"endColumn":24},{"ruleId":"507","severity":1,"message":"519","line":8,"column":17,"nodeType":"509","messageId":"510","endLine":8,"endColumn":26},{"ruleId":"507","severity":1,"message":"533","line":8,"column":28,"nodeType":"509","messageId":"510","endLine":8,"endColumn":36},{"ruleId":"534","severity":1,"message":"535","line":74,"column":9,"nodeType":"536","endLine":74,"endColumn":30},{"ruleId":"507","severity":1,"message":"604","line":14,"column":8,"nodeType":"509","messageId":"510","endLine":14,"endColumn":19},{"ruleId":"507","severity":1,"message":"605","line":15,"column":10,"nodeType":"509","messageId":"510","endLine":15,"endColumn":27},{"ruleId":"507","severity":1,"message":"606","line":16,"column":25,"nodeType":"509","messageId":"510","endLine":16,"endColumn":32},{"ruleId":"507","severity":1,"message":"607","line":16,"column":50,"nodeType":"509","messageId":"510","endLine":16,"endColumn":59},{"ruleId":"507","severity":1,"message":"526","line":17,"column":13,"nodeType":"509","messageId":"510","endLine":17,"endColumn":24},{"ruleId":"552","severity":1,"message":"553","line":38,"column":5,"nodeType":"554","messageId":"555","endLine":38,"endColumn":10},{"ruleId":"552","severity":1,"message":"556","line":42,"column":5,"nodeType":"554","messageId":"555","endLine":42,"endColumn":15},{"ruleId":"534","severity":1,"message":"535","line":77,"column":9,"nodeType":"536","endLine":77,"endColumn":48},{"ruleId":"557","severity":1,"message":"558","line":99,"column":13,"nodeType":"559","messageId":"560","endLine":99,"endColumn":62},{"ruleId":"562","severity":1,"message":"563","line":121,"column":19,"nodeType":"564","messageId":"555","endLine":121,"endColumn":21},{"ruleId":"507","severity":1,"message":"605","line":13,"column":10,"nodeType":"509","messageId":"510","endLine":13,"endColumn":27},{"ruleId":"507","severity":1,"message":"606","line":14,"column":25,"nodeType":"509","messageId":"510","endLine":14,"endColumn":32},{"ruleId":"507","severity":1,"message":"607","line":14,"column":50,"nodeType":"509","messageId":"510","endLine":14,"endColumn":59},{"ruleId":"507","severity":1,"message":"526","line":15,"column":13,"nodeType":"509","messageId":"510","endLine":15,"endColumn":24},{"ruleId":"552","severity":1,"message":"553","line":39,"column":9,"nodeType":"554","messageId":"555","endLine":39,"endColumn":14},{"ruleId":"552","severity":1,"message":"556","line":43,"column":9,"nodeType":"554","messageId":"555","endLine":43,"endColumn":19},{"ruleId":"608","severity":1,"message":"609","line":66,"column":13,"nodeType":"610","messageId":"611","endLine":66,"endColumn":45,"fix":"612"},{"ruleId":"608","severity":1,"message":"613","line":200,"column":29,"nodeType":"610","messageId":"611","endLine":200,"endColumn":66,"fix":"614"},{"ruleId":"507","severity":1,"message":"615","line":4,"column":10,"nodeType":"509","messageId":"510","endLine":4,"endColumn":23},{"ruleId":"507","severity":1,"message":"579","line":10,"column":8,"nodeType":"509","messageId":"510","endLine":10,"endColumn":14},{"ruleId":"507","severity":1,"message":"519","line":12,"column":17,"nodeType":"509","messageId":"510","endLine":12,"endColumn":26},{"ruleId":"507","severity":1,"message":"533","line":12,"column":28,"nodeType":"509","messageId":"510","endLine":12,"endColumn":36},{"ruleId":"562","severity":1,"message":"563","line":26,"column":53,"nodeType":"564","messageId":"555","endLine":26,"endColumn":55},{"ruleId":"562","severity":1,"message":"570","line":27,"column":13,"nodeType":"564","messageId":"555","endLine":27,"endColumn":15},{"ruleId":"534","severity":1,"message":"535","line":83,"column":9,"nodeType":"536","endLine":83,"endColumn":30},"no-native-reassign",["616"],"no-negated-in-lhs",["617"],"no-unused-vars","'StateCounter' is defined but never used.","Identifier","unusedVar","'AuctionInformation' is defined but never used.","'UserTable' is defined but never used.","'AuctionManagerTable' is defined but never used.","'ContactForm' is defined but never used.","'UploadingProducts' is defined but never used.","'AddProduct' is defined but never used.","'Link' is defined but never used.","'useRouteMatch' is defined but never used.","'useEffect' is defined but never used.","'terms' is assigned a value but never used.","no-const-assign","'name' is constant.","const","'name' is assigned a value but never used.","'beManager' is defined but never used.","'actionTypes' is defined but never used.","'dispatch' is assigned a value but never used.","'writeError' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'connect' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'TextArea' is defined but never used.","'Swal' is defined but never used.","'emailjs' is defined but never used.","'setShowContactForm' is defined but never used.","'MDBBtn' is defined but never used.","'ThemeContext' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setPage' is assigned a value but never used.","'setRowsPerPage' is assigned a value but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected","Duplicate key 'background'.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useRef' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"618","text":"619"},"Expected '!==' and instead saw '!='.",{"range":"620","text":"621"},{"range":"622","text":"621"},"Each area of an image map must have a text alternative through the `alt`, `aria-label`, or `aria-labelledby` prop.","'setLastModal' is defined but never used.","'pubicationApproval' is defined but never used.","'createNewAuction' is defined but never used.","'Auction' is defined but never used.","'state' is assigned a value but never used.","'Button' is defined but never used.","'getOrderDetails' is defined but never used.","'getAuctionIsDone' is defined but never used.","'viewOrder' is defined but never used.","'add' is defined but never used.","'Item' is defined but never used.","'getInputAdornmentUtilityClass' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.order.auctionId', 'props.order.giftCodes', and 'props.order.orderDetails'. Either include them or remove the dependency array. If 'setDetails' needs the current value of 'props.order.orderDetails', you can also switch to useReducer instead of useState and read 'props.order.orderDetails' in the reducer.","ArrayExpression",["623"],"'Login' is defined but never used.","'updateCurrentUser' is defined but never used.","'setCurrentUser' is defined but never used.","'SmallHeader' is defined but never used.","'User' is defined but never used.","'arr' is assigned a value but never used.","'minutesToMilliseconds' is defined but never used.","'isRunning' is assigned a value but never used.","'TableHead' is defined but never used.","'getProduct' is defined but never used.","'setAnchorEl1' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["624"],"'classes' is assigned a value but never used.","'LoginGoogle' is defined but never used.","'useStorageReducer' is defined but never used.","'reducer' is defined but never used.","'userState' is defined but never used.","no-useless-computed-key","Unnecessarily computed property ['password'] found.","Property","unnecessarilyComputedProperty",{"range":"625","text":"626"},"Unnecessarily computed property ['confidentiality'] found.",{"range":"627","text":"628"},"'uteThemeProps' is defined but never used.","no-global-assign","no-unsafe-negation",[1700,1723],"\r\n                    .",[2535,2554],"\r\n                .",[4776,4795],{"desc":"629","fix":"630"},{"desc":"631","fix":"632"},[2177,2189],"'password'",[8158,8177],"'confidentiality'","Update the dependencies array to be: [props.order.auctionId, props.order.giftCodes, props.order.orderDetails]",{"range":"633","text":"634"},"Update the dependencies array to be: [props]",{"range":"635","text":"636"},[1668,1670],"[props.order.auctionId, props.order.giftCodes, props.order.orderDetails]",[401,403],"[props]"]