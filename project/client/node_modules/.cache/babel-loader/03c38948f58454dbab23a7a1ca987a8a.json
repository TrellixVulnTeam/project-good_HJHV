{"ast":null,"code":"import * as actionTypes from '../actionTypes';\nimport axios from 'axios';\nimport { setCurrentUser } from './signUp';\nexport const updateCurrentUser = user => {\n  return {\n    type: actionTypes.UPDATE_CURRENT_USER,\n    payload: user\n  };\n}; //עדכון פרטי משתמש\n\nexport const updateUserInDB = user => {\n  return axios.put(`http://localhost:5000/users/${user._id}`, user);\n}; //של משתמש ומחזירה את ההזמנות של אותו משתמש _id מקבלת  \n\nexport const getOrdersList = user => {\n  let id = user._id;\n  return dispatch => {\n    axios.get(`http://localhost:5000/orders/orderList/${id}`).then(succ => {\n      if (succ.status != 400) return succ.data;\n    });\n  };\n}; //בלחיצה על כפתור הצג הזמנה \n\nexport const getOrderById = order => {\n  let id = order._id;\n  return dispatch => {\n    axios.get(`http://localhost:5000/orders/${id}`).then(succ => {\n      if (succ.status != 400) return succ.data;\n    });\n  };\n};\nexport const addOrderToState = order => {\n  return {\n    type: actionTypes.ADD_ORDER,\n    payload: order\n  };\n};\nexport const signOut = () => {\n  return {\n    type: actionTypes.SIGN_OUT\n  };\n};\nexport const updateShoppingCart = arr => {\n  return {\n    type: actionTypes.UPDATE_SHOPPING_CART,\n    payload: arr\n  };\n};\nexport const addOrderToDB = order => {\n  return dispatch => {\n    axios.post(`http://localhost:5000/orders`, order).then(succ => {\n      console.log(succ.data);\n      if (succ.status != 400) dispatch(console.log(succ.data));\n    });\n  };\n}; //מחזירה הזמנה עפ\"י קוד משתמש ומכירה\n\nexport const getOrderByUserAndAuction = (user_id, auction_id) => {\n  return dispatch => {\n    axios.get(`http://localhost:5000/orders/${user_id}&${auction_id}`).then(succ => {\n      if (succ.status != 400) {\n        const arr = succ.data.orderDetails;\n        dispatch();\n      }\n    });\n  };\n};","map":{"version":3,"sources":["D:/project-good/project/client/src/store/actions/user.js"],"names":["actionTypes","axios","setCurrentUser","updateCurrentUser","user","type","UPDATE_CURRENT_USER","payload","updateUserInDB","put","_id","getOrdersList","id","dispatch","get","then","succ","status","data","getOrderById","order","addOrderToState","ADD_ORDER","signOut","SIGN_OUT","updateShoppingCart","arr","UPDATE_SHOPPING_CART","addOrderToDB","post","console","log","getOrderByUserAndAuction","user_id","auction_id","orderDetails"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,gBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,UAA/B;AAGA,OAAO,MAAMC,iBAAiB,GAAIC,IAAD,IAAU;AACvC,SAAO;AACHC,IAAAA,IAAI,EAAEL,WAAW,CAACM,mBADf;AAEHC,IAAAA,OAAO,EAAEH;AAFN,GAAP;AAIH,CALM,C,CAOP;;AACA,OAAO,MAAMI,cAAc,GAAIJ,IAAD,IAAU;AACpC,SAAOH,KAAK,CAACQ,GAAN,CAAW,+BAA8BL,IAAI,CAACM,GAAI,EAAlD,EAAqDN,IAArD,CAAP;AACH,CAFM,C,CAIP;;AACA,OAAO,MAAMO,aAAa,GAAIP,IAAD,IAAU;AACnC,MAAIQ,EAAE,GAAGR,IAAI,CAACM,GAAd;AACA,SAAQG,QAAD,IAAc;AACjBZ,IAAAA,KAAK,CAACa,GAAN,CAAW,0CAAyCF,EAAG,EAAvD,EAA0DG,IAA1D,CAA+DC,IAAI,IAAI;AACnE,UAAIA,IAAI,CAACC,MAAL,IAAe,GAAnB,EACI,OAAOD,IAAI,CAACE,IAAZ;AACP,KAHD;AAIH,GALD;AAMH,CARM,C,CAUP;;AACA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AACnC,MAAIR,EAAE,GAAGQ,KAAK,CAACV,GAAf;AACA,SAAQG,QAAD,IAAc;AACjBZ,IAAAA,KAAK,CAACa,GAAN,CAAW,gCAA+BF,EAAG,EAA7C,EAAgDG,IAAhD,CAAqDC,IAAI,IAAI;AACzD,UAAIA,IAAI,CAACC,MAAL,IAAe,GAAnB,EACI,OAAOD,IAAI,CAACE,IAAZ;AACP,KAHD;AAIH,GALD;AAMH,CARM;AAUP,OAAO,MAAMG,eAAe,GAAID,KAAD,IAAW;AACtC,SAAO;AACHf,IAAAA,IAAI,EAAEL,WAAW,CAACsB,SADf;AAEHf,IAAAA,OAAO,EAAEa;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHlB,IAAAA,IAAI,EAAEL,WAAW,CAACwB;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,kBAAkB,GAAIC,GAAD,IAAS;AACvC,SAAO;AACHrB,IAAAA,IAAI,EAAEL,WAAW,CAAC2B,oBADf;AAEHpB,IAAAA,OAAO,EAAEmB;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,YAAY,GAAIR,KAAD,IAAW;AACnC,SAAQP,QAAD,IAAc;AACjBZ,IAAAA,KAAK,CAAC4B,IAAN,CAAY,8BAAZ,EAA2CT,KAA3C,EAAkDL,IAAlD,CAAuDC,IAAI,IAAI;AAC3Dc,MAAAA,OAAO,CAACC,GAAR,CAAYf,IAAI,CAACE,IAAjB;AACA,UAAIF,IAAI,CAACC,MAAL,IAAe,GAAnB,EACIJ,QAAQ,CAACiB,OAAO,CAACC,GAAR,CAAYf,IAAI,CAACE,IAAjB,CAAD,CAAR;AACP,KAJD;AAKH,GAND;AAOH,CARM,C,CAUP;;AACA,OAAO,MAAMc,wBAAwB,GAAG,CAACC,OAAD,EAAUC,UAAV,KAAyB;AAC7D,SAAQrB,QAAD,IAAc;AACjBZ,IAAAA,KAAK,CAACa,GAAN,CAAW,gCAA+BmB,OAAQ,IAAGC,UAAW,EAAhE,EAAmEnB,IAAnE,CAAwEC,IAAI,IAAI;AAC5E,UAAIA,IAAI,CAACC,MAAL,IAAe,GAAnB,EAAwB;AACpB,cAAMS,GAAG,GAAIV,IAAI,CAACE,IAAN,CAAYiB,YAAxB;AACAtB,QAAAA,QAAQ;AACX;AACJ,KALD;AAMH,GAPD;AAQH,CATM","sourcesContent":["import * as actionTypes from '../actionTypes';\r\nimport axios from 'axios';\r\nimport { setCurrentUser } from './signUp'\r\n\r\n\r\nexport const updateCurrentUser = (user) => {\r\n    return {\r\n        type: actionTypes.UPDATE_CURRENT_USER,\r\n        payload: user\r\n    }\r\n}\r\n\r\n//עדכון פרטי משתמש\r\nexport const updateUserInDB = (user) => {\r\n    return axios.put(`http://localhost:5000/users/${user._id}`, user);\r\n}\r\n\r\n//של משתמש ומחזירה את ההזמנות של אותו משתמש _id מקבלת  \r\nexport const getOrdersList = (user) => {\r\n    let id = user._id;\r\n    return (dispatch) => {\r\n        axios.get(`http://localhost:5000/orders/orderList/${id}`).then(succ => {\r\n            if (succ.status != 400)\r\n                return succ.data;\r\n        })\r\n    }\r\n}\r\n\r\n//בלחיצה על כפתור הצג הזמנה \r\nexport const getOrderById = (order) => {\r\n    let id = order._id;\r\n    return (dispatch) => {\r\n        axios.get(`http://localhost:5000/orders/${id}`).then(succ => {\r\n            if (succ.status != 400)\r\n                return succ.data;\r\n        })\r\n    }\r\n}\r\n\r\nexport const addOrderToState = (order) => {\r\n    return {\r\n        type: actionTypes.ADD_ORDER,\r\n        payload: order\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return {\r\n        type: actionTypes.SIGN_OUT\r\n    }\r\n}\r\n\r\nexport const updateShoppingCart = (arr) => {\r\n    return {\r\n        type: actionTypes.UPDATE_SHOPPING_CART,\r\n        payload: arr\r\n    }\r\n}\r\n\r\nexport const addOrderToDB = (order) => {\r\n    return (dispatch) => {\r\n        axios.post(`http://localhost:5000/orders`, order).then(succ => {\r\n            console.log(succ.data);\r\n            if (succ.status != 400)\r\n                dispatch(console.log(succ.data));\r\n        })\r\n    }\r\n}\r\n\r\n//מחזירה הזמנה עפ\"י קוד משתמש ומכירה\r\nexport const getOrderByUserAndAuction = (user_id, auction_id) => {\r\n    return (dispatch) => {\r\n        axios.get(`http://localhost:5000/orders/${user_id}&${auction_id}`).then(succ => {\r\n            if (succ.status != 400) {\r\n                const arr = (succ.data).orderDetails;\r\n                dispatch();\r\n            }\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}