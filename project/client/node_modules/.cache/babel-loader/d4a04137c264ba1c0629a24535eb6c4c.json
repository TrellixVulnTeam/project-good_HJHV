{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\new auction\\\\uploading products\\\\AddProductForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { addProductToDB } from \"../../../utils/newAuctionUtils\";\nimport { connect } from \"react-redux\";\nimport { signIn, loginGoogle } from '../../../store/actions/signIn';\nimport { addProduct } from '../../../store/actions/newAuction';\nimport { useForm } from \"react-hook-form\";\nimport Checkbox from '@mui/material/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddProductForm = props => {\n  _s();\n\n  let submit = (data, e) => {\n    e.preventDefault();\n    addProductToDB(props.auctionId, newProduct).then(succ => {\n      console.log(succ.data);\n      if (succ.status != 400) props.addProduct(succ.data);\n    });\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onChangeHandler = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const onClickHandler = () => {\n    const data = new FormData();\n    data.append('file', selectedFile);\n    newProduct.img = data;\n  };\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  let newProduct = {\n    img: null,\n    name: \"\",\n    description: \"\",\n    price: 0,\n    includedInPackages: true\n  };\n  useEffect(() => {\n    if (props.currentUser == null && localStorage.getItem(\"login\") == \"true\") props.signIn(localStorage.getItem(\"pass\"), localStorage.getItem(\"email\"));else if (props.currentUser == null && localStorage.getItem(\"login\") == \"google\") props.loginGoogle(localStorage.getItem(\"name\"), localStorage.getItem(\"email\"));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"field\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"product name\",\n        type: \"text\",\n        onChange: e => newProduct.name = e.target.value,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"product price\",\n        type: \"text\",\n        onChange: e => newProduct.price = e.target.value,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"included in packages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: e => newProduct.includedInPackages = e.target.checked,\n        defaultChecked: true,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"product description\",\n        onChange: e => newProduct.description = e.target.value,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        onChange: e => {\n          onChangeHandler(e);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        class: \"btn btn-success btn-block\",\n        onClick: e => onClickHandler(e),\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"positive ui button\",\n        type: \"button\",\n        value: \"Add\",\n        onClick: () => {\n          addProductToDB(props.auctionId, newProduct).then(succ => {\n            console.log(succ.data);\n            if (succ.status != 400) props.addProduct(succ.data);\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit(submit),\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: \"txt\",\n        variant: \"standard\",\n        defaultValue: props.newAuction.productList.name,\n        ...register('name', {\n          required: true\n        }),\n        id: \"input-with-icon-grid\",\n        label: \"Product Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"txt\",\n        variant: \"standard\",\n        defaultValue: props.newAuction.productList.price,\n        ...register('price', {\n          required: true\n        }),\n        id: \"input-with-icon-grid\",\n        label: \"Product Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"included in packages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Checkbox, { ...label,\n        defaultChecked: true,\n        ...register('includedInPackages', {\n          required: true\n        }),\n        id: \"input-with-icon-grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"product description\",\n        multiline: true,\n        rows: 2,\n        rowsMax: 4,\n        variant: \"standard\",\n        defaultValue: props.newAuction.productList.description,\n        ...register('description', {\n          required: true\n        }),\n        id: \"input-with-icon-grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"txt\",\n        variant: \"standard\",\n        defaultValue: props.newAuction.productList.price,\n        ...register('price', {\n          required: true\n        }),\n        id: \"input-with-icon-grid\",\n        label: \"Product Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"submit\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddProductForm, \"SMNf8QkFmfxedPn+A3Jfb0nSpxQ=\", false, function () {\n  return [useForm];\n});\n\n_c = AddProductForm;\n\nconst mapStateToProps = state => {\n  return {\n    auctionId: state.auction.newAuction._id,\n    arr: state.auction.newAuction.productList,\n    newAuction: state.auction.newAuction\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addProduct,\n  signIn,\n  loginGoogle\n})(AddProductForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProductForm\");","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/project-good/project/client/src/components/new auction/uploading products/AddProductForm.js"],"names":["React","useRef","useState","useEffect","addProductToDB","connect","signIn","loginGoogle","addProduct","useForm","Checkbox","AddProductForm","props","submit","data","e","preventDefault","auctionId","newProduct","then","succ","console","log","status","register","handleSubmit","formState","errors","onChangeHandler","event","setSelectedFile","target","files","onClickHandler","FormData","append","selectedFile","img","name","description","price","includedInPackages","currentUser","localStorage","getItem","value","checked","newAuction","productList","required","label","mapStateToProps","state","auction","_id","arr"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { addProductToDB } from \"../../../utils/newAuctionUtils\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn, loginGoogle } from '../../../store/actions/signIn';\r\nimport { addProduct } from '../../../store/actions/newAuction';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\nconst AddProductForm = (props) => {\r\n\r\n    let submit = (data, e) => {\r\n        e.preventDefault();\r\n\r\n        addProductToDB(props.auctionId, newProduct).then(succ => {\r\n            console.log(succ.data);\r\n            if (succ.status != 400)\r\n                props.addProduct(succ.data);\r\n        })\r\n\r\n    }\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n\r\n\r\n    const onChangeHandler = (event) => { setSelectedFile(event.target.files[0]); }\r\n    const onClickHandler = () => {\r\n        const data = new FormData();\r\n        data.append('file', selectedFile);\r\n        newProduct.img = data;\r\n    }\r\n\r\n\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n    let newProduct = { img: null, name: \"\", description: \"\", price: 0, includedInPackages: true };\r\n    useEffect(() => {\r\n        if (props.currentUser == null && localStorage.getItem(\"login\") == \"true\")\r\n            props.signIn(localStorage.getItem(\"pass\"), localStorage.getItem(\"email\"));\r\n        else if (props.currentUser == null && localStorage.getItem(\"login\") == \"google\")\r\n            props.loginGoogle(localStorage.getItem(\"name\"), localStorage.getItem(\"email\"))\r\n    }, [])\r\n    return (\r\n        <div className=\"field\">\r\n            <form>\r\n                <input placeholder=\"product name\" type=\"text\" onChange={(e) => newProduct.name = e.target.value} required={true} />\r\n                <input placeholder=\"product price\" type=\"text\" onChange={(e) => newProduct.price = e.target.value} required={true} />\r\n                <label>included in packages:</label>\r\n                <input type=\"checkbox\" onChange={(e) => newProduct.includedInPackages = e.target.checked} defaultChecked={true} required={true} />\r\n\r\n                <textarea placeholder=\"product description\"\r\n                    onChange={(e) => newProduct.description = e.target.value} required={true}></textarea>\r\n\r\n\r\n                {/* כפתור להעלאת תמונה */}\r\n                <input type=\"file\" name=\"file\" onChange={(e) => { onChangeHandler(e) }} />\r\n                <button type=\"button\" class=\"btn btn-success btn-block\" onClick={(e) => onClickHandler(e)}>Upload</button>\r\n\r\n                <input className=\"positive ui button\" type=\"button\" value=\"Add\" onClick={() => {\r\n                    addProductToDB(props.auctionId, newProduct).then(succ => { console.log(succ.data); if (succ.status != 400) props.addProduct(succ.data); })\r\n                }} />\r\n            </form>\r\n\r\n            <form noValidate autoComplete=\"off\" onSubmit={handleSubmit(submit)}>\r\n                <TextField className=\"txt\" variant=\"standard\" defaultValue={props.newAuction.productList.name} {...register('name', { required: true })} id=\"input-with-icon-grid\" label=\"Product Name\" />\r\n                <TextField className=\"txt\" variant=\"standard\" defaultValue={props.newAuction.productList.price} {...register('price', { required: true })} id=\"input-with-icon-grid\" label=\"Product Price\" />\r\n                <label>included in packages:</label>\r\n                <Checkbox {...label} defaultChecked {...register('includedInPackages', { required: true })} id=\"input-with-icon-grid\" />\r\n                <TextField\r\n                    placeholder=\"product description\"\r\n                    multiline\r\n                    rows={2}\r\n                    rowsMax={4}\r\n                    variant=\"standard\"\r\n                    defaultValue={props.newAuction.productList.description}\r\n                    {...register('description', { required: true })}\r\n                    id=\"input-with-icon-grid\"\r\n                />\r\n                <TextField className=\"txt\" variant=\"standard\" defaultValue={props.newAuction.productList.price} {...register('price', { required: true })} id=\"input-with-icon-grid\" label=\"Product Price\" />\r\n\r\n                <submit>Add</submit>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auctionId: state.auction.newAuction._id,\r\n        arr: state.auction.newAuction.productList,\r\n        newAuction: state.auction.newAuction,\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { addProduct, signIn, loginGoogle })(AddProductForm);"]},"metadata":{},"sourceType":"module"}