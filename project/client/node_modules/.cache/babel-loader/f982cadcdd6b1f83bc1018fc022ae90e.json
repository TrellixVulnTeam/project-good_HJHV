{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\user\\\\DeleteAuctionFromCartModal.js\",\n    _s = $RefreshSig$();\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport { setAllCartArray, setDeleteAuctionFromCart, setShowDeleteAuctionFromCartModal } from '../../store/actions/user';\nimport { getCartFromDB, emptyTheCartByAuction } from '../../utils/userUtils';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeleteAuctionFromCartModal = props => {\n  _s();\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    fullScreen: fullScreen,\n    open: true,\n    onClick: () => {\n      props.setShowDeleteAuctionFromCartModal(false);\n      props.setDeleteAuctionFromCart(null);\n    },\n    onClose: () => {\n      props.setShowDeleteAuctionFromCartModal(false);\n      props.setDeleteAuctionFromCart(null);\n    },\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"responsive-dialog-title\",\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: [\"Are you sure you want to delete \", props.auctionName, \" shopping cart?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => emptyTheCartByAuction(props.auctionId, props.userId).then(succ => {\n          if (succ.status != 400) getCartFromDB(props.userId).then(succ => {\n            if (succ.status != 400) props.setAllCartArray(succ.data);\n          });\n        }),\n        color: \"primary\",\n        autoFocus: true,\n        children: \"Ok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        autoFocus: true,\n        color: \"primary\",\n        children: \"Cancle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DeleteAuctionFromCartModal, \"s4YKggqTL4GpL1vhNriIrg3n/tw=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c = DeleteAuctionFromCartModal;\n\nconst mapStateToProps = state => {\n  return {\n    userId: state.user.currentUser._id,\n    auctionId: state.user.deleteAuctionFromCart._id,\n    auctionName: state.user.deleteAuctionFromCart.name\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setShowDeleteAuctionFromCartModal,\n  setDeleteAuctionFromCart,\n  setAllCartArray\n})(DeleteAuctionFromCartModal);\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteAuctionFromCartModal\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/user/DeleteAuctionFromCartModal.js"],"names":["Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","useTheme","setAllCartArray","setDeleteAuctionFromCart","setShowDeleteAuctionFromCartModal","getCartFromDB","emptyTheCartByAuction","connect","DeleteAuctionFromCartModal","props","theme","fullScreen","breakpoints","down","auctionName","auctionId","userId","then","succ","status","data","mapStateToProps","state","user","currentUser","_id","deleteAuctionFromCart","name"],"mappings":"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","sourcesContent":["import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { setAllCartArray, setDeleteAuctionFromCart, setShowDeleteAuctionFromCartModal } from '../../store/actions/user';\r\nimport { getCartFromDB, emptyTheCartByAuction } from '../../utils/userUtils';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst DeleteAuctionFromCartModal = (props) => {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <Dialog\r\n            fullScreen={fullScreen}\r\n            open={true}\r\n            onClick={() => { props.setShowDeleteAuctionFromCartModal(false); props.setDeleteAuctionFromCart(null) }}\r\n            onClose={() => { props.setShowDeleteAuctionFromCartModal(false); props.setDeleteAuctionFromCart(null) }}\r\n            aria-labelledby=\"responsive-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"responsive-dialog-title\">{\"Delete\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>Are you sure you want to delete {props.auctionName} shopping cart?</DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => emptyTheCartByAuction(props.auctionId, props.userId).then(succ => {\r\n                    if (succ.status != 400) getCartFromDB(props.userId).then(succ => {\r\n                        if (succ.status != 400) props.setAllCartArray(succ.data);\r\n                    })\r\n                })} color=\"primary\" autoFocus>\r\n                    Ok\r\n                </Button>\r\n                <Button autoFocus color=\"primary\">\r\n                    Cancle\r\n                </Button>\r\n\r\n            </DialogActions>\r\n        </Dialog>)\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.user.currentUser._id,\r\n        auctionId: state.user.deleteAuctionFromCart._id,\r\n        auctionName: state.user.deleteAuctionFromCart.name\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { setShowDeleteAuctionFromCartModal, setDeleteAuctionFromCart, setAllCartArray })(DeleteAuctionFromCartModal);"]},"metadata":{},"sourceType":"module"}