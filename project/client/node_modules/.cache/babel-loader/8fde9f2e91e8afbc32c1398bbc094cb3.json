{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\StateCounter.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useStorageState } from 'react-storage-hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction StateCounter() {\n  _s();\n\n  const [count, setCount, writeError] = useStorageState(localStorage);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You clicked \", count, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count - 1),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), writeError && /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: [\"Cannot write to localStorage: \", writeError.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(StateCounter, \"5jTnLUkZxUdUx336LDXi0LAwNYc=\", false, function () {\n  return [useStorageState];\n});\n\n_c = StateCounter;\nexport default StateCounter;\n\nvar _c;\n\n$RefreshReg$(_c, \"StateCounter\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/StateCounter.js"],"names":["React","useStorageState","StateCounter","count","setCount","writeError","localStorage","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,qBAAhC;;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,EAAkBC,UAAlB,IAAgCJ,eAAe,CACnDK,YADmD,CAArD;AAIA,sBACE;AAAA,4BACE;AAAA,iCAAgBH,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGE,UAAU,iBACT;AAAA,mDAAoCA,UAAU,CAACE,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADF;AAUD;;GAfQL,Y;UAC+BD,e;;;KAD/BC,Y;AAgBT,eAAeA,YAAf","sourcesContent":["import React from 'react';\r\nimport { useStorageState } from 'react-storage-hooks';\r\n\r\nfunction StateCounter() {\r\n  const [count, setCount, writeError] = useStorageState(\r\n    localStorage,\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <p>You clicked {count} times</p>\r\n      <button onClick={() => setCount(count + 1)}>+</button>\r\n      <button onClick={() => setCount(count - 1)}>-</button>\r\n      {writeError && (\r\n        <pre>Cannot write to localStorage: {writeError.message}</pre>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default StateCounter;"]},"metadata":{},"sourceType":"module"}