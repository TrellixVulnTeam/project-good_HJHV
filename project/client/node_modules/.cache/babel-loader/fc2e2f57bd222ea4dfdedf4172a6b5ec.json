{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\user\\\\CartAll.js\",\n    _s2 = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport './CartAll.scss';\nimport { connect } from \"react-redux\";\nimport React, { useEffect, useState } from 'react';\nimport { getCartFromDB } from '../../utils/userUtils';\nimport { getAuctionFromDB } from '../../store/actions/currentAuction';\nimport de from '../../img/icons/dustbin.png';\nimport IconButton from '@material-ui/core/IconButton';\nimport OneAuction from '../homePage/OneAuction';\nimport { setNewAuction } from '../../store/actions/newAuction';\nimport { setCurrentAuction } from '../../store/actions/currentAuction';\nimport { signIn } from '../../store/actions/signIn';\nimport { setUserByStorage, setShowDeleteAuctionFromCartModal } from '../../store/actions/user';\nimport DeleteAuctionFromCartModal from './DeleteAuctionFromCartModal';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CartAll = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  useEffect(() => {\n    let id = localStorage.getItem(\"user\");\n    if (id && props.currentUser == null) props.setUserByStorage(id);\n  }, []);\n  useEffect(() => {\n    if (props.currentUser) getCartFromDB(props.currentUser._id).then(succ => {\n      if (succ.status != 400) setArray(succ.data);\n    });\n  }, [props.currentUser]);\n  const [array, setArray] = React.useState(null);\n\n  const DeleteAuctionFromCartModal = props => {\n    _s();\n\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    /*#__PURE__*/\n    _jsxDEV(Dialog, {\n      fullScreen: fullScreen,\n      open: true,\n      onClick: () => props.setShowDeleteAuctionFromCartModal(false),\n      onClose: () => props.setShowDeleteAuctionFromCartModal(false),\n      \"aria-labelledby\": \"responsive-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"responsive-dialog-title\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: [\"Are you sure you want to delete \", props.auctionName, \" shopping cart?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => emptyTheCartByAuction(props.auctionId, props.userId).then(succ => {\n            if (succ.status != 400) getCartFromDB(props.userId).then(succ => {\n              if (succ.status != 400) setArray(succ.data);\n            });\n          }),\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Ok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          autoFocus: true,\n          color: \"primary\",\n          children: \"Cancle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this);\n  };\n\n  _s(DeleteAuctionFromCartModal, \"s4YKggqTL4GpL1vhNriIrg3n/tw=\", false, function () {\n    return [useTheme, useMediaQuery];\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [props.show && /*#__PURE__*/_jsxDEV(DeleteAuctionFromCartModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"a-container\",\n      children: array && array.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => props.getAuctionFromDB(item.auction._id),\n            to: `/auction`,\n            children: /*#__PURE__*/_jsxDEV(OneAuction, {\n              item: item.auction\n            }, parseInt(item.auction._id), false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this)\n          }, parseInt(item.auction._id), false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Amount to pay: \", item.sum, \"\\u20AA\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              title: \"Delete\",\n              onClick: () => props.setShowDeleteAuctionFromCartModal(true),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"my_icon\",\n                src: de\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(CartAll, \"gWCPj3uAJksdgvZFCdF4+dW2f3c=\");\n\n_c = CartAll;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    currentAuction: state.currentAuction.currentAuction,\n    currentUser: state.user.currentUser,\n    show: state.user.showDeleteAuctionFromCartModal\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  setCurrentAuction,\n  setNewAuction,\n  getAuctionFromDB,\n  setUserByStorage,\n  setShowDeleteAuctionFromCartModal\n})(CartAll);\n\nvar _c;\n\n$RefreshReg$(_c, \"CartAll\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/user/CartAll.js"],"names":["Link","connect","React","useEffect","useState","getCartFromDB","getAuctionFromDB","de","IconButton","OneAuction","setNewAuction","setCurrentAuction","signIn","setUserByStorage","setShowDeleteAuctionFromCartModal","DeleteAuctionFromCartModal","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","useTheme","CartAll","props","id","localStorage","getItem","currentUser","_id","then","succ","status","setArray","data","array","theme","fullScreen","breakpoints","down","auctionName","emptyTheCartByAuction","auctionId","userId","show","map","item","auction","parseInt","sum","mapStateToProps","state","user","currentAuction","showDeleteAuctionFromCartModal"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom'\r\nimport './CartAll.scss';\r\nimport { connect } from \"react-redux\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getCartFromDB } from '../../utils/userUtils';\r\nimport { getAuctionFromDB } from '../../store/actions/currentAuction'\r\nimport de from '../../img/icons/dustbin.png'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OneAuction from '../homePage/OneAuction';\r\nimport { setNewAuction } from '../../store/actions/newAuction';\r\nimport { setCurrentAuction } from '../../store/actions/currentAuction';\r\nimport { signIn } from '../../store/actions/signIn';\r\nimport { setUserByStorage, setShowDeleteAuctionFromCartModal } from '../../store/actions/user';\r\nimport DeleteAuctionFromCartModal from './DeleteAuctionFromCartModal';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nconst CartAll = (props) => {\r\n\r\n    useEffect(() => {\r\n        let id = localStorage.getItem(\"user\");\r\n        if (id && props.currentUser == null) props.setUserByStorage(id)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (props.currentUser) getCartFromDB(props.currentUser._id).then(succ => {\r\n            if (succ.status != 400) setArray(succ.data);\r\n        })\r\n    }, [props.currentUser])\r\n\r\n    const [array, setArray] = React.useState(null);\r\n\r\n    const DeleteAuctionFromCartModal = (props) => {\r\n        const theme = useTheme();\r\n        const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    \r\n    \r\n        <Dialog\r\n            fullScreen={fullScreen}\r\n            open={true}\r\n            onClick={() => props.setShowDeleteAuctionFromCartModal(false)}\r\n            onClose={() => props.setShowDeleteAuctionFromCartModal(false)}\r\n            aria-labelledby=\"responsive-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"responsive-dialog-title\">{\"Delete\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>Are you sure you want to delete {props.auctionName} shopping cart?</DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => emptyTheCartByAuction(props.auctionId, props.userId).then(succ => {\r\n                    if (succ.status != 400) getCartFromDB(props.userId).then(succ => {\r\n                        if (succ.status != 400) setArray(succ.data);\r\n                    })\r\n                })} color=\"primary\" autoFocus>\r\n                    Ok\r\n                </Button>\r\n                <Button autoFocus color=\"primary\">\r\n                    Cancle\r\n                </Button>\r\n    \r\n            </DialogActions>\r\n        </Dialog>\r\n    }\r\n    \r\n    \r\n    return (<>\r\n        {props.show && <DeleteAuctionFromCartModal />}\r\n        <div id=\"a-container\">\r\n            {array && array.map((item) => {\r\n                return (\r\n                    <div> <Link\r\n                        key={parseInt(item.auction._id)}\r\n                        onClick={() => props.getAuctionFromDB(item.auction._id)}\r\n                        to={`/auction`}>\r\n                        <OneAuction key={parseInt(item.auction._id)} item={item.auction} />\r\n\r\n                    </Link>\r\n                        <center>\r\n                            <h3>Amount to pay: {item.sum}₪</h3>\r\n                            <IconButton title=\"Delete\" onClick={() => props.setShowDeleteAuctionFromCartModal(true)} >\r\n                                <img className=\"my_icon\" src={de} ></img>\r\n                            </IconButton>\r\n                        </center>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div></>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        currentAuction: state.currentAuction.currentAuction,\r\n        currentUser: state.user.currentUser,\r\n        show: state.user.showDeleteAuctionFromCartModal\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { signIn, setCurrentAuction, setNewAuction, getAuctionFromDB, setUserByStorage, setShowDeleteAuctionFromCartModal })(CartAll);"]},"metadata":{},"sourceType":"module"}