{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\user\\\\OrderDetails.js\",\n    _s = $RefreshSig$();\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport React, { useEffect, useState } from \"react\";\nimport IconButton from '@material-ui/core/IconButton';\nimport viewOrder from '../../img/icons/view-order.png';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport './yourProfile.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function OrerDetails(props) {\n  _s();\n\n  const [anchorEl1, setAnchorEl1] = React.useState(null);\n  const open1 = Boolean(anchorEl1); //לחלון שנפתח למטה\n\n  const [state, setState] = React.useState({\n    bottom: false\n  });\n  const id1 = open1 ? 'simple-popover' : undefined;\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const list = anchor => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: anchor === 'left' ? 'auto' : 250\n    },\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [props.auction.organizationName ? props.auction.organizationName + \" - \" : \"\", props.auction.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chinese auction results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        width: '100%',\n        maxWidth: 360,\n        bgcolor: 'background.paper'\n      },\n      children: productsList.map((p, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            alignItems: \"flex-start\",\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                alt: \"Remy Sharp\",\n                src: p.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: p.name,\n              secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    display: 'inline'\n                  },\n                  component: \"span\",\n                  variant: \"body2\",\n                  color: \"text.primary\",\n                  children: p.winnerId ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: p.winnerId.userName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 66\n                  }, this) : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 49\n                }, this), p.winnerId ? `${p.winnerId.city}, ${p.winnerId.email}, ${p.winnerId.phone}` : \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"inset\",\n            component: \"li\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 75\n          }, this)]\n        }, void 0, true);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n\n  const divStyle = {\n    display: 'inline-block'\n  };\n  const style1 = {\n    backgroundColor: 'rgb(253, 220, 220)',\n    fontWeight: 'bold'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: divStyle,\n    children: ['left'].map(anchor => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-describedby\": id1,\n        variant: \"contained\",\n        onClick: toggleDrawer(anchor, true),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          title: \"Order details\",\n          className: \"table_options_icon\",\n          src: viewOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 109\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n        anchor: anchor,\n        open: state[anchor],\n        onClose: toggleDrawer(anchor, false),\n        children: list(anchor)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, anchor, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 13\n  }, this);\n}\n\n_s(OrerDetails, \"JVJ/DKhV4XSTpCIJBJABC+XPO6M=\");\n\n_c = OrerDetails;\n{\n  /* <TableContainer component={Paper} sx={{ width: '500' }}  >\r\n  \n  <br />\r\n  <br />\r\n  \n  <br />\r\n  <Table sx={{ minWidth: 500 }} aria-label=\"caption table\">\r\n  \n     <TableCell component=\"th\" scope=\"row\" style={style1}>tickets quantity</TableCell>\r\n     <TableCell component=\"th\" scope=\"row\" style={style1}>product</TableCell>\r\n     <TableBody>\r\n  \n         {props.details.map((row, index) => (\r\n             <TableRow key={index} >\r\n                 <TableCell component=\"th\" scope=\"row\" >{row.ticketsQuantity}</TableCell>\r\n                 <TableCell component=\"th\" scope=\"row\">{row.productId?.name}</TableCell>\r\n             </TableRow>\r\n         ))}\r\n     </TableBody> */\n}\n{\n  /* <TableCell style={style1} component=\"th\" scope=\"row\">Gifts:</TableCell>\r\n  <TableBody>\r\n     {props.gifts.map((row, index) => (\r\n         <TableRow key={index}><TableCell component=\"th\" scope=\"row\">{row}</TableCell></TableRow>\r\n     ))}\r\n  </TableBody> */\n}\n{\n  /* \r\n  </Table>\r\n  </TableContainer> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"OrerDetails\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/user/OrderDetails.js"],"names":["Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","React","useEffect","useState","IconButton","viewOrder","Box","Drawer","OrerDetails","props","anchorEl1","setAnchorEl1","open1","Boolean","state","setState","bottom","id1","undefined","toggleDrawer","anchor","open","event","type","key","list","width","auction","organizationName","name","maxWidth","bgcolor","productsList","map","p","index","image","display","winnerId","userName","city","email","phone","divStyle","style1","backgroundColor","fontWeight"],"mappings":"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","sourcesContent":["import Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport viewOrder from '../../img/icons/view-order.png'\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport './yourProfile.scss';\r\n\r\n\r\nexport default function OrerDetails(props) {\r\n    const [anchorEl1, setAnchorEl1] = React.useState(null);\r\n    const open1 = Boolean(anchorEl1);\r\n\r\n    //לחלון שנפתח למטה\r\n    const [state, setState] = React.useState({ bottom: false });\r\n    const id1 = open1 ? 'simple-popover' : undefined;\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) { return; }\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n    const list = (anchor) => (\r\n        <Box\r\n            sx={{ width: anchor === 'left' ? 'auto' : 250 }}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n\r\n\r\n\r\n\r\n\r\n            <h1>{props.auction.organizationName ? props.auction.organizationName + \" - \" : \"\"}{props.auction.name}</h1>\r\n                <h2>Chinese auction results</h2>\r\n                {\r\n                    <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\r\n                        {productsList.map((p, index) => {\r\n                            return (<>\r\n                                <ListItem key={index} alignItems=\"flex-start\">\r\n                                    <ListItemAvatar>\r\n                                        <Avatar alt=\"Remy Sharp\" src={p.image} />\r\n                                        {/* TODO default image */}\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary={p.name}\r\n                                        secondary={\r\n                                            <React.Fragment>\r\n                                                <Typography\r\n                                                    sx={{ display: 'inline' }}\r\n                                                    component=\"span\"\r\n                                                    variant=\"body2\"\r\n                                                    color=\"text.primary\"\r\n                                                >\r\n\r\n\r\n                                                    {p.winnerId ?<p >{p.winnerId.userName}</p>  : \"\"}\r\n\r\n\r\n                                                </Typography>\r\n                                                {p.winnerId ? `${p.winnerId.city}, ${p.winnerId.email}, ${p.winnerId.phone}` : \"\"}\r\n                                            </React.Fragment>\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider variant=\"inset\" component=\"li\" /><br />\r\n                            </>)\r\n                        })}\r\n                    </List>\r\n                }\r\n\r\n\r\n        </Box >\r\n    );\r\n    const divStyle = { display: 'inline-block' };\r\n    const style1 = { backgroundColor: 'rgb(253, 220, 220)', fontWeight: 'bold' };\r\n\r\n    return (<div style={divStyle}>\r\n        {['left'].map((anchor) => (\r\n            <React.Fragment key={anchor}>\r\n                <IconButton aria-describedby={id1} variant=\"contained\" onClick={toggleDrawer(anchor, true)}><img title=\"Order details\" className=\"table_options_icon\" src={viewOrder} /></IconButton>\r\n                <Drawer\r\n                    anchor={anchor}\r\n                    open={state[anchor]}\r\n                    onClose={toggleDrawer(anchor, false)}\r\n                >\r\n                    {list(anchor)}\r\n                </Drawer>\r\n            </React.Fragment>\r\n        ))}\r\n\r\n    </ div>)\r\n\r\n}\r\n\r\n\r\n{/* <TableContainer component={Paper} sx={{ width: '500' }}  >\r\n\r\n<br />\r\n<br />\r\n\r\n<br />\r\n<Table sx={{ minWidth: 500 }} aria-label=\"caption table\">\r\n\r\n    <TableCell component=\"th\" scope=\"row\" style={style1}>tickets quantity</TableCell>\r\n    <TableCell component=\"th\" scope=\"row\" style={style1}>product</TableCell>\r\n    <TableBody>\r\n\r\n        {props.details.map((row, index) => (\r\n            <TableRow key={index} >\r\n                <TableCell component=\"th\" scope=\"row\" >{row.ticketsQuantity}</TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">{row.productId?.name}</TableCell>\r\n            </TableRow>\r\n        ))}\r\n    </TableBody> */}\r\n\r\n\r\n    {/* <TableCell style={style1} component=\"th\" scope=\"row\">Gifts:</TableCell>\r\n    <TableBody>\r\n        {props.gifts.map((row, index) => (\r\n            <TableRow key={index}><TableCell component=\"th\" scope=\"row\">{row}</TableCell></TableRow>\r\n        ))}\r\n    </TableBody> */}\r\n\r\n\r\n{/* \r\n</Table>\r\n</TableContainer> */}"]},"metadata":{},"sourceType":"module"}