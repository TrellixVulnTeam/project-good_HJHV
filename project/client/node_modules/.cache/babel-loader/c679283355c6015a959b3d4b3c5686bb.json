{"ast":null,"code":"// import './Auction.scss';\n// import { Header, Modal } from 'semantic-ui-react';\n// import p from '../../img/car.jpg';\n// import IconButton from '@material-ui/core/IconButton';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Card from '@material-ui/core/Card';\n// import CardMedia from '@material-ui/core/CardMedia';\n// import Typography from '@material-ui/core/Typography';\n// import { connect } from \"react-redux\";\n// import Button from '@material-ui/core/Button';\n// import { deleteProductFromCart } from '../../store/actions/user';\n// import { setCntOfProductInCart } from '../../store/actions/currentAuction';\n// import React, { useEffect, useState } from 'react';\n// const useStyles = makeStyles({\n//   root: {\n//     maxWidth: 300,\n//   },\n//   media: {\n//     height: 160,\n//   },\n// });\n// const getCnt = (_id) => {\n//   let arr = JSON.parse(localStorage.getItem(\"shoppingCart\"));\n//   if (!arr) return 0;\n//   let index = arr.findIndex(item => item.product_id == _id);\n//   if (index != -1)\n//     return arr[index].cnt;\n//   return 0;\n// }\n// const ProductInCart = (props) => {\n//   const [open, setOpen] = React.useState(false)\n//   const classes = useStyles();\n//   let image_src = p;//עד שנעשה את הקטע של התמונות\n//   let description = props.item.product.description;\n//   let name = props.item.product.name;\n//   let price = props.item.product.prices;\n//   let _id = props.item.product._id;\n//   return (\n//     <Modal\n//       closeIcon\n//       open={open}\n//       trigger={\n//         <Card className={classes.root} >\n//           {name}\n//           <Typography gutterBottom variant=\"h5\" component=\"h2\">\n//             {price}\n//           </Typography>\n//           <CardMedia\n//             className={classes.media}\n//             image={image_src}\n//             title=\"Contemplative Reptile\"\n//           />\n//           <i className=\"trash icon\" onClick={(e) => { e.stopPropagation(); props.deleteProductFromCart(_id) }}></i>\n//           <IconButton color=\"primary\"\n//             onClick={(e) => {\n//               let c = getCnt(_id);\n//               if (c > 0) props.setCntOfProductInCart(_id, c - 1);\n//               e.stopPropagation();\n//             }}  >\n//             -</IconButton>\n//           <h2>{getCnt()}</h2>\n//           <IconButton color=\"primary\"\n//             onClick={(e) => {\n//               let c = getCnt(_id);\n//               props.setCntOfProductInCart(_id, c + 1);\n//               e.stopPropagation();\n//             }}\n//           >+</IconButton>\n//         </Card >}\n//       onClose={() => setOpen(false)}\n//       onOpen={() => setOpen(true)}\n//     >\n//       <Header ><h1>{name}</h1></Header>\n//       <Modal.Content>\n//         {description}<br />\n//         <img src={image_src}></img>\n//       </Modal.Content>\n//     </Modal >\n//   )\n// }\n// const mapStateToProps = state => {\n//   return {\n//     currentUser: state.user.currentUser,\n//     loginIsOpen: state.user.loginIsOpen,\n//     currnetAuction: state.auction\n//   }\n// }\n// export default connect(mapStateToProps, { deleteProductFromCart, })(ProductInCart);","map":{"version":3,"sources":["D:/project-good/project/client/src/components/auction/ProductInCart.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import './Auction.scss';\r\n// import { Header, Modal } from 'semantic-ui-react';\r\n// import p from '../../img/car.jpg';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import Card from '@material-ui/core/Card';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import { connect } from \"react-redux\";\r\n// import Button from '@material-ui/core/Button';\r\n// import { deleteProductFromCart } from '../../store/actions/user';\r\n// import { setCntOfProductInCart } from '../../store/actions/currentAuction';\r\n// import React, { useEffect, useState } from 'react';\r\n\r\n// const useStyles = makeStyles({\r\n//   root: {\r\n//     maxWidth: 300,\r\n//   },\r\n//   media: {\r\n//     height: 160,\r\n//   },\r\n// });\r\n\r\n// const getCnt = (_id) => {\r\n//   let arr = JSON.parse(localStorage.getItem(\"shoppingCart\"));\r\n//   if (!arr) return 0;\r\n//   let index = arr.findIndex(item => item.product_id == _id);\r\n//   if (index != -1)\r\n//     return arr[index].cnt;\r\n//   return 0;\r\n// }\r\n\r\n// const ProductInCart = (props) => {\r\n//   const [open, setOpen] = React.useState(false)\r\n//   const classes = useStyles();\r\n\r\n//   let image_src = p;//עד שנעשה את הקטע של התמונות\r\n//   let description = props.item.product.description;\r\n//   let name = props.item.product.name;\r\n//   let price = props.item.product.prices;\r\n//   let _id = props.item.product._id;\r\n\r\n//   return (\r\n//     <Modal\r\n//       closeIcon\r\n//       open={open}\r\n//       trigger={\r\n//         <Card className={classes.root} >\r\n//           {name}\r\n//           <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n//             {price}\r\n//           </Typography>\r\n//           <CardMedia\r\n//             className={classes.media}\r\n//             image={image_src}\r\n//             title=\"Contemplative Reptile\"\r\n//           />\r\n\r\n//           <i className=\"trash icon\" onClick={(e) => { e.stopPropagation(); props.deleteProductFromCart(_id) }}></i>\r\n//           <IconButton color=\"primary\"\r\n//             onClick={(e) => {\r\n//               let c = getCnt(_id);\r\n//               if (c > 0) props.setCntOfProductInCart(_id, c - 1);\r\n//               e.stopPropagation();\r\n//             }}  >\r\n//             -</IconButton>\r\n//           <h2>{getCnt()}</h2>\r\n//           <IconButton color=\"primary\"\r\n//             onClick={(e) => {\r\n//               let c = getCnt(_id);\r\n//               props.setCntOfProductInCart(_id, c + 1);\r\n\r\n//               e.stopPropagation();\r\n//             }}\r\n//           >+</IconButton>\r\n//         </Card >}\r\n//       onClose={() => setOpen(false)}\r\n//       onOpen={() => setOpen(true)}\r\n//     >\r\n\r\n//       <Header ><h1>{name}</h1></Header>\r\n//       <Modal.Content>\r\n//         {description}<br />\r\n//         <img src={image_src}></img>\r\n//       </Modal.Content>\r\n//     </Modal >\r\n//   )\r\n// }\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     currentUser: state.user.currentUser,\r\n//     loginIsOpen: state.user.loginIsOpen,\r\n//     currnetAuction: state.auction\r\n//   }\r\n// }\r\n// export default connect(mapStateToProps, { deleteProductFromCart, })(ProductInCart);"]},"metadata":{},"sourceType":"module"}