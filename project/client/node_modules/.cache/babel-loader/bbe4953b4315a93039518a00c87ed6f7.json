{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\user\\\\AuctionManagerTable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport Button from '@material-ui/core/Button';\nimport './tables.scss';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { getAuctionsArray } from '../../store/actions/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    width: '80%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\n\nconst AuctionManagerTable = props => {\n  _s();\n\n  const columns = [{\n    id: 'name',\n    label: 'Chinese auction Name',\n    minWidth: 170\n  }, {\n    id: 'start_date',\n    label: 'Start Date',\n    minWidth: 170,\n    align: 'right' // format: (value) => moment(value).format('D/MM/YYYY')\n\n  }, {\n    id: 'end_date',\n    label: 'Lotteries date',\n    minWidth: 170,\n    align: 'right' //  format: (value) =>moment(value).format('D/MM/YYYY')\n\n  }, {\n    id: 'done',\n    label: 'Done',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toFixed(2)\n  }, {\n    id: 'options',\n    label: 'Options',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toFixed(2)\n  }];\n\n  const options = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"optionsBtn\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Lottery approval\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 21\n  }, this);\n\n  function createData(name, start_date, end_date, done) {\n    return {\n      name,\n      start_date,\n      end_date,\n      done,\n      options\n    };\n  }\n  /*const rows = [\r\n      // TODO: sort by date\r\n      // TODO: למה צריך לעשות כאן את המומנט\r\n      createData('לזכות ברגע', moment(new Date(2021, 7, 1)).format('D/MM/YYYY'), moment(new Date(2021, 9, 1)).format('D/MM/YYYY'), 'false'),\r\n      createData('הרבה נחת', moment(new Date(2021, 8, 1)).format('D/MM/YYYY'), moment(new Date(2021, 10, 1)).format('D/MM/YYYY'), 'false'),\r\n      createData('ועל גמילות חסדים', moment(new Date(2020, 10, 1)).format('D/MM/YYYY'), moment(new Date(2020, 12, 1)).format('D/MM/YYYY'), 'true')\r\n  ];*/\n\n\n  const rows = props.getAuctionsArray(props.currentUser).map(item => {\n    return createData(item.name, item.registrationStartDate, item.lotteriesDate, item.status);\n  });\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chinese Auction Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            className: \"auctionManagerTableCls\",\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: column.align,\n                style: {\n                  minWidth: column.minWidth\n                },\n                children: column.label\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                tabIndex: -1,\n                children: columns.map(column => {\n                  const value = row[column.id];\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: column.align,\n                    children: column.format && typeof value === 'number' ? column.format(value) : value\n                  }, column.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, row.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuctionManagerTable, \"1LSjuq2DZUwZxE9BYIdgLLfYYP4=\", false, function () {\n  return [useStyles];\n});\n\n_c = AuctionManagerTable;\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.user.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAuctionsArray\n})(AuctionManagerTable);\n\nvar _c;\n\n$RefreshReg$(_c, \"AuctionManagerTable\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/user/AuctionManagerTable.js"],"names":["React","connect","moment","Button","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","getAuctionsArray","useStyles","root","width","container","maxHeight","AuctionManagerTable","props","columns","id","label","minWidth","align","format","value","toFixed","options","createData","name","start_date","end_date","done","rows","currentUser","map","item","registrationStartDate","lotteriesDate","status","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","column","slice","row","code","length","mapStateToProps","state","user"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment'\r\nimport Button from '@material-ui/core/Button';\r\nimport './tables.scss'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport { getAuctionsArray } from '../../store/actions/user'\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '80%',\r\n    },\r\n    container: {\r\n        maxHeight: 440,\r\n    }\r\n});\r\n\r\nconst AuctionManagerTable = (props) => {\r\n    const columns = [\r\n        { id: 'name', label: 'Chinese auction Name', minWidth: 170 },\r\n        {\r\n            id: 'start_date',\r\n            label: 'Start Date',\r\n            minWidth: 170,\r\n            align: 'right',\r\n            // format: (value) => moment(value).format('D/MM/YYYY')\r\n        },\r\n        {\r\n            id: 'end_date',\r\n            label: 'Lotteries date',\r\n            minWidth: 170,\r\n            align: 'right',\r\n            //  format: (value) =>moment(value).format('D/MM/YYYY')\r\n        },\r\n        {\r\n            id: 'done',\r\n            label: 'Done',\r\n            minWidth: 170,\r\n            align: 'right',\r\n            format: (value) => value.toFixed(2),\r\n        },\r\n        {\r\n            id: 'options',\r\n            label: 'Options',\r\n            minWidth: 170,\r\n            align: 'right',\r\n            format: (value) => value.toFixed(2),\r\n        }\r\n    ];\r\n    const options = <div className=\"optionsBtn\">\r\n        <Button>Edit</Button>\r\n        <Button>Delete</Button>\r\n        <Button>Statistics</Button>\r\n        <Button>Results</Button>\r\n        <Button>Lottery approval</Button>\r\n    </div>\r\n\r\n    function createData(name, start_date, end_date, done) {\r\n        return { name, start_date, end_date, done, options };\r\n    }\r\n\r\n    /*const rows = [\r\n        // TODO: sort by date\r\n        // TODO: למה צריך לעשות כאן את המומנט\r\n        createData('לזכות ברגע', moment(new Date(2021, 7, 1)).format('D/MM/YYYY'), moment(new Date(2021, 9, 1)).format('D/MM/YYYY'), 'false'),\r\n        createData('הרבה נחת', moment(new Date(2021, 8, 1)).format('D/MM/YYYY'), moment(new Date(2021, 10, 1)).format('D/MM/YYYY'), 'false'),\r\n        createData('ועל גמילות חסדים', moment(new Date(2020, 10, 1)).format('D/MM/YYYY'), moment(new Date(2020, 12, 1)).format('D/MM/YYYY'), 'true')\r\n    ];*/\r\n\r\n\r\n    const rows = props.getAuctionsArray(props.currentUser).map((item) => {\r\n        return createData(item.name, item.registrationStartDate, item.lotteriesDate, item.status);\r\n    });\r\n\r\n\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <center>\r\n            <h1>Chinese Auction Manager</h1>\r\n            <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead className='auctionManagerTableCls'>\r\n                            <TableRow>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{ minWidth: column.minWidth }}\r\n                                    >\r\n                                        {column.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                                return (\r\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                        {columns.map((column) => {\r\n                                            const value = row[column.id];\r\n                                            return (\r\n                                                <TableCell key={column.id} align={column.align}>\r\n                                                    {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                                </TableCell>\r\n                                            );\r\n                                        })}\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </center>);\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.user.currentUser\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { getAuctionsArray })(AuctionManagerTable);\r\n"]},"metadata":{},"sourceType":"module"}