{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\auction\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport ProductInCart from './ProductInCart';\nimport { Link } from 'react-router-dom';\nimport './Cart.scss';\nimport Button from '@material-ui/core/Button';\nimport Order from '../../models/order';\nimport { updateShoppingCart } from '../../store/actions/user';\nimport { connect } from \"react-redux\";\nimport React, { useEffect, useState } from 'react';\nimport { emptyTheCartByAuction, addOrderToDB } from '../../utils/userUtils';\nimport { getProductsInCartByAuctionIdFromDB } from '../../utils/userUtils';\nimport { setUserByStorage, setCurrentAuctionByStorage, setNewAuctionByStorage } from '../../store/actions/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const amountToPay = () => {\n    let sum = 0;\n    if (props.user.shoppingCartOfCurrentAuction.length == 0) return 0;\n    props.user.shoppingCartOfCurrentAuction.map(item => {\n      sum += item.qty * item.productId.price;\n    });\n    return sum;\n  };\n\n  const orderCompletion = () => {\n    const newOrder = new Order(props.currentUser, props.user.shoppingCartOfCurrentAuction, \"\", //אחרי זה להכניס קוד תשלום\n    amountToPay(), props.currentAuction._id, [], //להוסיף בחירת מתנות\n    new Date()); //הפונקציה הזו מוסיפה לטבלת ההזמנות ומוחקת למשתמש את המוצרים של המכירה הזו מהסל\n\n    addOrderToDB(newOrder).then(succ => {\n      if (succ.status != 400) {\n        props.updateShoppingCart([]);\n      }\n    });\n  };\n\n  useEffect(() => {\n    let id = localStorage.getItem(\"user\");\n\n    if (id && props.currentUser == null) {\n      let a_id = localStorage.getItem(\"currentAuction\");\n      let n_a_id = localStorage.getItem(\"newAuction\");\n      if (a_id) props.setCurrentAuctionByStorage(a_id);\n      if (n_a_id) props.setNewAuctionByStorage(n_a_id);\n      props.setUserByStorage(id);\n    }\n\n    getProductsInCartByAuctionIdFromDB(props.user.currentUser._id, props.currentAuction._id).then(succ => {\n      if (succ.status != 400) {\n        props.updateShoppingCart(succ.data);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cart Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: '/auction',\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"cart-products-container\",\n      children: props.user && props.user.shoppingCartOfCurrentAuction && props.user.shoppingCartOfCurrentAuction.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(ProductInCart, {\n          qty: item.qty,\n          productInCart: item.productId\n        }, parseInt(index), false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), props.user && props.user.shoppingCartOfCurrentAuction && amountToPay() != 0 && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: orderCompletion,\n      children: \"PAY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 93\n    }, this), props.user && props.user.shoppingCartOfCurrentAuction && amountToPay() != 0 && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: amountToPay() + \"₪\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 93\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Cart;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    currentAuction: state.currentAuction.currentAuction,\n    currentUser: state.user.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateShoppingCart\n})(Cart);\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/auction/Cart.js"],"names":["ProductInCart","Link","Button","Order","updateShoppingCart","connect","React","useEffect","useState","emptyTheCartByAuction","addOrderToDB","getProductsInCartByAuctionIdFromDB","setUserByStorage","setCurrentAuctionByStorage","setNewAuctionByStorage","Cart","props","amountToPay","sum","user","shoppingCartOfCurrentAuction","length","map","item","qty","productId","price","orderCompletion","newOrder","currentUser","currentAuction","_id","Date","then","succ","status","id","localStorage","getItem","a_id","n_a_id","data","index","parseInt","mapStateToProps","state"],"mappings":"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","sourcesContent":["import ProductInCart from './ProductInCart'\r\nimport { Link } from 'react-router-dom'\r\nimport './Cart.scss';\r\nimport Button from '@material-ui/core/Button';\r\nimport Order from '../../models/order';\r\nimport { updateShoppingCart } from '../../store/actions/user';\r\nimport { connect } from \"react-redux\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { emptyTheCartByAuction, addOrderToDB } from '../../utils/userUtils';\r\nimport { getProductsInCartByAuctionIdFromDB } from '../../utils/userUtils';\r\nimport { setUserByStorage, setCurrentAuctionByStorage, setNewAuctionByStorage } from '../../store/actions/user';\r\nconst Cart = (props) => {\r\n\r\n    const amountToPay = () => {\r\n        let sum = 0;\r\n        if (props.user.shoppingCartOfCurrentAuction.length == 0) return 0;\r\n        props.user.shoppingCartOfCurrentAuction.map((item) => { sum += item.qty * item.productId.price });\r\n        return sum;\r\n    }\r\n\r\n\r\n\r\n    const orderCompletion = () => {\r\n        const newOrder = new Order(\r\n            props.currentUser,\r\n            props.user.shoppingCartOfCurrentAuction,\r\n            \"\",//אחרי זה להכניס קוד תשלום\r\n            amountToPay(),\r\n            props.currentAuction._id,\r\n            [],//להוסיף בחירת מתנות\r\n            new Date()\r\n        );\r\n\r\n        //הפונקציה הזו מוסיפה לטבלת ההזמנות ומוחקת למשתמש את המוצרים של המכירה הזו מהסל\r\n        addOrderToDB(newOrder).then(succ => {\r\n            if (succ.status != 400) {\r\n                props.updateShoppingCart([]);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        let id = localStorage.getItem(\"user\");\r\n         \r\n        if (id && props.currentUser == null) {\r\n             \r\n            let a_id = localStorage.getItem(\"currentAuction\"); let n_a_id = localStorage.getItem(\"newAuction\");\r\n            if (a_id) props.setCurrentAuctionByStorage(a_id);\r\n            if (n_a_id) props.setNewAuctionByStorage(n_a_id);\r\n            props.setUserByStorage(id);\r\n        }\r\n        getProductsInCartByAuctionIdFromDB(props.user.currentUser._id, props.currentAuction._id).then(succ => {\r\n            if (succ.status != 400) { props.updateShoppingCart(succ.data); }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h1>Cart Component</h1>\r\n            <Link to={'/auction'}>Back</Link>{/*לצאת מהסל, חזרה לכל המוצרים*/}\r\n\r\n            <div id=\"cart-products-container\">\r\n                {/* מערך רק של המוצרים מהמכירה הזו */}\r\n                {props.user && props.user.shoppingCartOfCurrentAuction && props.user.shoppingCartOfCurrentAuction.map((item, index) => {\r\n                    return (<ProductInCart key={parseInt(index)} qty={item.qty} productInCart={item.productId} />)\r\n                })}\r\n            </div>\r\n\r\n            {props.user && props.user.shoppingCartOfCurrentAuction && amountToPay() != 0 && <Button onClick={orderCompletion}>PAY</Button>}\r\n\r\n            {/* TODO: איך התצוגה תתרענן פה */}\r\n            {props.user && props.user.shoppingCartOfCurrentAuction && amountToPay() != 0 && <h1>{amountToPay() + \"₪\"}</h1>}\r\n            {/* ולשלוח את הסכום שנדרש לשלם pay apl-פה צריך להתממשק ל */}\r\n        </div>);\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        currentAuction: state.currentAuction.currentAuction,\r\n        currentUser:state.user.currentUser\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { updateShoppingCart })(Cart);"]},"metadata":{},"sourceType":"module"}