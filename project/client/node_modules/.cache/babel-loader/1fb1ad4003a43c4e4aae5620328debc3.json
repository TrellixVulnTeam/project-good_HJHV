{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\new auction\\\\AuctionInformation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport './NewAuction.scss';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { saveAuctionInformationInDB } from '../../utils/newAuctionUtils';\nimport { useForm } from \"react-hook-form\";\nimport { TextField } from \"@mui/material\";\nimport Alert from '@mui/material/Alert';\nimport { setNewAuction } from '../../store/actions/newAuction';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel'; //TODO שהתאריכים יהיו הגיוניים\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nconst AuctionInformation = props => {\n  _s();\n\n  let saveDetails = () => {\n    let details = {\n      registrationStartDate: selectedDate2,\n      lotteriesDate: selectedDate1,\n      registrationEndDate: selectedDate3,\n      lotteryApproval: lotteryApproval,\n      publicationApproval: publicationApproval,\n      name: name || \"unknown\"\n    };\n    saveAuctionInformationInDB(props.auctionId, details).then(succ => {\n      if (succ.status != 400) props.setNewAuction(succ.data);\n    });\n  };\n\n  const classes = useStyles();\n  const [selectedDate1, setSelectedDate1] = React.useState(props.auction.lotteriesDate || null); //lotery\n\n  const [selectedDate2, setSelectedDate2] = React.useState(props.auction.registrationStartDate || null); //start\n\n  const [selectedDate3, setSelectedDate3] = React.useState(props.auction.registrationEndDate || null); //end\n\n  const [lotteryApproval, setLotteryApproval] = React.useState(false);\n  const [publicationApproval, setPublicationApproval] = React.useState(false);\n  const [name, setName] = React.useState(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Auction information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputs-in-form-container\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: \"txt\",\n          type: \"text\",\n          variant: \"standard\",\n          id: \"input-with-icon-grid\",\n          label: \"Auction name\",\n          onChange: e => {\n            setName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          className: \"auctionInformationDate\",\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            disableToolbar: true,\n            variant: \"inline\",\n            format: \"dd/MM/yyyy\",\n            margin: \"normal\",\n            id: \"date-picker-inline\",\n            label: \"Date of the lottery\",\n            value: selectedDate1,\n            onChange: date => {\n              setSelectedDate1(date);\n            },\n            KeyboardButtonProps: {\n              'aria-label': 'change date'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            disableToolbar: true,\n            variant: \"inline\",\n            format: \"dd/MM/yyyy\",\n            margin: \"normal\",\n            id: \"date-picker-inline\",\n            label: \"Registration start date\",\n            value: selectedDate2,\n            onChange: date => {\n              setSelectedDate2(date);\n            },\n            KeyboardButtonProps: {\n              'aria-label': 'change date'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            disableToolbar: true,\n            variant: \"inline\",\n            format: \"dd/MM/yyyy\",\n            margin: \"normal\",\n            id: \"date-picker-inline\",\n            label: \"Registration end date\",\n            value: selectedDate3,\n            onChange: date => {\n              setSelectedDate3(date);\n            },\n            KeyboardButtonProps: {\n              'aria-label': 'change date'\n            } // defaultValue={props.auction.registrationEndDate}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"default\",\n          className: classes.button,\n          startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 32\n          }, this),\n          children: \"Upload Terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            onChange: e => {\n              debugger;\n              setPublicationApproval(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 44\n          }, this),\n          label: \"Publication approval\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            onChange: e => {\n              setLotteryApproval(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 44\n          }, this),\n          label: \"Lottery approval\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveDetails,\n      className: \"positive ui button\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true); //submit!!!!\n  //לבדוק שהתאריכים תקינים\n  //סיום ההרשמה ולפני ביצוע ההגרלות\n};\n\n_s(AuctionInformation, \"HW93DyD+7R6jiOmF38pEBVpWkKI=\", false, function () {\n  return [useStyles];\n});\n\n_c = AuctionInformation;\n\nconst mapStateToProps = state => {\n  return {\n    auctionId: state.auction.newAuction._id,\n    auction: state.auction.newAuction\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setNewAuction\n})(AuctionInformation);\n\nvar _c;\n\n$RefreshReg$(_c, \"AuctionInformation\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/new auction/AuctionInformation.js"],"names":["React","useEffect","useState","connect","makeStyles","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","Button","CloudUploadIcon","saveAuctionInformationInDB","useForm","TextField","Alert","setNewAuction","Checkbox","FormControlLabel","useStyles","theme","root","margin","spacing","AuctionInformation","props","saveDetails","details","registrationStartDate","selectedDate2","lotteriesDate","selectedDate1","registrationEndDate","selectedDate3","lotteryApproval","publicationApproval","name","auctionId","then","succ","status","data","classes","setSelectedDate1","auction","setSelectedDate2","setSelectedDate3","setLotteryApproval","setPublicationApproval","setName","e","target","value","date","button","mapStateToProps","state","newAuction","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './NewAuction.scss'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { saveAuctionInformationInDB } from '../../utils/newAuctionUtils';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { TextField } from \"@mui/material\";\r\nimport Alert from '@mui/material/Alert';\r\nimport { setNewAuction } from '../../store/actions/newAuction';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n//TODO שהתאריכים יהיו הגיוניים\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n    },\r\n}));\r\n\r\nconst AuctionInformation = (props) => {\r\n    let saveDetails = () => {\r\n\r\n\r\n        let details = {\r\n            registrationStartDate: selectedDate2,\r\n            lotteriesDate: selectedDate1,\r\n            registrationEndDate: selectedDate3,\r\n            lotteryApproval: lotteryApproval,\r\n            publicationApproval: publicationApproval,\r\n            name: name || \"unknown\"\r\n        }\r\n\r\n        saveAuctionInformationInDB(props.auctionId, details).then(succ => {\r\n            if (succ.status != 400) props.setNewAuction(succ.data);\r\n        })\r\n    }\r\n    const classes = useStyles();\r\n\r\n    const [selectedDate1, setSelectedDate1] = React.useState(props.auction.lotteriesDate || null);//lotery\r\n    const [selectedDate2, setSelectedDate2] = React.useState(props.auction.registrationStartDate || null);//start\r\n    const [selectedDate3, setSelectedDate3] = React.useState(props.auction.registrationEndDate || null);//end\r\n    const [lotteryApproval, setLotteryApproval] = React.useState(false);\r\n    const [publicationApproval, setPublicationApproval] = React.useState(false);\r\n    const [name, setName] = React.useState(null);\r\n\r\n    return (\r\n        <><form className={classes.root} noValidate autoComplete=\"off\" >\r\n            <h1>Auction information</h1>\r\n            <div className={\"inputs-in-form-container\"} >\r\n                <TextField className=\"txt\" type=\"text\" variant=\"standard\" id=\"input-with-icon-grid\" label=\"Auction name\" onChange={(e) => { setName(e.target.value) }} />\r\n\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} className=\"auctionInformationDate\">\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-inline\"\r\n                        label=\"Date of the lottery\"\r\n                        value={selectedDate1}\r\n                        onChange={(date) => { setSelectedDate1(date) }}\r\n\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                        }}\r\n                    />\r\n\r\n                </MuiPickersUtilsProvider>\r\n\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-inline\"\r\n                        label=\"Registration start date\"\r\n                        value={selectedDate2}\r\n                        onChange={(date) => { setSelectedDate2(date) }}\r\n\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                        }}\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-inline\"\r\n                        label=\"Registration end date\"\r\n                        value={selectedDate3}\r\n                        onChange={(date) => { setSelectedDate3(date) }}\r\n\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                        }}\r\n\r\n                    // defaultValue={props.auction.registrationEndDate}\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"default\"\r\n                    className={classes.button}\r\n                    startIcon={<CloudUploadIcon />}\r\n\r\n                >\r\n                    Upload Terms\r\n                </Button>\r\n\r\n                <FormControlLabel control={<Checkbox onChange={(e) => { debugger; setPublicationApproval(e.target.value) }} />} label=\"Publication approval\" />\r\n\r\n                <FormControlLabel control={<Checkbox onChange={(e) => { setLotteryApproval(e.target.value) }} />} label=\"Lottery approval\" />\r\n            </div>\r\n\r\n        </form >\r\n            <button onClick={saveDetails} className=\"positive ui button\">Save</button>\r\n        </>\r\n    );\r\n\r\n\r\n    //submit!!!!\r\n    //לבדוק שהתאריכים תקינים\r\n    //סיום ההרשמה ולפני ביצוע ההגרלות\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auctionId: state.auction.newAuction._id,\r\n        auction: state.auction.newAuction\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { setNewAuction })(AuctionInformation);\r\n\r\n"]},"metadata":{},"sourceType":"module"}