{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\user\\\\auction manager\\\\AuctionResults.js\",\n    _s = $RefreshSig$();\n\nimport '../yourProfile.scss';\nimport { connect } from 'react-redux';\nimport './auctionManager.scss';\nimport { getAuctionWithWinnersForManagerFromDB } from '../../../utils/auctionUtils';\nimport React, { useEffect, useState } from \"react\";\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AuctionResults = props => {\n  _s();\n\n  useEffect(() => {\n    if (props.auction) getAuctionWithWinnersForManagerFromDB(props.auction._id).then(succ => {\n      setProductsList(succ.data.productList); //רשיתמ מוצרים עם הזוכים של מכירה זו\n\n      console.log(succ.data);\n    });else window.location = \"http://localhost:3000/your_profile\";\n  }, []);\n  let [productsList, setProductsList] = useState([]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.auction && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [props.auction.organizationName ? props.auction.organizationName + \" - \" : \"\", props.auction.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chinese auction results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), productsList.map((p, index) => {\n        // <p key={index}>{p.name}:{p.winnerId.userName}</p>\n        if (p.winnerId) return /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            width: '100%',\n            maxWidth: 360,\n            bgcolor: 'background.paper'\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            alignItems: \"flex-start\",\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                alt: \"Remy Sharp\",\n                src: p.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: p.name,\n              secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    display: 'inline'\n                  },\n                  component: \"span\",\n                  variant: \"body2\",\n                  color: \"text.primary\",\n                  children: p.winnerId && p.winnerId.userName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 45\n                }, this), `${p.city}, ${p.email}, ${p.phone}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"inset\",\n            component: \"li\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this);else return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: p.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 33\n        }, this);\n      })]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(AuctionResults, \"dopC2/d/hojz18YrSxopik+5xVI=\");\n\n_c = AuctionResults;\n\nconst mapStateToProps = state => {\n  return {\n    auction: state.auctionManager.selected_auction_to_options\n  };\n};\n\nexport default connect(mapStateToProps, {})(AuctionResults);\n\nvar _c;\n\n$RefreshReg$(_c, \"AuctionResults\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/user/auction manager/AuctionResults.js"],"names":["connect","getAuctionWithWinnersForManagerFromDB","React","useEffect","useState","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Typography","AuctionResults","props","auction","_id","then","succ","setProductsList","data","productList","console","log","window","location","productsList","organizationName","name","map","p","index","winnerId","width","maxWidth","bgcolor","image","display","userName","city","email","phone","mapStateToProps","state","auctionManager","selected_auction_to_options"],"mappings":"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","sourcesContent":["import '../yourProfile.scss'\r\nimport { connect } from 'react-redux';\r\nimport './auctionManager.scss'\r\nimport { getAuctionWithWinnersForManagerFromDB } from '../../../utils/auctionUtils';\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Typography from '@mui/material/Typography';\r\nconst AuctionResults = (props) => {\r\n\r\n    useEffect(() => {\r\n        if (props.auction)\r\n            getAuctionWithWinnersForManagerFromDB(props.auction._id).then(succ => {\r\n                setProductsList(succ.data.productList);//רשיתמ מוצרים עם הזוכים של מכירה זו\r\n                console.log(succ.data)\r\n            });\r\n        else window.location = \"http://localhost:3000/your_profile\"\r\n    }, []);\r\n\r\n    let [productsList, setProductsList] = useState([]);\r\n\r\n    return (<>\r\n        {props.auction &&\r\n            (<>\r\n                <h1>{props.auction.organizationName ? props.auction.organizationName + \" - \" : \"\"}{props.auction.name}</h1>\r\n                <h2>Chinese auction results</h2>\r\n                {productsList.map((p, index) => {\r\n                    // <p key={index}>{p.name}:{p.winnerId.userName}</p>\r\n                    if (p.winnerId) return (\r\n                        <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\r\n                            <ListItem alignItems=\"flex-start\">\r\n                                <ListItemAvatar>\r\n                                    <Avatar alt=\"Remy Sharp\" src={p.image} />\r\n                                    {/* TODO default image */}\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primary={p.name}\r\n                                    secondary={\r\n                                        <React.Fragment>\r\n                                            <Typography\r\n                                                sx={{ display: 'inline' }}\r\n                                                component=\"span\"\r\n                                                variant=\"body2\"\r\n                                                color=\"text.primary\"\r\n                                            >\r\n                                                {p.winnerId && p.winnerId.userName}\r\n                                            </Typography>\r\n                                            {`${p.city}, ${p.email}, ${p.phone}`}\r\n                                        </React.Fragment>\r\n                                    }\r\n                                />\r\n                            </ListItem>\r\n                            <Divider variant=\"inset\" component=\"li\" />\r\n                        </List>)\r\n\r\n                    else return <p key={index}>{p.name}</p>\r\n                })}\r\n            </>)}\r\n    </>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auction: state.auctionManager.selected_auction_to_options\r\n\r\n    };\r\n}\r\nexport default connect(mapStateToProps, {})(AuctionResults);"]},"metadata":{},"sourceType":"module"}