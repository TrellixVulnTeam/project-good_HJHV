{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\user\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { addUserToDB } from '../../utils/userUtils'; //הוספת משתמש למאגר\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Button from '@material-ui/core/Button';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport './User.scss';\nimport User from '../../models/user';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { setCurrentUser } from '../../store/actions/signUp';\nimport { connect } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { setLogin } from '../../store/actions/home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: '25ch'\n  },\n  input_pas_ma: {\n    color: '#8e8e95',\n    height: '4vh !important',\n    background: 'none !important',\n    color: '#8e8e95 !important',\n    width: '70% !important',\n    padding: '0vw !important',\n    borderBottomColor: '8e8e95 !important',\n    background: 'none !important',\n    alignSelf: 'flex-end',\n    marginRight: 'auto',\n    marginLeft: 'auto'\n  },\n  eye: {\n    color: '#8e8e95'\n  },\n  placeholder_in_form: {\n    marginLeft: '3% !important',\n    marginBottom: ' -2% !important'\n  }\n}));\n\nconst SignUp = props => {\n  _s();\n\n  const classes = useStyles(); // const handleChangePassword = (prop) => (event) => {\n  //     setValues({ ...values, [prop]: event.target.value });\n  //     setNewUser(prevState => ({\n  //         ...prevState,\n  //         ['password']: event.target.value\n  //     }))\n  // };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false\n  }); // const [newUser, setNewUser] = useState({ password: \"\", userName: \"\", email: \"\", phone: \"\", birthYear: \"\", city: \"\", confidentiality: false })\n  // const handleChange = e => {\n  //     const { name, value } = e.target;\n  //     setNewUser(prevState => ({\n  //         ...prevState,\n  //         [name]: value\n  //     }))\n  // }\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  let password = \"\";\n  let email = \"\";\n  let name = \"\";\n  let city = \"\";\n  let birthYear = \"\";\n  let phone = \"\";\n  let confidentiality = false;\n\n  let submit = (data, e) => {\n    e.preventDefault();\n    password = data.password;\n    email = data.email;\n    name = data.name;\n    city = data.city;\n    birthYear = data.birthYear;\n    phone = data.phone;\n    confidentiality = data.confidentiality;\n    let addNewUser = new User(password, name, email, phone, birthYear, city, confidentiality);\n    console.log(addNewUser);\n    addUserToDB(addNewUser).then(succ => {\n      if (succ.status != 400) {\n        props.setCurrentUser(succ.data);\n        props.setLogin(false);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit(submit),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputs_btns\",\n        children: [/*#__PURE__*/_jsxDEV(FilledInput, {\n          name: \"name\",\n          type: 'text',\n          placeholder: \"Name\",\n          required: true,\n          className: clsx(classes.margin, classes.textField, classes.input_pas_ma),\n          variant: \"filled\" // onChange={handleChange}\n          ,\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"user icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this),\n          ...register('name', {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FilledInput, {\n          name: \"email\",\n          type: 'email',\n          placeholder: \"Email address\",\n          className: clsx(classes.margin, classes.textField, classes.input_pas_ma),\n          variant: \"filled\",\n          required: true // onChange={handleChange}\n          ,\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"envelope icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this),\n          ...register('email', {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FilledInput, {\n          name: \"city\",\n          type: 'text',\n          placeholder: \"city\",\n          required: true,\n          className: clsx(classes.margin, classes.textField, classes.input_pas_ma),\n          variant: \"filled\" // onChange={handleChange}\n          ,\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"map marker alternate icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this),\n          ...register('city', {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FilledInput, {\n          name: \"birthYear\",\n          type: 'text',\n          placeholder: \"Year Of Birth\",\n          required: true,\n          className: clsx(classes.margin, classes.textField, classes.input_pas_ma),\n          variant: \"filled\" // onChange={handleChange}\n          ,\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"calendar alternate outline icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this),\n          ...register('birthYear', {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FilledInput, {\n          type: 'text',\n          name: \"phone\",\n          placeholder: \"Phone Number\",\n          required: true,\n          className: clsx(classes.margin, classes.textField, classes.input_pas_ma),\n          variant: \"filled\" // onChange={handleChange}\n          ,\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mobile alternate icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this),\n          ...register('phone', {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FilledInput, {\n          name: \"password\",\n          type: values.showPassword ? 'text' : 'password',\n          placeholder: \"Password\",\n          required: true,\n          className: clsx(classes.margin, classes.textField, classes.input_pas_ma),\n          variant: \"filled\" // onChange={handleChangePassword('password')}\n          ,\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"lock icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this),\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleClickShowPassword,\n              onMouseDown: handleMouseDownPassword,\n              className: classes.eye,\n              children: values.showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 60\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 77\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this),\n          ...register('password', {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox\n          /*onChange={(e) => setNewUser(prevState => ({\r\n          ...prevState,\r\n          ['confidentiality']: e.target.checked\r\n          }))}*/\n          , {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 26\n          }, this),\n          label: \"Confidentiality\",\n          ...register('confidentiality', {\n            required: false\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          className: \"login_btn\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"v6dEUAZPLDXxPCQPCYGsAnwcWB8=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = SignUp;\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nexport default connect(mapStateToProps, {\n  setCurrentUser,\n  setLogin\n})(SignUp); // import React, { useState } from 'react';\n// import { addUserToDB } from '../../utils/userUtils';//הוספת משתמש למאגר\n// import Visibility from '@material-ui/icons/Visibility';\n// import VisibilityOff from '@material-ui/icons/VisibilityOff';\n// import Button from '@material-ui/core/Button';\n// import InputAdornment from '@material-ui/core/InputAdornment';\n// import IconButton from '@material-ui/core/IconButton';\n// import clsx from 'clsx';\n// import { makeStyles } from '@material-ui/core/styles';\n// import FilledInput from '@material-ui/core/FilledInput';\n// import './User.scss';\n// import User from '../../models/user'\n// import Checkbox from '@mui/material/Checkbox';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import { setCurrentUser } from '../../store/actions/signUp';\n// import { connect } from \"react-redux\";\n// const useStyles = makeStyles((theme) => ({\n//     root: {\n//         display: 'flex',\n//         flexWrap: 'wrap'\n//     },\n//     margin: {\n//         margin: theme.spacing(1),\n//     },\n//     withoutLabel: {\n//         marginTop: theme.spacing(3),\n//     },\n//     textField: {\n//         width: '25ch',\n//     },\n//     input_pas_ma: {\n//         color: '#8e8e95',\n//         height: '4vh !important',\n//         background: 'none !important',\n//         color: '#8e8e95 !important',\n//         width: '70% !important',\n//         padding: '0vw !important',\n//         borderBottomColor: '8e8e95 !important',\n//         background: 'none !important',\n//         alignSelf: 'flex-end',\n//         marginRight: 'auto',\n//         marginLeft: 'auto'\n//     },\n//     eye: {\n//         color: '#8e8e95',\n//     },\n//     placeholder_in_form: {\n//         marginLeft: '3% !important',\n//         marginBottom: ' -2% !important'\n//     }\n// }));\n// const SignUp = (props) => {\n//     const classes = useStyles();\n//     const handleChangePassword = (prop) => (event) => {\n//         setValues({ ...values, [prop]: event.target.value });\n//         setNewUser(prevState => ({\n//             ...prevState,\n//             ['password']: event.target.value\n//         }))\n//     };\n//     const handleClickShowPassword = () => { setValues({ ...values, showPassword: !values.showPassword }); };\n//     const handleMouseDownPassword = (event) => { event.preventDefault(); };\n//     const [values, setValues] = React.useState({\n//         amount: '',\n//         password: '',\n//         weight: '',\n//         weightRange: '',\n//         showPassword: false,\n//     });\n//     // \n//     const [newUser, setNewUser] = useState({ password: \"\", userName: \"\", email: \"\", phone: \"\", birthYear: \"\", city: \"\", confidentiality: false })\n//     const createUser = () => {\n//         let addNewUser = new User(newUser);\n//         console.log(addNewUser)\n//         addUserToDB(addNewUser).then(succ => {\n//             if (succ.status != 400) {\n//                 localStorage.setItem(\"user\", succ.data._id)\n//                 props.setCurrentUser(succ.data);\n//             }\n//         });\n//     };\n//     const handleChange = e => {\n//         const { name, value } = e.target;\n//         setNewUser(prevState => ({\n//             ...prevState,\n//             [name]: value\n//         }))\n//     }\n//     return (\n//         <center>\n//             <form className={classes.root} noValidate autoComplete=\"off\" >\n//                 <div className={\"inputs_btns\"}>\n//                     <FilledInput\n//                         name=\"name\"\n//                         type={'text'}\n//                         placeholder=\"Name\"\n//                         required\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\n//                         variant=\"filled\"\n//                         onChange={handleChange}\n//                         startAdornment={\n//                             <InputAdornment position=\"start\">\n//                                 <i className=\"user icon\"></i>\n//                             </InputAdornment>\n//                         }\n//                     />\n//                     <FilledInput\n//                         name=\"email\"\n//                         type={'email'}\n//                         placeholder=\"Email address\"\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\n//                         variant=\"filled\"\n//                         required\n//                         onChange={handleChange}\n//                         startAdornment={\n//                             <InputAdornment position=\"start\">\n//                                 <i className=\"envelope icon\"></i>\n//                             </InputAdornment>\n//                         }\n//                     />\n//                     <FilledInput\n//                         name=\"city\"\n//                         type={'text'}\n//                         placeholder=\"city\"\n//                         required\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\n//                         variant=\"filled\"\n//                         onChange={handleChange}\n//                         startAdornment={\n//                             <InputAdornment position=\"start\">\n//                                 <i className=\"map marker alternate icon\"></i>\n//                             </InputAdornment>\n//                         }\n//                     />\n//                     <FilledInput\n//                         name=\"birthYear\"\n//                         type={'text'}\n//                         placeholder=\"Year Of Birth\"\n//                         required\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\n//                         variant=\"filled\"\n//                         onChange={handleChange}\n//                         startAdornment={\n//                             <InputAdornment position=\"start\">\n//                                 <i className=\"calendar alternate outline icon\"></i>\n//                             </InputAdornment>\n//                         }\n//                     />\n//                     <FilledInput\n//                         type={'text'}\n//                         name=\"phone\"\n//                         placeholder=\"Phone Number\"\n//                         required\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\n//                         variant=\"filled\"\n//                         onChange={handleChange}\n//                         startAdornment={\n//                             <InputAdornment position=\"start\">\n//                                 <i className=\"mobile alternate icon\" />\n//                             </InputAdornment>\n//                         }\n//                     />\n//                     <FilledInput\n//                         name=\"password\"\n//                         type={values.showPassword ? 'text' : 'password'}\n//                         placeholder=\"Password\"\n//                         required\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\n//                         variant=\"filled\"\n//                         onChange={handleChangePassword('password')}\n//                         startAdornment={\n//                             <InputAdornment position=\"start\">\n//                                 <i className=\"lock icon\" />\n//                             </InputAdornment>\n//                         }\n//                         endAdornment={\n//                             <InputAdornment position=\"end\">\n//                                 <IconButton\n//                                     onClick={handleClickShowPassword}\n//                                     onMouseDown={handleMouseDownPassword}\n//                                     className={classes.eye}\n//                                 >\n//                                     {values.showPassword ? <Visibility /> : <VisibilityOff />}\n//                                 </IconButton>\n//                             </InputAdornment>\n//                         }\n//                     />\n//                     <FormControlLabel\n//                         control=\n//                         {<Checkbox onChange={(e) => setNewUser(prevState => ({\n//                             ...prevState,\n//                             ['confidentiality']: e.target.checked\n//                         }))} />}\n//                         label=\"Confidentiality\" />\n//                     <Button type=\"button\" variant=\"contained\" className={\"login_btn\"} onClick={createUser}>Login</Button>\n//                 </div>\n//             </form>\n//         </center>\n//     );\n// }\n// const mapStateToProps = state => {\n//     return {\n//     }\n// }\n// export default connect(mapStateToProps, { setCurrentUser })(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/user/SignUp.js"],"names":["React","useState","addUserToDB","Visibility","VisibilityOff","Button","InputAdornment","IconButton","clsx","makeStyles","FilledInput","User","Checkbox","FormControlLabel","setCurrentUser","connect","useForm","setLogin","useStyles","theme","root","display","flexWrap","margin","spacing","withoutLabel","marginTop","textField","width","input_pas_ma","color","height","background","padding","borderBottomColor","alignSelf","marginRight","marginLeft","eye","placeholder_in_form","marginBottom","SignUp","props","classes","handleClickShowPassword","setValues","values","showPassword","handleMouseDownPassword","event","preventDefault","amount","password","weight","weightRange","register","handleSubmit","formState","errors","email","name","city","birthYear","phone","confidentiality","submit","data","e","addNewUser","console","log","then","succ","status","required","mapStateToProps","state"],"mappings":"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":["\r\nimport React, { useState } from 'react';\r\nimport { addUserToDB } from '../../utils/userUtils';//הוספת משתמש למאגר\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport './User.scss';\r\nimport User from '../../models/user'\r\n\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport { setCurrentUser } from '../../store/actions/signUp';\r\nimport { connect } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { setLogin } from '../../store/actions/home';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n        width: '25ch',\r\n    },\r\n    input_pas_ma: {\r\n        color: '#8e8e95',\r\n        height: '4vh !important',\r\n        background: 'none !important',\r\n        color: '#8e8e95 !important',\r\n        width: '70% !important',\r\n        padding: '0vw !important',\r\n        borderBottomColor: '8e8e95 !important',\r\n        background: 'none !important',\r\n        alignSelf: 'flex-end',\r\n        marginRight: 'auto',\r\n        marginLeft: 'auto'\r\n\r\n    },\r\n    eye: {\r\n        color: '#8e8e95',\r\n\r\n    },\r\n    placeholder_in_form: {\r\n        marginLeft: '3% !important',\r\n        marginBottom: ' -2% !important'\r\n    }\r\n}));\r\n\r\nconst SignUp = (props) => {\r\n\r\n    const classes = useStyles();\r\n    // const handleChangePassword = (prop) => (event) => {\r\n    //     setValues({ ...values, [prop]: event.target.value });\r\n    //     setNewUser(prevState => ({\r\n    //         ...prevState,\r\n    //         ['password']: event.target.value\r\n    //     }))\r\n    // };\r\n    const handleClickShowPassword = () => { setValues({ ...values, showPassword: !values.showPassword }); };\r\n    const handleMouseDownPassword = (event) => { event.preventDefault(); };\r\n    const [values, setValues] = React.useState({\r\n        amount: '',\r\n        password: '',\r\n        weight: '',\r\n        weightRange: '',\r\n        showPassword: false,\r\n    });\r\n\r\n    // const [newUser, setNewUser] = useState({ password: \"\", userName: \"\", email: \"\", phone: \"\", birthYear: \"\", city: \"\", confidentiality: false })\r\n\r\n    // const handleChange = e => {\r\n    //     const { name, value } = e.target;\r\n    //     setNewUser(prevState => ({\r\n    //         ...prevState,\r\n    //         [name]: value\r\n    //     }))\r\n    // }\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    let password = \"\";\r\n    let email = \"\";\r\n    let name = \"\";\r\n    let city = \"\";\r\n    let birthYear = \"\";\r\n    let phone = \"\";\r\n    let confidentiality = false;\r\n\r\n    let submit = (data, e) => {\r\n        e.preventDefault();\r\n\r\n        password = data.password;\r\n        email = data.email;\r\n        name = data.name;\r\n        city = data.city;\r\n        birthYear = data.birthYear;\r\n        phone = data.phone;\r\n        confidentiality = data.confidentiality;\r\n        let addNewUser = new User(password, name, email, phone, birthYear, city, confidentiality)\r\n\r\n        console.log(addNewUser)\r\n        addUserToDB(addNewUser).then(succ => {\r\n            if (succ.status != 400) {\r\n                props.setCurrentUser(succ.data);\r\n                props.setLogin(false)\r\n            }\r\n        });\r\n    }\r\n    return (\r\n        <center>\r\n            <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit(submit)}>\r\n                <div className={\"inputs_btns\"}>\r\n\r\n                    <FilledInput\r\n                        name=\"name\"\r\n                        type={'text'}\r\n                        placeholder=\"Name\"\r\n                        required\r\n                        className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n                        variant=\"filled\"\r\n                        // onChange={handleChange}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <i className=\"user icon\"></i>\r\n                            </InputAdornment>\r\n                        }\r\n                        {...register('name', { required: true })}\r\n\r\n                    />\r\n                    <FilledInput\r\n                        name=\"email\"\r\n                        type={'email'}\r\n                        placeholder=\"Email address\"\r\n                        className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n                        variant=\"filled\"\r\n                        required\r\n                        // onChange={handleChange}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <i className=\"envelope icon\"></i>\r\n                            </InputAdornment>\r\n                        }\r\n                        {...register('email', { required: true })}\r\n\r\n                    />\r\n                    <FilledInput\r\n                        name=\"city\"\r\n                        type={'text'}\r\n                        placeholder=\"city\"\r\n                        required\r\n                        className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n                        variant=\"filled\"\r\n                        // onChange={handleChange}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <i className=\"map marker alternate icon\"></i>\r\n                            </InputAdornment>\r\n                        }\r\n                        {...register('city', { required: true })}\r\n\r\n                    />\r\n                    <FilledInput\r\n                        name=\"birthYear\"\r\n                        type={'text'}\r\n                        placeholder=\"Year Of Birth\"\r\n                        required\r\n                        className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n                        variant=\"filled\"\r\n                        // onChange={handleChange}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <i className=\"calendar alternate outline icon\"></i>\r\n                            </InputAdornment>\r\n                        }\r\n                        {...register('birthYear', { required: true })}\r\n\r\n                    />\r\n                    <FilledInput\r\n                        type={'text'}\r\n                        name=\"phone\"\r\n                        placeholder=\"Phone Number\"\r\n                        required\r\n                        className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n                        variant=\"filled\"\r\n                        // onChange={handleChange}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <i className=\"mobile alternate icon\" />\r\n                            </InputAdornment>\r\n                        }\r\n                        {...register('phone', { required: true })}\r\n\r\n                    />\r\n                    <FilledInput\r\n                        name=\"password\"\r\n                        type={values.showPassword ? 'text' : 'password'}\r\n                        placeholder=\"Password\"\r\n                        required\r\n                        className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n                        variant=\"filled\"\r\n                        // onChange={handleChangePassword('password')}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <i className=\"lock icon\" />\r\n                            </InputAdornment>\r\n                        }\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    onClick={handleClickShowPassword}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                    className={classes.eye}\r\n                                >\r\n                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                        {...register('password', { required: true })}\r\n\r\n                    />\r\n                    <FormControlLabel\r\n                        control=\r\n                        {<Checkbox /*onChange={(e) => setNewUser(prevState => ({\r\n                            ...prevState,\r\n                            ['confidentiality']: e.target.checked\r\n                        }))}*/ />}\r\n                        label=\"Confidentiality\"\r\n                        {...register('confidentiality', { required: false })}\r\n\r\n                    />\r\n\r\n                    <Button type=\"submit\" variant=\"contained\" className={\"login_btn\"} >Login</Button>\r\n\r\n                    {/* <Button type=\"button\" variant=\"contained\" className={\"login_btn\"} onClick={createUser}>Login</Button> */}\r\n                </div>\r\n\r\n            </form>\r\n        </center>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { setCurrentUser, setLogin })(SignUp);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { addUserToDB } from '../../utils/userUtils';//הוספת משתמש למאגר\r\n// import Visibility from '@material-ui/icons/Visibility';\r\n// import VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n// import Button from '@material-ui/core/Button';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import clsx from 'clsx';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import FilledInput from '@material-ui/core/FilledInput';\r\n// import './User.scss';\r\n// import User from '../../models/user'\r\n\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import { setCurrentUser } from '../../store/actions/signUp';\r\n// import { connect } from \"react-redux\";\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//         display: 'flex',\r\n//         flexWrap: 'wrap'\r\n//     },\r\n//     margin: {\r\n//         margin: theme.spacing(1),\r\n//     },\r\n//     withoutLabel: {\r\n//         marginTop: theme.spacing(3),\r\n//     },\r\n//     textField: {\r\n//         width: '25ch',\r\n//     },\r\n//     input_pas_ma: {\r\n//         color: '#8e8e95',\r\n//         height: '4vh !important',\r\n//         background: 'none !important',\r\n//         color: '#8e8e95 !important',\r\n//         width: '70% !important',\r\n//         padding: '0vw !important',\r\n//         borderBottomColor: '8e8e95 !important',\r\n//         background: 'none !important',\r\n//         alignSelf: 'flex-end',\r\n//         marginRight: 'auto',\r\n//         marginLeft: 'auto'\r\n\r\n//     },\r\n//     eye: {\r\n//         color: '#8e8e95',\r\n\r\n//     },\r\n//     placeholder_in_form: {\r\n//         marginLeft: '3% !important',\r\n//         marginBottom: ' -2% !important'\r\n//     }\r\n// }));\r\n\r\n// const SignUp = (props) => {\r\n\r\n//     const classes = useStyles();\r\n//     const handleChangePassword = (prop) => (event) => {\r\n//         setValues({ ...values, [prop]: event.target.value });\r\n//         setNewUser(prevState => ({\r\n//             ...prevState,\r\n//             ['password']: event.target.value\r\n//         }))\r\n//     };\r\n//     const handleClickShowPassword = () => { setValues({ ...values, showPassword: !values.showPassword }); };\r\n//     const handleMouseDownPassword = (event) => { event.preventDefault(); };\r\n//     const [values, setValues] = React.useState({\r\n//         amount: '',\r\n//         password: '',\r\n//         weight: '',\r\n//         weightRange: '',\r\n//         showPassword: false,\r\n//     });\r\n\r\n//     // \r\n\r\n//     const [newUser, setNewUser] = useState({ password: \"\", userName: \"\", email: \"\", phone: \"\", birthYear: \"\", city: \"\", confidentiality: false })\r\n\r\n//     const createUser = () => {\r\n//         let addNewUser = new User(newUser);\r\n//         console.log(addNewUser)\r\n//         addUserToDB(addNewUser).then(succ => {\r\n//             if (succ.status != 400) {\r\n//                 localStorage.setItem(\"user\", succ.data._id)\r\n//                 props.setCurrentUser(succ.data);\r\n//             }\r\n//         });\r\n//     };\r\n//     const handleChange = e => {\r\n//         const { name, value } = e.target;\r\n//         setNewUser(prevState => ({\r\n//             ...prevState,\r\n//             [name]: value\r\n//         }))\r\n//     }\r\n//     return (\r\n//         <center>\r\n//             <form className={classes.root} noValidate autoComplete=\"off\" >\r\n//                 <div className={\"inputs_btns\"}>\r\n\r\n//                     <FilledInput\r\n//                         name=\"name\"\r\n//                         type={'text'}\r\n//                         placeholder=\"Name\"\r\n//                         required\r\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n//                         variant=\"filled\"\r\n//                         onChange={handleChange}\r\n//                         startAdornment={\r\n//                             <InputAdornment position=\"start\">\r\n//                                 <i className=\"user icon\"></i>\r\n//                             </InputAdornment>\r\n//                         }\r\n//                     />\r\n//                     <FilledInput\r\n//                         name=\"email\"\r\n//                         type={'email'}\r\n//                         placeholder=\"Email address\"\r\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n//                         variant=\"filled\"\r\n//                         required\r\n//                         onChange={handleChange}\r\n//                         startAdornment={\r\n//                             <InputAdornment position=\"start\">\r\n//                                 <i className=\"envelope icon\"></i>\r\n//                             </InputAdornment>\r\n//                         }\r\n//                     />\r\n//                     <FilledInput\r\n//                         name=\"city\"\r\n//                         type={'text'}\r\n//                         placeholder=\"city\"\r\n//                         required\r\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n//                         variant=\"filled\"\r\n//                         onChange={handleChange}\r\n//                         startAdornment={\r\n//                             <InputAdornment position=\"start\">\r\n//                                 <i className=\"map marker alternate icon\"></i>\r\n//                             </InputAdornment>\r\n//                         }\r\n//                     />\r\n//                     <FilledInput\r\n//                         name=\"birthYear\"\r\n//                         type={'text'}\r\n//                         placeholder=\"Year Of Birth\"\r\n//                         required\r\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n//                         variant=\"filled\"\r\n//                         onChange={handleChange}\r\n//                         startAdornment={\r\n//                             <InputAdornment position=\"start\">\r\n//                                 <i className=\"calendar alternate outline icon\"></i>\r\n//                             </InputAdornment>\r\n//                         }\r\n//                     />\r\n//                     <FilledInput\r\n//                         type={'text'}\r\n//                         name=\"phone\"\r\n//                         placeholder=\"Phone Number\"\r\n//                         required\r\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n//                         variant=\"filled\"\r\n//                         onChange={handleChange}\r\n//                         startAdornment={\r\n//                             <InputAdornment position=\"start\">\r\n//                                 <i className=\"mobile alternate icon\" />\r\n//                             </InputAdornment>\r\n//                         }\r\n//                     />\r\n//                     <FilledInput\r\n//                         name=\"password\"\r\n//                         type={values.showPassword ? 'text' : 'password'}\r\n//                         placeholder=\"Password\"\r\n//                         required\r\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n//                         variant=\"filled\"\r\n//                         onChange={handleChangePassword('password')}\r\n//                         startAdornment={\r\n//                             <InputAdornment position=\"start\">\r\n//                                 <i className=\"lock icon\" />\r\n//                             </InputAdornment>\r\n//                         }\r\n//                         endAdornment={\r\n//                             <InputAdornment position=\"end\">\r\n//                                 <IconButton\r\n//                                     onClick={handleClickShowPassword}\r\n//                                     onMouseDown={handleMouseDownPassword}\r\n//                                     className={classes.eye}\r\n//                                 >\r\n//                                     {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n//                                 </IconButton>\r\n//                             </InputAdornment>\r\n//                         }\r\n//                     />\r\n//                     <FormControlLabel\r\n//                         control=\r\n//                         {<Checkbox onChange={(e) => setNewUser(prevState => ({\r\n//                             ...prevState,\r\n//                             ['confidentiality']: e.target.checked\r\n//                         }))} />}\r\n//                         label=\"Confidentiality\" />\r\n\r\n\r\n//                     <Button type=\"button\" variant=\"contained\" className={\"login_btn\"} onClick={createUser}>Login</Button>\r\n//                 </div>\r\n\r\n//             </form>\r\n//         </center>\r\n\r\n\r\n//     );\r\n\r\n// }\r\n\r\n\r\n// const mapStateToProps = state => {\r\n//     return {\r\n\r\n//     }\r\n// }\r\n// export default connect(mapStateToProps, { setCurrentUser })(SignUp);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}