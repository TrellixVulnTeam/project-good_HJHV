{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\auction\\\\Clock.js\";\nimport { connect } from \"react-redux\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    let fixDate = props.theDate; // עד איזה זמן\n\n    let currDate = new Date(); // מה הזמן כעת\n\n    this.state = {\n      fixDate,\n      diff: fixDate - currDate\n    };\n  }\n\n  tick() {\n    //מעדכנת את הסטייט\n    this.setState((prevState, props) => ({\n      diff: prevState.fixDate - new Date().getTime()\n    }));\n  }\n\n  componentDidMount() {\n    //כשהקומפוננטה נטענת נגדיר את פונ' טיק שתתבצע כל שניה\n    this.interval = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    //כשהקומפוננטה נסגרת נעצור את פעילות הפונ' טיק\n    clearInterval(this.interval);\n  }\n\n  render() {\n    let {\n      diff\n    } = this.state;\n    let days = Math.floor(diff / (60 * 60 * 24 * 1000));\n    let hours = Math.floor(diff / (60 * 60 * 1000) - 24 * days);\n    let mins = Math.floor((diff - hours * 60 * 60 * 1000) / (60 * 1000));\n    let secs = Math.floor((diff - hours * 60 * 60 * 1000 - mins * 60 * 1000) / 1000);\n\n    if (diff <= 0) {\n      clearInterval(this.interval); //אם יעשו ריענון כשהשעון שלילי נרצה שיציג 00:00:00\n\n      hours = 0;\n      mins = 0;\n      secs = 0;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [String(days).padStart(2, '0'), \":\", String(hours).padStart(2, '0'), \":\", String(mins).padStart(2, '0'), \":\", String(secs).padStart(2, '0')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    theDate: new Date(2021, 8, 11).setHours(15, 52, 0) // theDate: state.currentAuction.registrationEndDate\n\n  };\n};\n\nexport default connect(mapStateToProps, {})(Clock);","map":{"version":3,"sources":["D:/project-good/project/client/src/components/auction/Clock.js"],"names":["connect","React","Clock","Component","constructor","props","fixDate","theDate","currDate","Date","state","diff","tick","setState","prevState","getTime","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","days","Math","floor","hours","mins","secs","String","padStart","mapStateToProps","setHours"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\r\nimport React from \"react\";\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let fixDate = props.theDate// עד איזה זמן\r\n        let currDate = new Date();// מה הזמן כעת\r\n        this.state = { fixDate, diff: fixDate - currDate };\r\n    }\r\n\r\n    tick() {\r\n        //מעדכנת את הסטייט\r\n        this.setState((prevState, props) => ({\r\n            diff: prevState.fixDate - (new Date()).getTime(),\r\n        }));\r\n    }\r\n    componentDidMount() {\r\n        //כשהקומפוננטה נטענת נגדיר את פונ' טיק שתתבצע כל שניה\r\n        this.interval = setInterval(() => this.tick(), 1000);\r\n    }\r\n    componentWillUnmount() {\r\n        //כשהקומפוננטה נסגרת נעצור את פעילות הפונ' טיק\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    render() {\r\n        let { diff } = this.state;\r\n        let days = Math.floor(diff / (60 * 60 * 24 * 1000));\r\n        let hours = Math.floor(diff / (60 * 60 * 1000) - (24 * days));\r\n        let mins = Math.floor((diff - (hours * 60 * 60 * 1000)) / (60 * 1000));\r\n        let secs = Math.floor((diff - (hours * 60 * 60 * 1000) - (mins * 60 * 1000)) / 1000);\r\n        if (diff <= 0) {\r\n            clearInterval(this.interval);\r\n            //אם יעשו ריענון כשהשעון שלילי נרצה שיציג 00:00:00\r\n            hours = 0; mins = 0; secs = 0;\r\n        }\r\n        return (\r\n            <div>\r\n                <h2>{String(days).padStart(2, '0')}:{String(hours).padStart(2, '0')}:{String(mins).padStart(2, '0')}:{String(secs).padStart(2, '0')}</h2>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        theDate: (new Date(2021, 8, 11)).setHours(15, 52, 0)\r\n        // theDate: state.currentAuction.registrationEndDate\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(Clock);"]},"metadata":{},"sourceType":"module"}