{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\new auction\\\\OrganizationInformation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { setNewAuction } from '../../store/actions/newAuction';\nimport { saveOrganizationInformationInDB } from '../../utils/newAuctionUtils';\nimport { connect } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { TextField } from \"@mui/material\";\nimport './NewAuction.scss';\nimport Button from '@mui/material/Button';\nimport { makeStyles } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport axios from 'axios';\nimport uploadImg from '../../img/upload.png';\nimport { setUserByStorage, setCurrentAuctionByStorage, setNewAuctionByStorage } from '../../store/actions/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrganizationInformation = props => {\n  _s();\n\n  useEffect(() => {\n    let id = localStorage.getItem(\"user\");\n\n    if (id && props.currentUser == null) {\n      let n_a_id = localStorage.getItem(\"newAuction\");\n      if (n_a_id) props.setNewAuctionByStorage(n_a_id);\n      props.setUserByStorage(id);\n    }\n\n    localStorage.setItem(\"organizationName\", props.organizationName || \"\");\n    localStorage.setItem(\"organizationText\", props.organizationText || \"\");\n    localStorage.setItem(\"logo\", props.logo || \"\");\n  }, []);\n  useEffect(() => {\n    return () => {\n      let details = {\n        organizationName: organizationName,\n        organizationText: organizationText,\n        organizationPhotos: [],\n        logo: imagePath\n      };\n      console.log(details);\n      debugger;\n      saveOrganizationInformationInDB(props.auctionId, details).then(succ => {\n        if (succ.status != 400) props.setNewAuction(succ.data);\n      });\n    };\n    localStorage.עקא(\"organizationName\", props.organizationName || \"\");\n    localStorage.setItem(\"organizationText\", props.organizationText || \"\");\n    localStorage.setItem(\"logo\", props.logo || \"\");\n  }, []);\n  const [organizationName, setOrganizationName] = useState(props.auction.organizationName || \"\");\n  const [organizationText, setOrganizationText] = useState(props.auction.organizationText || \"\");\n  const [imagePath, setImagePath] = useState(props.auction.logo || \"\");\n\n  const onChangeHandler = event => {\n    const data = new FormData();\n    data.append('file', event.target.files[0]);\n    axios.post(\"http://localhost:5000/upload\", data, {// receive two parameter endpoint url ,form data \n    }).then(res => {\n      // then print response status\n      console.log(res);\n      setImagePath(\"http://localhost:5000/images/\" + res.data.filename);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '3vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      noValidation: true,\n      id: \"myForm\",\n      style: {\n        display: 'inline-block',\n        width: '40%',\n        minHeight: '60%',\n        padding: '2vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: \"txt\",\n          onChange: e => {\n            setOrganizationName(e.target.value);\n          },\n          variant: \"standard\",\n          defaultValue: organizationName,\n          id: \"input-with-icon-grid\",\n          label: \"Organization Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"txt\",\n          onChange: e => {\n            setOrganizationText(e.target.value);\n          },\n          multiline: true,\n          variant: \"standard\",\n          defaultValue: organizationText,\n          id: \"input-with-icon-grid\",\n          label: \"Organization Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          display: \"none\"\n        },\n        id: \"contained-button-file\",\n        accept: \"image/*\",\n        type: \"file\",\n        onChange: onChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"contained-button-file\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            backgroundColor: \"#e0e0e0\",\n            color: \"#262b96\"\n          },\n          variant: \"contained\",\n          color: \"primary\",\n          component: \"span\",\n          children: \"Upload organization's logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imagePath || uploadImg,\n      style: {\n        width: 'auto',\n        height: 'auto',\n        maxHeight: '50vh',\n        maxWidth: '30vw',\n        minHeight: '40vh',\n        minWidth: '24vw',\n        display: 'inline-block',\n        marginLeft: '10vw'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 13\n  }, this);\n};\n\n_s(OrganizationInformation, \"Emu/QsT3ZiehFyfAakqXG9KlQtU=\");\n\n_c = OrganizationInformation;\n\nconst mapStateToProps = state => {\n  return {\n    auctionId: state.auction.newAuction._id,\n    auction: state.auction.newAuction,\n    currentUser: state.user.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setNewAuction,\n  setUserByStorage,\n  setCurrentAuctionByStorage,\n  setNewAuctionByStorage\n})(OrganizationInformation);\n\nvar _c;\n\n$RefreshReg$(_c, \"OrganizationInformation\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/new auction/OrganizationInformation.js"],"names":["React","useEffect","useState","setNewAuction","saveOrganizationInformationInDB","connect","useForm","TextField","Button","makeStyles","IconButton","axios","uploadImg","setUserByStorage","setCurrentAuctionByStorage","setNewAuctionByStorage","OrganizationInformation","props","id","localStorage","getItem","currentUser","n_a_id","setItem","organizationName","organizationText","logo","details","organizationPhotos","imagePath","console","log","auctionId","then","succ","status","data","עקא","setOrganizationName","auction","setOrganizationText","setImagePath","onChangeHandler","event","FormData","append","target","files","post","res","filename","marginTop","display","width","minHeight","padding","e","value","backgroundColor","color","height","maxHeight","maxWidth","minWidth","marginLeft","mapStateToProps","state","newAuction","_id","user"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,+BAAT,QAAgD,6BAAhD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAO,mBAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,SAASC,gBAAT,EAA2BC,0BAA3B,EAAuDC,sBAAvD,QAAqF,0BAArF;;;AACA,MAAMC,uBAAuB,GAAIC,KAAD,IAAW;AAAA;;AAEvChB,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIiB,EAAE,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAT;;AAEA,QAAIF,EAAE,IAAID,KAAK,CAACI,WAAN,IAAqB,IAA/B,EAAqC;AACjC,UAAIC,MAAM,GAAGH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAb;AACA,UAAIE,MAAJ,EAAYL,KAAK,CAACF,sBAAN,CAA6BO,MAA7B;AACZL,MAAAA,KAAK,CAACJ,gBAAN,CAAuBK,EAAvB;AACH;;AACDC,IAAAA,YAAY,CAACI,OAAb,CAAqB,kBAArB,EAAyCN,KAAK,CAACO,gBAAN,IAA0B,EAAnE;AACAL,IAAAA,YAAY,CAACI,OAAb,CAAqB,kBAArB,EAAyCN,KAAK,CAACQ,gBAAN,IAA0B,EAAnE;AACAN,IAAAA,YAAY,CAACI,OAAb,CAAqB,MAArB,EAA6BN,KAAK,CAACS,IAAN,IAAc,EAA3C;AAEH,GAbQ,EAaN,EAbM,CAAT;AAgBAzB,EAAAA,SAAS,CAAC,MAAM;AACZ,WAAO,MAAM;AACT,UAAI0B,OAAO,GAAG;AAEVH,QAAAA,gBAAgB,EAAEA,gBAFR;AAGVC,QAAAA,gBAAgB,EAAEA,gBAHR;AAIVG,QAAAA,kBAAkB,EAAE,EAJV;AAKVF,QAAAA,IAAI,EAAEG;AALI,OAAd;AAOAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA;AACAvB,MAAAA,+BAA+B,CAACa,KAAK,CAACe,SAAP,EAAkBL,OAAlB,CAA/B,CAA0DM,IAA1D,CAA+DC,IAAI,IAAI;AACnE,YAAIA,IAAI,CAACC,MAAL,IAAe,GAAnB,EAAwBlB,KAAK,CAACd,aAAN,CAAoB+B,IAAI,CAACE,IAAzB;AAC3B,OAFD;AAGH,KAbD;AAeAjB,IAAAA,YAAY,CAACkB,GAAb,CAAiB,kBAAjB,EAAqCpB,KAAK,CAACO,gBAAN,IAA0B,EAA/D;AACAL,IAAAA,YAAY,CAACI,OAAb,CAAqB,kBAArB,EAAyCN,KAAK,CAACQ,gBAAN,IAA0B,EAAnE;AACAN,IAAAA,YAAY,CAACI,OAAb,CAAqB,MAArB,EAA6BN,KAAK,CAACS,IAAN,IAAc,EAA3C;AACH,GAnBQ,EAmBN,EAnBM,CAAT;AAsBA,QAAM,CAACF,gBAAD,EAAmBc,mBAAnB,IAA0CpC,QAAQ,CAACe,KAAK,CAACsB,OAAN,CAAcf,gBAAd,IAAkC,EAAnC,CAAxD;AACA,QAAM,CAACC,gBAAD,EAAmBe,mBAAnB,IAA0CtC,QAAQ,CAACe,KAAK,CAACsB,OAAN,CAAcd,gBAAd,IAAkC,EAAnC,CAAxD;AACA,QAAM,CAACI,SAAD,EAAYY,YAAZ,IAA4BvC,QAAQ,CAACe,KAAK,CAACsB,OAAN,CAAcb,IAAd,IAAsB,EAAvB,CAA1C;;AAEA,QAAMgB,eAAe,GAAGC,KAAK,IAAI;AAC7B,UAAMP,IAAI,GAAG,IAAIQ,QAAJ,EAAb;AACAR,IAAAA,IAAI,CAACS,MAAL,CAAY,MAAZ,EAAoBF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAApB;AACApC,IAAAA,KAAK,CAACqC,IAAN,CAAW,8BAAX,EAA2CZ,IAA3C,EAAiD,CAAE;AAAF,KAAjD,EACGH,IADH,CACQgB,GAAG,IAAI;AAAE;AACbnB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACAR,MAAAA,YAAY,CAAC,kCAAkCQ,GAAG,CAACb,IAAJ,CAASc,QAA5C,CAAZ;AACH,KAJD;AAKH,GARD;;AAWA,sBAAQ;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA,4BACJ;AAAM,MAAA,YAAY,MAAlB;AAAmB,MAAA,EAAE,EAAC,QAAtB;AAA+B,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,cAAX;AAA2BC,QAAAA,KAAK,EAAE,KAAlC;AAAyCC,QAAAA,SAAS,EAAE,KAApD;AAA2DC,QAAAA,OAAO,EAAE;AAApE,OAAtC;AAAA,8BACI;AAAK,QAAA,SAAS,EAAE,gBAAhB;AAAA,gCACI,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,KAArB;AAA2B,UAAA,QAAQ,EAAGC,CAAD,IAAO;AAAElB,YAAAA,mBAAmB,CAACkB,CAAC,CAACV,MAAF,CAASW,KAAV,CAAnB;AAAqC,WAAnF;AAAqF,UAAA,OAAO,EAAC,UAA7F;AAAwG,UAAA,YAAY,EAAEjC,gBAAtH;AAAwI,UAAA,EAAE,EAAC,sBAA3I;AAAkK,UAAA,KAAK,EAAC;AAAxK;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,KAArB;AAA2B,UAAA,QAAQ,EAAGgC,CAAD,IAAO;AAAEhB,YAAAA,mBAAmB,CAACgB,CAAC,CAACV,MAAF,CAASW,KAAV,CAAnB;AAAqC,WAAnF;AAAqF,UAAA,SAAS,MAA9F;AAA+F,UAAA,OAAO,EAAC,UAAvG;AAAkH,UAAA,YAAY,EAAEhC,gBAAhI;AAAkJ,UAAA,EAAE,EAAC,sBAArJ;AAA4K,UAAA,KAAK,EAAC;AAAlL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA;AAAA;AAAA;AAAA,cAPJ,eASI;AAAO,QAAA,KAAK,EAAE;AAAE2B,UAAAA,OAAO,EAAE;AAAX,SAAd;AAAmC,QAAA,EAAE,EAAC,uBAAtC;AAA8D,QAAA,MAAM,EAAC,SAArE;AAA+E,QAAA,IAAI,EAAC,MAApF;AAA2F,QAAA,QAAQ,EAAEV;AAArG;AAAA;AAAA;AAAA;AAAA,cATJ,eAWI;AAAO,QAAA,OAAO,EAAC,uBAAf;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAE;AAAEgB,YAAAA,eAAe,EAAE,SAAnB;AAA8BC,YAAAA,KAAK,EAAE;AAArC,WAAf;AAAiE,UAAA,OAAO,EAAC,WAAzE;AAAqF,UAAA,KAAK,EAAC,SAA3F;AAAqG,UAAA,SAAS,EAAC,MAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,eAkBJ;AAAK,MAAA,GAAG,EAAE9B,SAAS,IAAIjB,SAAvB;AAAkC,MAAA,KAAK,EAAE;AAAEyC,QAAAA,KAAK,EAAE,MAAT;AAAiBO,QAAAA,MAAM,EAAE,MAAzB;AAAiCC,QAAAA,SAAS,EAAE,MAA5C;AAAoDC,QAAAA,QAAQ,EAAE,MAA9D;AAAsER,QAAAA,SAAS,EAAE,MAAjF;AAAyFS,QAAAA,QAAQ,EAAE,MAAnG;AAA2GX,QAAAA,OAAO,EAAE,cAApH;AAAoIY,QAAAA,UAAU,EAAE;AAAhJ;AAAzC;AAAA;AAAA;AAAA;AAAA,YAlBI;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAqBH,CA5ED;;GAAMhD,uB;;KAAAA,uB;;AA8EN,MAAMiD,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHlC,IAAAA,SAAS,EAAEkC,KAAK,CAAC3B,OAAN,CAAc4B,UAAd,CAAyBC,GADjC;AAEH7B,IAAAA,OAAO,EAAE2B,KAAK,CAAC3B,OAAN,CAAc4B,UAFpB;AAGH9C,IAAAA,WAAW,EAAE6C,KAAK,CAACG,IAAN,CAAWhD;AAHrB,GAAP;AAKH,CAND;;AAOA,eAAehB,OAAO,CAAC4D,eAAD,EAAkB;AAAE9D,EAAAA,aAAF;AAAiBU,EAAAA,gBAAjB;AAAmCC,EAAAA,0BAAnC;AAA+DC,EAAAA;AAA/D,CAAlB,CAAP,CAAkHC,uBAAlH,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { setNewAuction } from '../../store/actions/newAuction';\r\nimport { saveOrganizationInformationInDB } from '../../utils/newAuctionUtils';\r\nimport { connect } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { TextField } from \"@mui/material\";\r\nimport './NewAuction.scss'\r\nimport Button from '@mui/material/Button';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport axios from 'axios';\r\nimport uploadImg from '../../img/upload.png'\r\nimport { setUserByStorage, setCurrentAuctionByStorage, setNewAuctionByStorage } from '../../store/actions/user';\r\nconst OrganizationInformation = (props) => {\r\n\r\n    useEffect(() => {\r\n\r\n        let id = localStorage.getItem(\"user\");\r\n\r\n        if (id && props.currentUser == null) {\r\n            let n_a_id = localStorage.getItem(\"newAuction\");\r\n            if (n_a_id) props.setNewAuctionByStorage(n_a_id);\r\n            props.setUserByStorage(id);\r\n        }\r\n        localStorage.setItem(\"organizationName\", props.organizationName || \"\")\r\n        localStorage.setItem(\"organizationText\", props.organizationText || \"\")\r\n        localStorage.setItem(\"logo\", props.logo || \"\")\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            let details = {\r\n\r\n                organizationName: organizationName,\r\n                organizationText: organizationText,\r\n                organizationPhotos: [],\r\n                logo: imagePath\r\n            };\r\n            console.log(details);\r\n            debugger;\r\n            saveOrganizationInformationInDB(props.auctionId, details).then(succ => {\r\n                if (succ.status != 400) props.setNewAuction(succ.data)\r\n            })\r\n        }\r\n\r\n        localStorage.עקא(\"organizationName\", props.organizationName || \"\")\r\n        localStorage.setItem(\"organizationText\", props.organizationText || \"\")\r\n        localStorage.setItem(\"logo\", props.logo || \"\")\r\n    }, []);\r\n\r\n\r\n    const [organizationName, setOrganizationName] = useState(props.auction.organizationName || \"\");\r\n    const [organizationText, setOrganizationText] = useState(props.auction.organizationText || \"\");\r\n    const [imagePath, setImagePath] = useState(props.auction.logo || \"\");\r\n\r\n    const onChangeHandler = event => {\r\n        const data = new FormData()\r\n        data.append('file', event.target.files[0]);\r\n        axios.post(\"http://localhost:5000/upload\", data, { // receive two parameter endpoint url ,form data \r\n        }).then(res => { // then print response status\r\n            console.log(res);\r\n            setImagePath(\"http://localhost:5000/images/\" + res.data.filename);\r\n        })\r\n    }\r\n\r\n\r\n    return (<div style={{ marginTop: '3vh' }} >\r\n        <form noValidation id=\"myForm\" style={{ display: 'inline-block', width: '40%', minHeight: '60%', padding: '2vh' }} >\r\n            <div className={\"form-container\"}>\r\n                <TextField className=\"txt\" onChange={(e) => { setOrganizationName(e.target.value) }} variant=\"standard\" defaultValue={organizationName} id=\"input-with-icon-grid\" label=\"Organization Name\" />\r\n                <TextField className=\"txt\" onChange={(e) => { setOrganizationText(e.target.value) }} multiline variant=\"standard\" defaultValue={organizationText} id=\"input-with-icon-grid\" label=\"Organization Text\" />\r\n            </div>\r\n\r\n            {/* <label>Upload photos of the organization</label> */}{/* TODO */}\r\n            <br />\r\n\r\n            <input style={{ display: \"none\" }} id=\"contained-button-file\" accept=\"image/*\" type=\"file\" onChange={onChangeHandler} />\r\n\r\n            <label htmlFor=\"contained-button-file\">\r\n                <Button style={{ backgroundColor: \"#e0e0e0\", color: \"#262b96\" }} variant=\"contained\" color=\"primary\" component=\"span\">Upload organization's logo</Button>\r\n            </label>\r\n\r\n        </form >\r\n\r\n        <img src={imagePath || uploadImg} style={{ width: 'auto', height: 'auto', maxHeight: '50vh', maxWidth: '30vw', minHeight: '40vh', minWidth: '24vw', display: 'inline-block', marginLeft: '10vw' }} />\r\n    </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auctionId: state.auction.newAuction._id,\r\n        auction: state.auction.newAuction,\r\n        currentUser: state.user.currentUser\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { setNewAuction, setUserByStorage, setCurrentAuctionByStorage, setNewAuctionByStorage })(OrganizationInformation);"]},"metadata":{},"sourceType":"module"}