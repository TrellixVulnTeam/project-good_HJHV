{"ast":null,"code":"import { hasWindow } from \"@rpldy/shared\";\nexport const GLOBAL_VERSION_SYM = Symbol.for(\"_rpldy-version_\");\n\nconst getVersion = () => \"0.13.3\" || \"\";\n\nconst getRegisteredVersion = () => {\n  /* istanbul ignore next */\n  const global = hasWindow() ? window : process; // $FlowIgnore\n\n  return global[GLOBAL_VERSION_SYM];\n};\n\nconst registerUploadyContextVersion = () => {\n  const global = hasWindow() ? window : process; //$FlowIgnore\n\n  global[GLOBAL_VERSION_SYM] = getVersion();\n};\n\nconst getIsVersionRegisteredAndDifferent = () => {\n  const registeredVersion = getRegisteredVersion();\n  return !!registeredVersion && registeredVersion !== getVersion();\n};\n\nexport { getVersion, getRegisteredVersion, registerUploadyContextVersion, getIsVersionRegisteredAndDifferent };","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/project-good/project/client/node_modules/@rpldy/shared-ui/lib/esm/uploadyVersion.js"],"names":["hasWindow","GLOBAL_VERSION_SYM","Symbol","for","getVersion","getRegisteredVersion","global","window","process","registerUploadyContextVersion","getIsVersionRegisteredAndDifferent","registeredVersion"],"mappings":"AAAA,SAASA,SAAT,QAA0B,eAA1B;AACA,OAAO,MAAMC,kBAAkB,GAAGC,MAAM,CAACC,GAAP,CAAW,iBAAX,CAA3B;;AAEP,MAAMC,UAAU,GAAG,MAAM,YAAY,EAArC;;AAEA,MAAMC,oBAAoB,GAAG,MAAM;AACjC;AACA,QAAMC,MAAM,GAAGN,SAAS,KAAKO,MAAL,GAAcC,OAAtC,CAFiC,CAEc;;AAE/C,SAAOF,MAAM,CAACL,kBAAD,CAAb;AACD,CALD;;AAOA,MAAMQ,6BAA6B,GAAG,MAAM;AAC1C,QAAMH,MAAM,GAAGN,SAAS,KAAKO,MAAL,GAAcC,OAAtC,CAD0C,CACK;;AAE/CF,EAAAA,MAAM,CAACL,kBAAD,CAAN,GAA6BG,UAAU,EAAvC;AACD,CAJD;;AAMA,MAAMM,kCAAkC,GAAG,MAAM;AAC/C,QAAMC,iBAAiB,GAAGN,oBAAoB,EAA9C;AACA,SAAO,CAAC,CAACM,iBAAF,IAAuBA,iBAAiB,KAAKP,UAAU,EAA9D;AACD,CAHD;;AAKA,SAASA,UAAT,EAAqBC,oBAArB,EAA2CI,6BAA3C,EAA0EC,kCAA1E","sourcesContent":["import { hasWindow } from \"@rpldy/shared\";\nexport const GLOBAL_VERSION_SYM = Symbol.for(\"_rpldy-version_\");\n\nconst getVersion = () => \"0.13.3\" || \"\";\n\nconst getRegisteredVersion = () => {\n  /* istanbul ignore next */\n  const global = hasWindow() ? window : process; // $FlowIgnore\n\n  return global[GLOBAL_VERSION_SYM];\n};\n\nconst registerUploadyContextVersion = () => {\n  const global = hasWindow() ? window : process; //$FlowIgnore\n\n  global[GLOBAL_VERSION_SYM] = getVersion();\n};\n\nconst getIsVersionRegisteredAndDifferent = () => {\n  const registeredVersion = getRegisteredVersion();\n  return !!registeredVersion && registeredVersion !== getVersion();\n};\n\nexport { getVersion, getRegisteredVersion, registerUploadyContextVersion, getIsVersionRegisteredAndDifferent };"]},"metadata":{},"sourceType":"module"}