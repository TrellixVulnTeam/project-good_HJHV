{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\auction\\\\PaymentForm.js\";\nimport './Cart.scss';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentForm = props => {\n  const amountToPay = () => {\n    let sum = 0;\n\n    if (props.user) {\n      if (props.user.shoppingCartOfCurrentAuction.length == 0) return 0;\n      props.user.shoppingCartOfCurrentAuction.map(item => {\n        sum += item.qty * item.productId.price;\n      });\n    }\n\n    return sum;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Amount to pay: \", amountToPay(), \"$\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n      options: {\n        \"client-id\": \"test\"\n      },\n      children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n        style: {\n          width: '20vw'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }, this);\n};\n\n_c = PaymentForm;\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.user.currentUser,\n    currentAuction: state.currentAuction.currentAuction,\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps, {})(PaymentForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/auction/PaymentForm.js"],"names":["React","useState","useEffect","connect","PayPalScriptProvider","PayPalButtons","PaymentForm","props","amountToPay","sum","user","shoppingCartOfCurrentAuction","length","map","item","qty","productId","price","width","mapStateToProps","state","currentUser","currentAuction"],"mappings":";AAAA,OAAO,aAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,EAA+BC,aAA/B,QAAoD,yBAApD;;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE3B,QAAMC,WAAW,GAAG,MAAM;AACtB,QAAIC,GAAG,GAAG,CAAV;;AACA,QAAIF,KAAK,CAACG,IAAV,EAAgB;AACZ,UAAIH,KAAK,CAACG,IAAN,CAAWC,4BAAX,CAAwCC,MAAxC,IAAkD,CAAtD,EAAyD,OAAO,CAAP;AACzDL,MAAAA,KAAK,CAACG,IAAN,CAAWC,4BAAX,CAAwCE,GAAxC,CAA6CC,IAAD,IAAU;AAAEL,QAAAA,GAAG,IAAIK,IAAI,CAACC,GAAL,GAAWD,IAAI,CAACE,SAAL,CAAeC,KAAjC;AAAwC,OAAhG;AACH;;AACD,WAAOR,GAAP;AACH,GAPD;;AASA,sBAAQ;AAAA,4BACJ;AAAA,oCAAoBD,WAAW,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,eAEJ,QAAC,oBAAD;AAAsB,MAAA,OAAO,EAAE;AAAE,qBAAa;AAAf,OAA/B;AAAA,6BACI,QAAC,aAAD;AAAe,QAAA,KAAK,EAAE;AAAEU,UAAAA,KAAK,EAAC;AAAR;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFI;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAOH,CAlBD;;KAAMZ,W;;AAoBN,MAAMa,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACV,IAAN,CAAWW,WADrB;AAEHC,IAAAA,cAAc,EAAEF,KAAK,CAACE,cAAN,CAAqBA,cAFlC;AAGHZ,IAAAA,IAAI,EAAEU,KAAK,CAACV;AAHT,GAAP;AAKH,CAND;;AAOA,eAAeP,OAAO,CAACgB,eAAD,EAAkB,EAAlB,CAAP,CAA6Bb,WAA7B,CAAf","sourcesContent":["import './Cart.scss';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\n\r\n\r\nconst PaymentForm = (props) => {\r\n\r\n    const amountToPay = () => {\r\n        let sum = 0;\r\n        if (props.user) {\r\n            if (props.user.shoppingCartOfCurrentAuction.length == 0) return 0;\r\n            props.user.shoppingCartOfCurrentAuction.map((item) => { sum += item.qty * item.productId.price });\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    return (<center>\r\n        <h1>Amount to pay: {amountToPay()}$</h1>\r\n        <PayPalScriptProvider options={{ \"client-id\": \"test\" }}>\r\n            <PayPalButtons style={{ width:'20vw' }} />\r\n        </PayPalScriptProvider>\r\n    </center>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentUser: state.user.currentUser,\r\n        currentAuction: state.currentAuction.currentAuction,\r\n        user: state.user,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {})(PaymentForm);\r\n\r\n"]},"metadata":{},"sourceType":"module"}