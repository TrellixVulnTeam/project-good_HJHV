{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\new auction\\\\AuctionInformation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport './NewAuction.scss';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { saveAuctionInformationInDB } from '../../utils/newAuctionUtils';\nimport { useForm } from \"react-hook-form\";\nimport { TextField } from \"@mui/material\";\nimport Alert from '@mui/material/Alert';\nimport { setNewAuction } from '../../store/actions/newAuction';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nconst AuctionInformation = props => {\n  _s();\n\n  let submit = (data, e) => {\n    e.preventDefault();\n    let details = {\n      registrationStartDate: data.registrationStartDate,\n      lotteriesDate: selectedDate1,\n      registrationEndDate: data.registrationEndDate,\n      lotteryApproval: data.lotteryApproval,\n      publicationApproval: data.publicationApproval,\n      name: data.name || \"unknown\"\n    };\n    saveAuctionInformationInDB(props.auctionId, details).then(succ => {\n      if (succ.status != 400) props.setNewAuction(succ.data);\n    });\n  };\n\n  let submit2 = e => {\n    e.preventDefault();\n    let details = {\n      registrationStartDate: selectedDate2,\n      lotteriesDate: selectedDate1,\n      registrationEndDate: selectedDate3 // lotteryApproval: data.lotteryApproval,\n      // publicationApproval: data.publicationApproval,\n      // name: data.name || \"unknown\"\n\n    };\n    saveAuctionInformationInDB(props.auctionId, details).then(succ => {\n      if (succ.status != 400) props.setNewAuction(succ.data);\n    });\n  };\n\n  const classes = useStyles();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [selectedDate1, setSelectedDate1] = React.useState(new Date()); //lotery\n\n  const [selectedDate2, setSelectedDate2] = React.useState(new Date()); //start\n\n  const [selectedDate3, setSelectedDate3] = React.useState(new Date()); //end\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\"\n    /*onSubmit={handleSubmit(submit)}*/\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Auction information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs-in-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: \"txt\",\n        type: \"number\",\n        variant: \"standard\",\n        ...register('name', {\n          required: true\n        }),\n        id: \"input-with-icon-grid\",\n        label: \"Auction name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        className: \"auctionInformationDate\",\n        children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n          disableToolbar: true,\n          variant: \"inline\",\n          format: \"dd/MM/yyyy\",\n          margin: \"normal\",\n          id: \"date-picker-inline\",\n          label: \"Date of the lottery\",\n          value: selectedDate1 // defaultValue={props.auction.lotteriesDate}\n          ,\n          onChange: date => {\n            setSelectedDate1(date);\n          },\n          KeyboardButtonProps: {\n            'aria-label': 'change date'\n          } //    {...register('lotteriesDate', { required: true })} id=\"input-with-icon-grid\" label=\"Date of the lottery\"\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n          disableToolbar: true,\n          variant: \"inline\",\n          format: \"dd/MM/yyyy\",\n          margin: \"normal\",\n          id: \"date-picker-inline\",\n          label: \"Registration start date\",\n          value: selectedDate2 // defaultValue={props.auction.registrationStartDate}\n          ,\n          onChange: date => {\n            setSelectedDate2(date);\n          },\n          KeyboardButtonProps: {\n            'aria-label': 'change date'\n          } // {...register('registrationStartDate', { required: true })}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n          disableToolbar: true,\n          variant: \"inline\",\n          format: \"dd/MM/yyyy\",\n          margin: \"normal\",\n          id: \"date-picker-inline\",\n          label: \"Registration end date\",\n          value: selectedDate3,\n          onChange: date => {\n            setSelectedDate3(date);\n          },\n          KeyboardButtonProps: {\n            'aria-label': 'change date'\n          } // defaultValue={props.auction.registrationEndDate}\n          // {...register('registrationEndDate', { required: true })}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"default\",\n        className: classes.button,\n        startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 28\n        }, this),\n        ...register('terms', {\n          required: false\n        }),\n        children: \"Upload Terms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, { ...register('publicationApproval', {\n            required: false\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 40\n        }, this),\n        label: \"Publication approval\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, { ...register('lotteryApproval', {\n            required: false\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 40\n        }, this),\n        label: \"Lottery approval\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 13\n  }, this);\n\n  /*#__PURE__*/\n  _jsxDEV(\"button\", {\n    onClick: submit,\n    className: \"positive ui button\",\n    children: \"Save\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this); //submit!!!!\n  //לבדוק שהתאריכים תקינים\n  //סיום ההרשמה ולפני ביצוע ההגרלות\n\n};\n\n_s(AuctionInformation, \"wzi8bSK7GJETMgGl+Q3GspEuHqs=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = AuctionInformation;\n\nconst mapStateToProps = state => {\n  return {\n    auctionId: state.auction.newAuction._id,\n    auction: state.auction.newAuction\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setNewAuction\n})(AuctionInformation);\n\nvar _c;\n\n$RefreshReg$(_c, \"AuctionInformation\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/new auction/AuctionInformation.js"],"names":["React","useEffect","useState","connect","makeStyles","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","Button","CloudUploadIcon","saveAuctionInformationInDB","useForm","TextField","Alert","setNewAuction","Checkbox","FormControlLabel","useStyles","theme","root","margin","spacing","AuctionInformation","props","submit","data","e","preventDefault","details","registrationStartDate","lotteriesDate","selectedDate1","registrationEndDate","lotteryApproval","publicationApproval","name","auctionId","then","succ","status","submit2","selectedDate2","selectedDate3","classes","register","handleSubmit","formState","errors","setSelectedDate1","Date","setSelectedDate2","setSelectedDate3","required","date","button","mapStateToProps","state","auction","newAuction","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,mBAAP;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAO,UAAP;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SACIC,uBADJ,EAEIC,kBAFJ,QAGO,sBAHP;AAIA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SAASC,0BAAT,QAA2C,6BAA3C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;;AAGA,MAAMC,SAAS,GAAGb,UAAU,CAAEc,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACF,aAAS;AACLC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADH;AADP;AAD+B,CAAZ,CAAD,CAA5B;;AAQA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAAA;;AAClC,MAAIC,MAAM,GAAG,CAACC,IAAD,EAAOC,CAAP,KAAa;AACtBA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAIC,OAAO,GAAG;AACVC,MAAAA,qBAAqB,EAAEJ,IAAI,CAACI,qBADlB;AAEVC,MAAAA,aAAa,EAACC,aAFJ;AAGVC,MAAAA,mBAAmB,EAAEP,IAAI,CAACO,mBAHhB;AAIVC,MAAAA,eAAe,EAAER,IAAI,CAACQ,eAJZ;AAKVC,MAAAA,mBAAmB,EAAET,IAAI,CAACS,mBALhB;AAMVC,MAAAA,IAAI,EAAEV,IAAI,CAACU,IAAL,IAAa;AANT,KAAd;AASAzB,IAAAA,0BAA0B,CAACa,KAAK,CAACa,SAAP,EAAkBR,OAAlB,CAA1B,CAAqDS,IAArD,CAA0DC,IAAI,IAAI;AAC9D,UAAIA,IAAI,CAACC,MAAL,IAAe,GAAnB,EAAwBhB,KAAK,CAACT,aAAN,CAAoBwB,IAAI,CAACb,IAAzB;AAC3B,KAFD;AAGH,GAfD;;AAgBA,MAAIe,OAAO,GAAId,CAAD,IAAO;AACjBA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAIC,OAAO,GAAG;AACVC,MAAAA,qBAAqB,EAAEY,aADb;AAEVX,MAAAA,aAAa,EAAEC,aAFL;AAGVC,MAAAA,mBAAmB,EAAEU,aAHX,CAIV;AACA;AACA;;AANU,KAAd;AASAhC,IAAAA,0BAA0B,CAACa,KAAK,CAACa,SAAP,EAAkBR,OAAlB,CAA1B,CAAqDS,IAArD,CAA0DC,IAAI,IAAI;AAC9D,UAAIA,IAAI,CAACC,MAAL,IAAe,GAAnB,EAAwBhB,KAAK,CAACT,aAAN,CAAoBwB,IAAI,CAACb,IAAzB;AAC3B,KAFD;AAGH,GAfD;;AAiBA,QAAMkB,OAAO,GAAG1B,SAAS,EAAzB;AAEA,QAAM;AAAE2B,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAArC,MAAoDpC,OAAO,EAAjE;AAEA,QAAM,CAACoB,aAAD,EAAgBiB,gBAAhB,IAAoChD,KAAK,CAACE,QAAN,CAAe,IAAI+C,IAAJ,EAAf,CAA1C,CAtCkC,CAsCmC;;AACrE,QAAM,CAACR,aAAD,EAAgBS,gBAAhB,IAAoClD,KAAK,CAACE,QAAN,CAAe,IAAI+C,IAAJ,EAAf,CAA1C,CAvCkC,CAuCmC;;AACrE,QAAM,CAACP,aAAD,EAAgBS,gBAAhB,IAAoCnD,KAAK,CAACE,QAAN,CAAe,IAAI+C,IAAJ,EAAf,CAA1C,CAxCkC,CAwCmC;;AAErE,sBAAQ;AAAM,IAAA,SAAS,EAAEN,OAAO,CAACxB,IAAzB;AAA+B,IAAA,UAAU,MAAzC;AAA0C,IAAA,YAAY,EAAC;AAAO;AAA9D;AAAA,4BACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,eAEJ;AAAK,MAAA,SAAS,EAAE,0BAAhB;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,KAArB;AAA2B,QAAA,IAAI,EAAC,QAAhC;AAAyC,QAAA,OAAO,EAAC,UAAjD;AAAA,WAA+DyB,QAAQ,CAAC,MAAD,EAAS;AAAEQ,UAAAA,QAAQ,EAAE;AAAZ,SAAT,CAAvE;AAAqG,QAAA,EAAE,EAAC,sBAAxG;AAA+H,QAAA,KAAK,EAAC;AAArI;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,uBAAD;AAAyB,QAAA,KAAK,EAAE/C,YAAhC;AAA8C,QAAA,SAAS,EAAC,wBAAxD;AAAA,+BACI,QAAC,kBAAD;AACI,UAAA,cAAc,MADlB;AAEI,UAAA,OAAO,EAAC,QAFZ;AAGI,UAAA,MAAM,EAAC,YAHX;AAII,UAAA,MAAM,EAAC,QAJX;AAKI,UAAA,EAAE,EAAC,oBALP;AAMI,UAAA,KAAK,EAAC,qBANV;AAOI,UAAA,KAAK,EAAE0B,aAPX,CAQI;AARJ;AASI,UAAA,QAAQ,EAAGsB,IAAD,IAAU;AAAEL,YAAAA,gBAAgB,CAACK,IAAD,CAAhB;AAAwB,WATlD;AAWI,UAAA,mBAAmB,EAAE;AACjB,0BAAc;AADG,WAXzB,CAcJ;;AAdI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ,eAuBI,QAAC,uBAAD;AAAyB,QAAA,KAAK,EAAEhD,YAAhC;AAAA,+BACI,QAAC,kBAAD;AACI,UAAA,cAAc,MADlB;AAEI,UAAA,OAAO,EAAC,QAFZ;AAGI,UAAA,MAAM,EAAC,YAHX;AAII,UAAA,MAAM,EAAC,QAJX;AAKI,UAAA,EAAE,EAAC,oBALP;AAMI,UAAA,KAAK,EAAC,yBANV;AAOI,UAAA,KAAK,EAAEoC,aAPX,CAQI;AARJ;AASI,UAAA,QAAQ,EAAGY,IAAD,IAAU;AAAEH,YAAAA,gBAAgB,CAACG,IAAD,CAAhB;AAAwB,WATlD;AAWI,UAAA,mBAAmB,EAAE;AACjB,0BAAc;AADG,WAXzB,CAcA;;AAdA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAvBJ,eA0CI,QAAC,uBAAD;AAAyB,QAAA,KAAK,EAAEhD,YAAhC;AAAA,+BACI,QAAC,kBAAD;AACI,UAAA,cAAc,MADlB;AAEI,UAAA,OAAO,EAAC,QAFZ;AAGI,UAAA,MAAM,EAAC,YAHX;AAII,UAAA,MAAM,EAAC,QAJX;AAKI,UAAA,EAAE,EAAC,oBALP;AAMI,UAAA,KAAK,EAAC,uBANV;AAOI,UAAA,KAAK,EAAEqC,aAPX;AAQI,UAAA,QAAQ,EAAGW,IAAD,IAAU;AAAEF,YAAAA,gBAAgB,CAACE,IAAD,CAAhB;AAAwB,WARlD;AAUI,UAAA,mBAAmB,EAAE;AACjB,0BAAc;AADG,WAVzB,CAcA;AACA;;AAfA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA1CJ,eA8DI,QAAC,MAAD;AACI,QAAA,OAAO,EAAC,WADZ;AAEI,QAAA,KAAK,EAAC,SAFV;AAGI,QAAA,SAAS,EAAEV,OAAO,CAACW,MAHvB;AAII,QAAA,SAAS,eAAE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,gBAJf;AAAA,WAKQV,QAAQ,CAAC,OAAD,EAAU;AAAEQ,UAAAA,QAAQ,EAAE;AAAZ,SAAV,CALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9DJ,eAyEI,QAAC,gBAAD;AAAkB,QAAA,OAAO,eAAE,QAAC,QAAD,OAAcR,QAAQ,CAAC,qBAAD,EAAwB;AAAEQ,YAAAA,QAAQ,EAAE;AAAZ,WAAxB;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAA3B;AAAmG,QAAA,KAAK,EAAC;AAAzG;AAAA;AAAA;AAAA;AAAA,cAzEJ,eA2EI,QAAC,gBAAD;AAAkB,QAAA,OAAO,eAAE,QAAC,QAAD,OAAeR,QAAQ,CAAC,iBAAD,EAAoB;AAAEQ,YAAAA,QAAQ,EAAE;AAAZ,WAApB;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAA3B;AAAgG,QAAA,KAAK,EAAC;AAAtG;AAAA;AAAA;AAAA;AAAA,cA3EJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFI;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;;AAiFA;AAAA;AAAQ,IAAA,OAAO,EAAE5B,MAAjB;AAA0B,IAAA,SAAS,EAAC,oBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WA3HkC,CA6HlC;AACA;AACA;;AACH,CAhID;;GAAMF,kB;UAkCcL,S,EAE0CN,O;;;KApCxDW,kB;;AAiIN,MAAMiC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHpB,IAAAA,SAAS,EAAEoB,KAAK,CAACC,OAAN,CAAcC,UAAd,CAAyBC,GADjC;AAEHF,IAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,CAAcC;AAFpB,GAAP;AAIH,CALD;;AAMA,eAAevD,OAAO,CAACoD,eAAD,EAAkB;AAAEzC,EAAAA;AAAF,CAAlB,CAAP,CAA4CQ,kBAA5C,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './NewAuction.scss'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { saveAuctionInformationInDB } from '../../utils/newAuctionUtils';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { TextField } from \"@mui/material\";\r\nimport Alert from '@mui/material/Alert';\r\nimport { setNewAuction } from '../../store/actions/newAuction';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n    },\r\n}));\r\n\r\nconst AuctionInformation = (props) => {\r\n    let submit = (data, e) => {\r\n        e.preventDefault();\r\n\r\n        let details = {\r\n            registrationStartDate: data.registrationStartDate,\r\n            lotteriesDate:selectedDate1,\r\n            registrationEndDate: data.registrationEndDate,\r\n            lotteryApproval: data.lotteryApproval,\r\n            publicationApproval: data.publicationApproval,\r\n            name: data.name || \"unknown\"\r\n        }\r\n\r\n        saveAuctionInformationInDB(props.auctionId, details).then(succ => {\r\n            if (succ.status != 400) props.setNewAuction(succ.data);\r\n        })\r\n    }\r\n    let submit2 = (e) => {\r\n        e.preventDefault();\r\n\r\n        let details = {\r\n            registrationStartDate: selectedDate2,\r\n            lotteriesDate: selectedDate1,\r\n            registrationEndDate: selectedDate3,\r\n            // lotteryApproval: data.lotteryApproval,\r\n            // publicationApproval: data.publicationApproval,\r\n            // name: data.name || \"unknown\"\r\n        }\r\n\r\n        saveAuctionInformationInDB(props.auctionId, details).then(succ => {\r\n            if (succ.status != 400) props.setNewAuction(succ.data);\r\n        })\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const [selectedDate1, setSelectedDate1] = React.useState(new Date());//lotery\r\n    const [selectedDate2, setSelectedDate2] = React.useState(new Date());//start\r\n    const [selectedDate3, setSelectedDate3] = React.useState(new Date());//end\r\n\r\n    return (<form className={classes.root} noValidate autoComplete=\"off\"  /*onSubmit={handleSubmit(submit)}*/>\r\n        <h1>Auction information</h1>\r\n        <div className={\"inputs-in-form-container\"} >\r\n            <TextField className=\"txt\" type=\"number\" variant=\"standard\"{...register('name', { required: true })} id=\"input-with-icon-grid\" label=\"Auction name\" />\r\n\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils} className=\"auctionInformationDate\">\r\n                <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    label=\"Date of the lottery\"\r\n                    value={selectedDate1}\r\n                    // defaultValue={props.auction.lotteriesDate}\r\n                    onChange={(date) => { setSelectedDate1(date) }}\r\n\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n            //    {...register('lotteriesDate', { required: true })} id=\"input-with-icon-grid\" label=\"Date of the lottery\"\r\n                />\r\n\r\n            </MuiPickersUtilsProvider>\r\n\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    label=\"Registration start date\"\r\n                    value={selectedDate2}\r\n                    // defaultValue={props.auction.registrationStartDate}\r\n                    onChange={(date) => { setSelectedDate2(date) }}\r\n\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                // {...register('registrationStartDate', { required: true })}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    label=\"Registration end date\"\r\n                    value={selectedDate3}\r\n                    onChange={(date) => { setSelectedDate3(date) }}\r\n\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n\r\n                // defaultValue={props.auction.registrationEndDate}\r\n                // {...register('registrationEndDate', { required: true })}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"default\"\r\n                className={classes.button}\r\n                startIcon={<CloudUploadIcon />}\r\n                {...register('terms', { required: false })}\r\n                \r\n            >\r\n                Upload Terms\r\n            </Button>\r\n\r\n            <FormControlLabel control={<Checkbox {...register('publicationApproval', { required: false })} />} label=\"Publication approval\" />\r\n\r\n            <FormControlLabel control={<Checkbox  {...register('lotteryApproval', { required: false })} />} label=\"Lottery approval\" />\r\n        </div>\r\n\r\n    </form >);\r\n    <button onClick={submit}  className=\"positive ui button\">Save</button>\r\n\r\n    //submit!!!!\r\n    //לבדוק שהתאריכים תקינים\r\n    //סיום ההרשמה ולפני ביצוע ההגרלות\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auctionId: state.auction.newAuction._id,\r\n        auction: state.auction.newAuction\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { setNewAuction })(AuctionInformation);\r\n\r\n"]},"metadata":{},"sourceType":"module"}