{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\user\\\\UpdateDetails.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import './yourProfile.scss'\n// import { connect } from 'react-redux';\n// import React, { useEffect } from 'react';\n// import Visibility from '@material-ui/icons/Visibility';\n// import VisibilityOff from '@material-ui/icons/VisibilityOff';\n// import Button from '@material-ui/core/Button';\n// import InputAdornment from '@material-ui/core/InputAdornment';\n// import IconButton from '@material-ui/core/IconButton';\n// import clsx from 'clsx';\n// import { makeStyles } from '@material-ui/core/styles';\n// import FilledInput from '@material-ui/core/FilledInput';\n// import { updateUser } from '../../store/actions/user'//מעדכן בסטייט ובסטורג\n// const useStyles = makeStyles((theme) => ({\n//     root: {\n//         display: 'flex',\n//         flexWrap: 'wrap',\n//     },\n//     margin: {\n//         margin: theme.spacing(1),\n//     },\n//     withoutLabel: {\n//         marginTop: theme.spacing(3),\n//     },\n//     textField: {\n//         width: '25ch',\n//     },\n//     input_pas_ma: {\n//         color: '#8e8e95',\n//         height: '4vh !important',\n//         background: 'none !important',\n//         color: '#8e8e95 !important',\n//         width: '70% !important',\n//         padding: '0vw !important',\n//         borderBottomColor: '8e8e95 !important',\n//         background: 'none !important',\n//         alignSelf: 'flex-end',\n//         marginRight: 'auto',\n//         marginLeft: 'auto'\n//     },\n//     eye: {\n//         color: '#8e8e95',\n//     },\n//     placeholder_in_form: {\n//         marginLeft: '3% !important',\n//         marginBottom: ' -2% !important'\n//     }\n// }));\n// const UpdateDetails = (props) => {\n//     const classes = useStyles();\n//     const handleChange = (prop) => (event) => {\n//         setValues({ ...values, [prop]: event.target.value });\n//     };\n//     const handleClickShowPassword = () => {\n//         setValues({ ...values, showPassword: !values.showPassword });\n//     };\n//     const handleMouseDownPassword = (event) => {\n//         event.preventDefault();\n//     };\n//     const [values, setValues] = React.useState({\n//         amount: '',\n//         password: '',\n//         weight: '',\n//         weightRange: '',\n//         showPassword: false,\n//     });\n//     //עדכון משתמש קיים\n//     let u = JSON.parse(localStorage.getItem(\"user\")).currentUser;\n//     let password = u.password;\n//     let userName = u.userName;\n//     let email = u.email;\n//     let phone = u.phone;\n//     let city = u.city;\n//     let birthYear = u.birthYear;\n//     const updateUser = () => {\n//         let user = JSON.parse(localStorage.getItem(\"user\")).currentUser;\n//         user.password = password;\n//         user.email = email;\n//         user.phone = phone;\n//         user.city = city;\n//         user.name = userName;\n//         user.birthYear = birthYear;\n//         props.updateUser(user);\n//     };\n//     return (\n//         <>\n//             <center>\n//                 <br />\n//                 <h1 id=\"h1_profile\">Update your details</h1>\n//                 <form className={classes.root} autoComplete=\"off\" id=\"update_user_details_form\" >\n//                     <FilledInput\n//                         type={'text'}\n//                         placeholder=\"Name\"\n//                         required\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\n//                         variant=\"filled\"\n//                         onChange={(e) => { userName = e.target.value }}\n//                         startAdornment={\n//                             <InputAdornment position=\"start\">\n//                                 <i className=\"user icon\"></i>\n//                             </InputAdornment>\n//                         }\n//                         defaultValue={userName}\n//                     />\n//                     <FilledInput\n//                         type={'email'}\n//                         placeholder=\"Email address\"\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\n//                         variant=\"filled\"\n//                         required\n//                         onChange={(e) => { email = e.target.value }}\n//                         startAdornment={\n//                             <InputAdornment position=\"start\">\n//                                 <i className=\"envelope icon\"></i>\n//                             </InputAdornment>\n//                         }\n//                         defaultValue={email} />\n//                     <FilledInput\n//                         type={'text'}\n//                         required\n//                         placeholder='City'\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\n//                         variant=\"filled\"\n//                         onChange={(e) => { city = e.target.value }}\n//                         startAdornment={\n//                             <InputAdornment position=\"start\">\n//                                 <i className=\"map marker alternate icon\"></i>\n//                             </InputAdornment>\n//                         }\n//                         defaultValue={city} />\n//                     <FilledInput\n//                         type={'text'}\n//                         placeholder=\"Year Of Birth\"\n//                         required\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\n//                         variant=\"filled\"\n//                         onChange={(e) => { birthYear = e.target.value }}\n//                         startAdornment={\n//                             <InputAdornment position=\"start\">\n//                                 <i className=\"calendar alternate outline icon\"></i>\n//                             </InputAdornment>\n//                         }\n//                         defaultValue={birthYear} />\n//                     <FilledInput\n//                         type={'text'}\n//                         placeholder=\"Phone Number\"\n//                         required\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\n//                         variant=\"filled\"\n//                         onChange={(e) => { phone = e.target.value }}\n//                         startAdornment={\n//                             <InputAdornment position=\"start\">\n//                                 <i className=\"mobile alternate icon\"></i>\n//                             </InputAdornment>\n//                         }\n//                         defaultValue={phone} />\n//                     <FilledInput\n//                         type={values.showPassword ? 'text' : 'password'}\n//                         onChange={handleChange('password')}\n//                         placeholder=\"Password\"\n//                         required\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\n//                         variant=\"filled\"\n//                         onChange={(e) => { password = e.target.value }}\n//                         startAdornment={\n//                             <InputAdornment position=\"start\">\n//                                 <i className=\"lock icon\"></i>\n//                             </InputAdornment>\n//                         }\n//                         endAdornment={\n//                             <InputAdornment position=\"end\">\n//                                 <IconButton\n//                                     onClick={handleClickShowPassword}\n//                                     onMouseDown={handleMouseDownPassword}\n//                                     className={classes.eye}\n//                                 >\n//                                     {values.showPassword ? <Visibility /> : <VisibilityOff />}\n//                                 </IconButton>\n//                             </InputAdornment>\n//                         }\n//                         defaultValue={password} />\n//                     <br />\n//                     {/* האם לעשות שיעבור לדף הבית */}\n//                     {/* וגם להודיע לו שזה עודכן */}\n//                     <Button type=\"button\" variant=\"contained\" id=\"update_details_btn\" onClick={() => { updateUser() }}>Update</Button>\n//                 </form>\n//             </center >\n//         </>\n//     );\n// }\n// const mapStateToProps = (state) => {\n//     return {\n//     };\n// }\n// export default connect(mapStateToProps, { updateUser})(UpdateDetails);\nexport default function OrerDetails(props) {\n  _s();\n\n  const [anchorEl1, setAnchorEl1] = React.useState(null);\n  const open1 = Boolean(anchorEl1); //לחלון שנפתח למטה\n\n  const [state, setState] = React.useState({\n    bottom: false\n  });\n  const id1 = open1 ? 'simple-popover' : undefined;\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const list = anchor => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: anchor === 'left' ? 'auto' : 250\n    },\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"aaaaaaaaaaaaaaaaaaaaaaaaa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), \">\", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"aaaaaaaaaaaaaaaaaaaaaaaaa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), \">\", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"aaaaaaaaaaaaaaaaaaaaaaaaa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), \">\", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"aaaaaaaaaaaaaaaaaaaaaaaaa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), \">\", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"aaaaaaaaaaaaaaaaaaaaaaaaa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), \">\", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"aaaaaaaaaaaaaaaaaaaaaaaaa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), \">\", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"aaaaaaaaaaaaaaaaaaaaaaaaa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), \">\", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"aaaaaaaaaaaaaaaaaaaaaaaaa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), \">\", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"aaaaaaaaaaaaaaaaaaaaaaaaa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), \">\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 9\n  }, this); // const divStyle = { display: 'inline-block' };\n  // const style1 = { backgroundColor: 'rgb(253, 220, 220)', fontWeight: 'bold' };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ['left'].map(anchor => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-describedby\": id1,\n        variant: \"contained\",\n        onClick: toggleDrawer(anchor, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n        anchor: anchor,\n        open: state[anchor],\n        onClose: toggleDrawer(anchor, false),\n        children: list(anchor)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this)]\n    }, anchor, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 13\n  }, this);\n}\n\n_s(OrerDetails, \"JVJ/DKhV4XSTpCIJBJABC+XPO6M=\");\n\n_c = OrerDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrerDetails\");","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/project-good/project/client/src/components/user/UpdateDetails.js"],"names":["OrerDetails","props","anchorEl1","setAnchorEl1","React","useState","open1","Boolean","state","setState","bottom","id1","undefined","toggleDrawer","anchor","open","event","type","key","list","width","map"],"mappingseAAe,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACvC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,KAAK,CAACC,QAAN,CAAe,IAAf,CAAlC;AACA,QAAMC,KAAK,GAAGC,OAAO,CAACL,SAAD,CAArB,CAFuC,CAIvC;;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACC,QAAN,CAAe;AAAEK,IAAAA,MAAM,EAAE;AAAV,GAAf,CAA1B;AACA,QAAMC,GAAG,GAAGL,KAAK,GAAG,gBAAH,GAAsBM,SAAvC;;AAEA,QAAMC,YAAY,GAAG,CAACC,MAAD,EAASC,IAAT,KAAmBC,KAAD,IAAW;AAC9C,QAAIA,KAAK,CAACC,IAAN,KAAe,SAAf,KAA6BD,KAAK,CAACE,GAAN,KAAc,KAAd,IAAuBF,KAAK,CAACE,GAAN,KAAc,OAAlE,CAAJ,EAAgF;AAAE;AAAS;;AAC3FT,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACM,MAAD,GAAUC;AAAtB,KAAD,CAAR;AACH,GAHD;;AAIA,QAAMI,IAAI,GAAIL,MAAD,iBACT,QAAC,GAAD;AACI,IAAA,EAAE,EAAE;AAAEM,MAAAA,KAAK,EAAEN,MAAM,KAAK,MAAX,GAAoB,MAApB,GAA6B;AAAtC,KADR;AAEI,IAAA,IAAI,EAAC,cAFT;AAGI,IAAA,OAAO,EAAED,YAAY,CAACC,MAAD,EAAS,KAAT,CAHzB;AAII,IAAA,SAAS,EAAED,YAAY,CAACC,MAAD,EAAS,KAAT,CAJ3B;AAAA,4BAOF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPE,oBAQF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARE,oBASF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATE,oBAUF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVE,oBAWF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXE,oBAYF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZE,oBAaF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbE,oBAcF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdE,oBAeF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfE;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAZuC,CA+BvC;AACA;;;AAEA,sBAAQ;AAAA,cACH,CAAC,MAAD,EAASO,GAAT,CAAcP,MAAD,iBACV,QAAC,KAAD,CAAO,QAAP;AAAA,8BACI,QAAC,UAAD;AAAY,4BAAkBH,GAA9B;AAAmC,QAAA,OAAO,EAAC,WAA3C;AAAuD,QAAA,OAAO,EAAEE,YAAY,CAACC,MAAD,EAAS,IAAT;AAA5E;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AACI,QAAA,MAAM,EAAEA,MADZ;AAEI,QAAA,IAAI,EAAEN,KAAK,CAACM,MAAD,CAFf;AAGI,QAAA,OAAO,EAAED,YAAY,CAACC,MAAD,EAAS,KAAT,CAHzB;AAAA,kBAKKK,IAAI,CAACL,MAAD;AALT;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,OAAqBA,MAArB;AAAA;AAAA;AAAA;AAAA,YADH;AADG;AAAA;AAAA;AAAA;AAAA,UAAR;AAgBH;;GAlDuBd,W;;KAAAA,W","sourcesContent":["// import './yourProfile.scss'\r\n// import { connect } from 'react-redux';\r\n// import React, { useEffect } from 'react';\r\n// import Visibility from '@material-ui/icons/Visibility';\r\n// import VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n// import Button from '@material-ui/core/Button';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import clsx from 'clsx';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import FilledInput from '@material-ui/core/FilledInput';\r\n// import { updateUser } from '../../store/actions/user'//מעדכן בסטייט ובסטורג\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//         display: 'flex',\r\n//         flexWrap: 'wrap',\r\n//     },\r\n//     margin: {\r\n//         margin: theme.spacing(1),\r\n//     },\r\n//     withoutLabel: {\r\n//         marginTop: theme.spacing(3),\r\n//     },\r\n//     textField: {\r\n//         width: '25ch',\r\n//     },\r\n//     input_pas_ma: {\r\n//         color: '#8e8e95',\r\n//         height: '4vh !important',\r\n//         background: 'none !important',\r\n//         color: '#8e8e95 !important',\r\n//         width: '70% !important',\r\n//         padding: '0vw !important',\r\n//         borderBottomColor: '8e8e95 !important',\r\n//         background: 'none !important',\r\n//         alignSelf: 'flex-end',\r\n//         marginRight: 'auto',\r\n//         marginLeft: 'auto'\r\n\r\n//     },\r\n//     eye: {\r\n//         color: '#8e8e95',\r\n\r\n//     },\r\n//     placeholder_in_form: {\r\n//         marginLeft: '3% !important',\r\n//         marginBottom: ' -2% !important'\r\n//     }\r\n// }));\r\n\r\n// const UpdateDetails = (props) => {\r\n\r\n//     const classes = useStyles();\r\n//     const handleChange = (prop) => (event) => {\r\n//         setValues({ ...values, [prop]: event.target.value });\r\n//     };\r\n\r\n//     const handleClickShowPassword = () => {\r\n//         setValues({ ...values, showPassword: !values.showPassword });\r\n//     };\r\n\r\n//     const handleMouseDownPassword = (event) => {\r\n//         event.preventDefault();\r\n//     };\r\n\r\n//     const [values, setValues] = React.useState({\r\n//         amount: '',\r\n//         password: '',\r\n//         weight: '',\r\n//         weightRange: '',\r\n//         showPassword: false,\r\n//     });\r\n\r\n//     //עדכון משתמש קיים\r\n//     let u = JSON.parse(localStorage.getItem(\"user\")).currentUser;\r\n//     let password = u.password;\r\n//     let userName = u.userName;\r\n//     let email = u.email;\r\n//     let phone = u.phone;\r\n//     let city = u.city;\r\n//     let birthYear = u.birthYear;\r\n\r\n//     const updateUser = () => {\r\n//         let user = JSON.parse(localStorage.getItem(\"user\")).currentUser;\r\n//         user.password = password;\r\n//         user.email = email;\r\n//         user.phone = phone;\r\n//         user.city = city;\r\n//         user.name = userName;\r\n//         user.birthYear = birthYear;\r\n//         props.updateUser(user);\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             <center>\r\n//                 <br />\r\n\r\n//                 <h1 id=\"h1_profile\">Update your details</h1>\r\n//                 <form className={classes.root} autoComplete=\"off\" id=\"update_user_details_form\" >\r\n\r\n//                     <FilledInput\r\n//                         type={'text'}\r\n//                         placeholder=\"Name\"\r\n//                         required\r\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n//                         variant=\"filled\"\r\n//                         onChange={(e) => { userName = e.target.value }}\r\n//                         startAdornment={\r\n//                             <InputAdornment position=\"start\">\r\n//                                 <i className=\"user icon\"></i>\r\n//                             </InputAdornment>\r\n//                         }\r\n//                         defaultValue={userName}\r\n//                     />\r\n\r\n//                     <FilledInput\r\n//                         type={'email'}\r\n//                         placeholder=\"Email address\"\r\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n//                         variant=\"filled\"\r\n//                         required\r\n//                         onChange={(e) => { email = e.target.value }}\r\n//                         startAdornment={\r\n//                             <InputAdornment position=\"start\">\r\n//                                 <i className=\"envelope icon\"></i>\r\n//                             </InputAdornment>\r\n//                         }\r\n//                         defaultValue={email} />\r\n\r\n//                     <FilledInput\r\n//                         type={'text'}\r\n//                         required\r\n//                         placeholder='City'\r\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n//                         variant=\"filled\"\r\n//                         onChange={(e) => { city = e.target.value }}\r\n//                         startAdornment={\r\n//                             <InputAdornment position=\"start\">\r\n//                                 <i className=\"map marker alternate icon\"></i>\r\n//                             </InputAdornment>\r\n//                         }\r\n//                         defaultValue={city} />\r\n\r\n//                     <FilledInput\r\n//                         type={'text'}\r\n//                         placeholder=\"Year Of Birth\"\r\n//                         required\r\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n//                         variant=\"filled\"\r\n//                         onChange={(e) => { birthYear = e.target.value }}\r\n//                         startAdornment={\r\n//                             <InputAdornment position=\"start\">\r\n//                                 <i className=\"calendar alternate outline icon\"></i>\r\n//                             </InputAdornment>\r\n//                         }\r\n//                         defaultValue={birthYear} />\r\n\r\n//                     <FilledInput\r\n//                         type={'text'}\r\n//                         placeholder=\"Phone Number\"\r\n//                         required\r\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n//                         variant=\"filled\"\r\n//                         onChange={(e) => { phone = e.target.value }}\r\n//                         startAdornment={\r\n//                             <InputAdornment position=\"start\">\r\n//                                 <i className=\"mobile alternate icon\"></i>\r\n//                             </InputAdornment>\r\n//                         }\r\n//                         defaultValue={phone} />\r\n\r\n//                     <FilledInput\r\n//                         type={values.showPassword ? 'text' : 'password'}\r\n//                         onChange={handleChange('password')}\r\n//                         placeholder=\"Password\"\r\n//                         required\r\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n//                         variant=\"filled\"\r\n//                         onChange={(e) => { password = e.target.value }}\r\n//                         startAdornment={\r\n//                             <InputAdornment position=\"start\">\r\n//                                 <i className=\"lock icon\"></i>\r\n//                             </InputAdornment>\r\n//                         }\r\n//                         endAdornment={\r\n//                             <InputAdornment position=\"end\">\r\n//                                 <IconButton\r\n//                                     onClick={handleClickShowPassword}\r\n//                                     onMouseDown={handleMouseDownPassword}\r\n//                                     className={classes.eye}\r\n//                                 >\r\n//                                     {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n//                                 </IconButton>\r\n//                             </InputAdornment>\r\n//                         }\r\n//                         defaultValue={password} />\r\n\r\n\r\n//                     <br />\r\n\r\n\r\n//                     {/* האם לעשות שיעבור לדף הבית */}\r\n//                     {/* וגם להודיע לו שזה עודכן */}\r\n//                     <Button type=\"button\" variant=\"contained\" id=\"update_details_btn\" onClick={() => { updateUser() }}>Update</Button>\r\n//                 </form>\r\n\r\n//             </center >\r\n//         </>\r\n//     );\r\n\r\n// }\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//     };\r\n// }\r\n// export default connect(mapStateToProps, { updateUser})(UpdateDetails);\r\nexport default function OrerDetails(props) {\r\n    const [anchorEl1, setAnchorEl1] = React.useState(null);\r\n    const open1 = Boolean(anchorEl1);\r\n\r\n    //לחלון שנפתח למטה\r\n    const [state, setState] = React.useState({ bottom: false });\r\n    const id1 = open1 ? 'simple-popover' : undefined;\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) { return; }\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n    const list = (anchor) => (\r\n        <Box\r\n            sx={{ width: anchor === 'left' ? 'auto' : 250 }}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n\r\n      <h1>aaaaaaaaaaaaaaaaaaaaaaaaa</h1>>\r\n      <h1>aaaaaaaaaaaaaaaaaaaaaaaaa</h1>>\r\n      <h1>aaaaaaaaaaaaaaaaaaaaaaaaa</h1>>\r\n      <h1>aaaaaaaaaaaaaaaaaaaaaaaaa</h1>>\r\n      <h1>aaaaaaaaaaaaaaaaaaaaaaaaa</h1>>\r\n      <h1>aaaaaaaaaaaaaaaaaaaaaaaaa</h1>>\r\n      <h1>aaaaaaaaaaaaaaaaaaaaaaaaa</h1>>\r\n      <h1>aaaaaaaaaaaaaaaaaaaaaaaaa</h1>>\r\n      <h1>aaaaaaaaaaaaaaaaaaaaaaaaa</h1>>\r\n        </Box >\r\n    );\r\n    // const divStyle = { display: 'inline-block' };\r\n    // const style1 = { backgroundColor: 'rgb(253, 220, 220)', fontWeight: 'bold' };\r\n\r\n    return (<div >\r\n        {['left'].map((anchor) => (\r\n            <React.Fragment key={anchor}>\r\n                <IconButton aria-describedby={id1} variant=\"contained\" onClick={toggleDrawer(anchor, true)}></IconButton>\r\n                <Drawer\r\n                    anchor={anchor}\r\n                    open={state[anchor]}\r\n                    onClose={toggleDrawer(anchor, false)}\r\n                >\r\n                    {list(anchor)}\r\n                </Drawer>\r\n            </React.Fragment>\r\n        ))}\r\n\r\n    </ div>)\r\n\r\n}"]},"metadata":{},"sourceType":"module"}