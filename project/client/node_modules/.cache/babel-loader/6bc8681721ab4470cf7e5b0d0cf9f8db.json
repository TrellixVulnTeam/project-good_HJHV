{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\user\\\\auction manager\\\\AuctionStatistics.js\",\n    _s = $RefreshSig$();\n\nimport './auctionManager.scss';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { connect } from \"react-redux\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport pic from '../../../img/‏‏picture2.png';\nimport { getBestSellingProductInAuctionFromDB, getTotalRevenueFromDB } from '../../../utils/auctionManagerUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AuctionStatistics = props => {\n  _s();\n\n  useEffect(() => {\n    if (props.auction) {\n      getBestSellingProductInAuctionFromDB(props.auction._id).then(succ => {\n        setBestProduct(succ.data);\n        console.log(succ.data);\n      });\n      getTotalRevenueFromDB(props.auction._id).then(succ => {\n        if (succ.status != 400) setSum(succ.data);\n        console.log(succ.data);\n      });\n    } else window.location = \"http://localhost:3000/your_profile\";\n  }, []);\n  const [bestProduct, setBestProduct] = useState(null);\n  const [sum, setSum] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chinese auction statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), props.auction && /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 345\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        height: \"280\",\n        image: props.auction.image || pic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"div\",\n          children: \"Total revenue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: sum\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), bestProduct && /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 345\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        height: \"140\",\n        image: bestProduct.image || pic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"div\",\n          children: \"Best selling product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: bestProduct.sum\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AuctionStatistics, \"3rZWTo5QNu/mTyIbfRHcIjAtq4c=\");\n\n_c = AuctionStatistics;\n\nconst mapStateToProps = state => {\n  return {\n    auction: state.auctionManager.selected_auction_to_options\n  };\n};\n\nexport default connect(mapStateToProps, {})(AuctionStatistics);\n\nvar _c;\n\n$RefreshReg$(_c, \"AuctionStatistics\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/user/auction manager/AuctionStatistics.js"],"names":["Card","CardContent","CardMedia","Typography","connect","React","useEffect","useState","useRef","pic","getBestSellingProductInAuctionFromDB","getTotalRevenueFromDB","AuctionStatistics","props","auction","_id","then","succ","setBestProduct","data","console","log","status","setSum","window","location","bestProduct","sum","maxWidth","image","mapStateToProps","state","auctionManager","selected_auction_to_options"],"mappings":"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","sourcesContent":["import './auctionManager.scss'\r\n\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport { connect } from \"react-redux\";\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport pic from '../../../img/‏‏picture2.png'\r\nimport { getBestSellingProductInAuctionFromDB, getTotalRevenueFromDB } from '../../../utils/auctionManagerUtils'\r\n\r\nconst AuctionStatistics = (props) => {\r\n    useEffect(() => {\r\n        if (props.auction) {\r\n            getBestSellingProductInAuctionFromDB(props.auction._id).then(succ => {\r\n                setBestProduct(succ.data);\r\n                console.log(succ.data)\r\n            });\r\n            getTotalRevenueFromDB(props.auction._id).then(succ => {\r\n                if (succ.status != 400) setSum(succ.data);\r\n                console.log(succ.data)\r\n            })\r\n        }\r\n        else window.location = \"http://localhost:3000/your_profile\"\r\n    }, []);\r\n\r\n    const [bestProduct, setBestProduct] = useState(null);\r\n    const [sum, setSum] = useState(0);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <h1 >Chinese auction statistics</h1>\r\n\r\n\r\n            {props.auction &&\r\n                <Card sx={{ maxWidth: 345 }}>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        height=\"280\"\r\n                        image={props.auction.image || pic}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">Total revenue</Typography>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">{sum}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n\r\n            }\r\n            {bestProduct &&\r\n                <Card sx={{ maxWidth: 345 }}>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        height=\"140\"\r\n                        image={bestProduct.image || pic}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">Best selling product</Typography>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">{bestProduct.sum}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n            }\r\n\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auction: state.auctionManager.selected_auction_to_options\r\n\r\n    };\r\n}\r\nexport default connect(mapStateToProps, {})(AuctionStatistics);"]},"metadata":{},"sourceType":"module"}