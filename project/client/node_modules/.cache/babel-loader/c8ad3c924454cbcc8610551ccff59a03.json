{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\new auction\\\\AuctionInformation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport './NewAuction.scss';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { saveAuctionInformationInDB } from '../../utils/newAuctionUtils';\nimport { useForm } from \"react-hook-form\";\nimport { TextField } from \"@mui/material\";\nimport Alert from '@mui/material/Alert';\nimport { setNewAuction } from '../../store/actions/newAuction';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nconst AuctionInformation = props => {\n  _s();\n\n  let submit = (data, e) => {\n    e.preventDefault();\n    let details = {\n      registrationStartDate: data.registrationStartDate,\n      lotteriesDate: data.lotteriesDate,\n      registrationEndDate: data.registrationEndDate,\n      lotteryApproval: data.lotteryApproval,\n      publicationApproval: data.publicationApproval,\n      name: data.name || \"unknown\"\n    };\n    saveAuctionInformationInDB(props.auctionId, details).then(succ => {\n      if (succ.status != 400) props.setNewAuction(succ.data);\n    });\n  };\n\n  const classes = useStyles();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit(submit),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Auction information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs-in-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        className: \"auctionInformationDate\",\n        children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n          disableToolbar: true,\n          variant: \"inline\",\n          format: \"dd/MM/yyyy\",\n          margin: \"normal\",\n          id: \"date-picker-inline\",\n          label: \"Date of the lottery\",\n          value: selectedDate1,\n          onChange: handleDateChange1,\n          defaultValue: props.auction.lotteriesDate,\n          KeyboardButtonProps: {\n            'aria-label': 'change date'\n          },\n          ...register('lotteriesDate', {\n            required: true\n          }),\n          id: \"input-with-icon-grid\",\n          label: \"Date of the lottery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n          disableToolbar: true,\n          variant: \"inline\",\n          format: \"dd/MM/yyyy\",\n          margin: \"normal\",\n          id: \"date-picker-inline\",\n          label: \"Registration start date\",\n          value: selectedDate2,\n          onChange: handleDateChange2,\n          defaultValue: props.auction.registrationStartDate,\n          KeyboardButtonProps: {\n            'aria-label': 'change date'\n          },\n          ...register('registrationStartDate', {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n          disableToolbar: true,\n          variant: \"inline\",\n          format: \"dd/MM/yyyy\",\n          margin: \"normal\",\n          id: \"date-picker-inline\",\n          label: \"Registration end date\",\n          value: selectedDate3,\n          onChange: handleDateChange3,\n          KeyboardButtonProps: {\n            'aria-label': 'change date'\n          },\n          defaultValue: props.auction.registrationEndDate,\n          ...register('registrationEndDate', {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"txt\",\n        variant: \"standard\",\n        defaultValue: props.auction.name,\n        ...register('name', {\n          required: true\n        }),\n        id: \"input-with-icon-grid\",\n        label: \"Name Auction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"default\",\n        className: classes.button,\n        startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 28\n        }, this) // onChange={(e) => terms=e.target.value}\n        ,\n        children: \"Upload Terms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, { ...register('publicationApproval', {\n            required: false\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 40\n        }, this),\n        label: \"Publication approval\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, { ...register('lotteryApproval', {\n            required: false\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 40\n        }, this),\n        label: \"Lottery approval\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"positive ui button\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 13\n  }, this); //submit!!!!\n  //לבדוק שהתאריכים תקינים\n  //סיום ההרשמה ולפני ביצוע ההגרלות\n};\n\n_s(AuctionInformation, \"OVQ6msHxuN7znnq7S4hl+xCuOh0=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = AuctionInformation;\n\nconst mapStateToProps = state => {\n  return {\n    auctionId: state.auction.newAuction._id,\n    auction: state.auction.newAuction\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setNewAuction\n})(AuctionInformation);\n\nvar _c;\n\n$RefreshReg$(_c, \"AuctionInformation\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/new auction/AuctionInformation.js"],"names":["React","useEffect","useState","connect","makeStyles","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","Button","CloudUploadIcon","saveAuctionInformationInDB","useForm","TextField","Alert","setNewAuction","Checkbox","FormControlLabel","useStyles","theme","root","margin","spacing","AuctionInformation","props","submit","data","e","preventDefault","details","registrationStartDate","lotteriesDate","registrationEndDate","lotteryApproval","publicationApproval","name","auctionId","then","succ","status","classes","register","handleSubmit","formState","errors","selectedDate1","handleDateChange1","auction","required","selectedDate2","handleDateChange2","selectedDate3","handleDateChange3","button","mapStateToProps","state","newAuction","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './NewAuction.scss'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { saveAuctionInformationInDB } from '../../utils/newAuctionUtils';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { TextField } from \"@mui/material\";\r\nimport Alert from '@mui/material/Alert';\r\nimport { setNewAuction } from '../../store/actions/newAuction';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n    },\r\n}));\r\n\r\nconst AuctionInformation = (props) => {\r\n    let submit = (data, e) => {\r\n        e.preventDefault();\r\n\r\n        let details = {\r\n            registrationStartDate: data.registrationStartDate,\r\n            lotteriesDate: data.lotteriesDate,\r\n            registrationEndDate: data.registrationEndDate,\r\n            lotteryApproval: data.lotteryApproval,\r\n            publicationApproval: data.publicationApproval,\r\n            name: data.name || \"unknown\"\r\n        }\r\n\r\n        saveAuctionInformationInDB(props.auctionId, details).then(succ => {\r\n            if (succ.status != 400)\r\n                props.setNewAuction(succ.data);\r\n        })\r\n    }\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n\r\n\r\n\r\n    return (<form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit(submit)}>\r\n        <h1>Auction information</h1>\r\n        <div className={\"inputs-in-form-container\"} >\r\n\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils} className=\"auctionInformationDate\">\r\n                <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    label=\"Date of the lottery\"\r\n                    value={selectedDate1}\r\n                    onChange={handleDateChange1}\r\n                    defaultValue={props.auction.lotteriesDate}\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                    {...register('lotteriesDate', { required: true })} id=\"input-with-icon-grid\" label=\"Date of the lottery\"\r\n                />\r\n\r\n            </MuiPickersUtilsProvider>\r\n\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    label=\"Registration start date\"\r\n                    value={selectedDate2}\r\n                    onChange={handleDateChange2}\r\n                    defaultValue={props.auction.registrationStartDate}\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                    {...register('registrationStartDate', { required: true })}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    label=\"Registration end date\"\r\n                    value={selectedDate3}\r\n                    onChange={handleDateChange3}\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                    defaultValue={props.auction.registrationEndDate}\r\n                    {...register('registrationEndDate', { required: true })}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n\r\n            <TextField className=\"txt\" variant=\"standard\" defaultValue={props.auction.name} {...register('name', { required: true })} id=\"input-with-icon-grid\" label=\"Name Auction\" />\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"default\"\r\n                className={classes.button}\r\n                startIcon={<CloudUploadIcon />}\r\n            // onChange={(e) => terms=e.target.value}\r\n            >\r\n                Upload Terms\r\n            </Button>\r\n\r\n            <FormControlLabel control={<Checkbox {...register('publicationApproval', { required: false })} />} label=\"Publication approval\" />\r\n\r\n            <FormControlLabel control={<Checkbox  {...register('lotteryApproval', { required: false })} />} label=\"Lottery approval\" />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"positive ui button\">Save</button>\r\n    </form >);\r\n    //submit!!!!\r\n    //לבדוק שהתאריכים תקינים\r\n    //סיום ההרשמה ולפני ביצוע ההגרלות\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auctionId: state.auction.newAuction._id,\r\n        auction: state.auction.newAuction\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { setNewAuction })(AuctionInformation);\r\n\r\n"]},"metadata":{},"sourceType":"module"}