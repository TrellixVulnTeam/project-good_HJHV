{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\user\\\\CartAll.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport './CartAll.scss';\nimport { connect } from \"react-redux\";\nimport React, { useEffect, useState } from 'react';\nimport { emptyTheCartByAuction, getCartFromDB } from '../../utils/userUtils';\nimport { getAuctionFromDB } from '../../store/actions/currentAuction';\nimport de from '../../img/icons/dustbin.png';\nimport IconButton from '@material-ui/core/IconButton';\nimport OneAuction from '../homePage/OneAuction';\nimport { setNewAuction } from '../../store/actions/newAuction';\nimport { setCurrentAuction } from '../../store/actions/currentAuction';\nimport { signIn } from '../../store/actions/signIn';\nimport { getUserByIDFromDB } from '../../utils/userUtils';\nimport { getAuctionByIdFromDB } from '../../utils/auctionUtils';\nimport { dataUpdate } from '../../store/actions/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartAll = props => {\n  _s();\n\n  useEffect(() => {\n    props.dataUpdate();\n    getCartFromDB(props.currentUser._id).then(succ => {\n      if (succ.status != 400) setArray(succ.data);\n    });\n  }, []);\n  const [array, setArray] = React.useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"a-container\",\n    children: array && array.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n          onClick: () => props.getAuctionFromDB(item.auction._id),\n          to: `/auction`,\n          children: /*#__PURE__*/_jsxDEV(OneAuction, {\n            item: item.auction\n          }, parseInt(item.auction._id), false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this)\n        }, parseInt(item.auction._id), false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Amount to pay: \", item.sum, \"\\u20AA\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => emptyTheCartByAuction(item.auction._id, props.currentUser._id).then(succ => {\n              if (succ.status != 400) getCartFromDB(props.currentUser._id).then(succ => {\n                if (succ.status != 400) setArray(succ.data);\n              });\n            }),\n            title: \"Delete\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"my_icon\",\n              src: de\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CartAll, \"exZcaE3/N32/M5pkSmjX6f036YY=\");\n\n_c = CartAll;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    currentAuction: state.currentAuction.currentAuction,\n    currentUser: state.user.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAuctionFromDB,\n  signIn,\n  setCurrentAuction,\n  setNewAuction,\n  dataUpdate\n})(CartAll);\n\nvar _c;\n\n$RefreshReg$(_c, \"CartAll\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/user/CartAll.js"],"names":["Link","connect","React","useEffect","useState","emptyTheCartByAuction","getCartFromDB","getAuctionFromDB","de","IconButton","OneAuction","setNewAuction","setCurrentAuction","signIn","getUserByIDFromDB","getAuctionByIdFromDB","dataUpdate","CartAll","props","currentUser","_id","then","succ","status","setArray","data","array","map","item","auction","parseInt","sum","mapStateToProps","state","user","currentAuction"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom'\r\nimport './CartAll.scss';\r\nimport { connect } from \"react-redux\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { emptyTheCartByAuction, getCartFromDB } from '../../utils/userUtils';\r\nimport { getAuctionFromDB } from '../../store/actions/currentAuction'\r\nimport de from '../../img/icons/dustbin.png'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OneAuction from '../homePage/OneAuction';\r\nimport { setNewAuction } from '../../store/actions/newAuction';\r\nimport { setCurrentAuction } from '../../store/actions/currentAuction';\r\nimport { signIn } from '../../store/actions/signIn';\r\nimport { getUserByIDFromDB } from '../../utils/userUtils';\r\nimport { getAuctionByIdFromDB } from '../../utils/auctionUtils';\r\nimport { dataUpdate } from '../../store/actions/user';\r\nconst CartAll = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.dataUpdate();\r\n\r\n        getCartFromDB(props.currentUser._id).then(succ => {\r\n            if (succ.status != 400) setArray(succ.data);\r\n        })\r\n    }, [])\r\n\r\n    const [array, setArray] = React.useState(null);\r\n\r\n    return (<div id=\"a-container\">\r\n        {array && array.map((item) => {\r\n            return (\r\n                <div> <Link\r\n                    key={parseInt(item.auction._id)}\r\n                    onClick={() => props.getAuctionFromDB(item.auction._id)}\r\n                    to={`/auction`}>\r\n                    <OneAuction key={parseInt(item.auction._id)} item={item.auction} />\r\n\r\n                </Link>\r\n                    <center>\r\n                        <h3>Amount to pay: {item.sum}â‚ª</h3>\r\n                        <IconButton onClick={() => emptyTheCartByAuction(item.auction._id, props.currentUser._id).then(succ => {\r\n                            if (succ.status != 400) getCartFromDB(props.currentUser._id).then(succ => {\r\n                                if (succ.status != 400) setArray(succ.data);\r\n                            })\r\n                        })} title=\"Delete\" >\r\n                            <img className=\"my_icon\" src={de} ></img>\r\n                        </IconButton>\r\n                    </center>\r\n                </div>\r\n            )\r\n        })}\r\n    </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        currentAuction: state.currentAuction.currentAuction,\r\n        currentUser: state.user.currentUser\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { getAuctionFromDB, signIn, setCurrentAuction, setNewAuction, dataUpdate })(CartAll);"]},"metadata":{},"sourceType":"module"}