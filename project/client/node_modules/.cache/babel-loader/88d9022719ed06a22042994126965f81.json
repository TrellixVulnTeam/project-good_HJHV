{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\user\\\\CartAll.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport './CartAll.scss';\nimport { connect } from \"react-redux\";\nimport React, { useEffect, useState } from 'react';\nimport { emptyTheCartByAuction, getCartFromDB } from '../../utils/userUtils';\nimport { getAuctionFromDB } from '../../store/actions/currentAuction';\nimport de from '../../img/icons/dustbin.png';\nimport IconButton from '@material-ui/core/IconButton';\nimport OneAuction from '../homePage/OneAuction';\nimport { setNewAuction } from '../../store/actions/newAuction';\nimport { setCurrentAuction } from '../../store/actions/currentAuction';\nimport { signIn } from '../../store/actions/signIn';\nimport { getUserByIDFromDB } from '../../utils/userUtils';\nimport { getAuctionByIdFromDB } from '../../utils/auctionUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartAll = props => {\n  _s();\n\n  useEffect(() => {\n    let id = localStorage.getItem(\"user\");\n    let a_id = localStorage.getItem(\"currentAuction\");\n    getUserByIDFromDB(id).then(succ => {\n      if (succ.status != 400) props.signIn(succ.data.password, succ.data.email);\n    });\n    getAuctionByIdFromDB(a_id).then(succ => {\n      if (succ.status != 400) props.setCurrentAuction(succ.data);\n    });\n    getCartFromDB(props.currentUser._id).then(succ => {\n      if (succ.status != 400) setArray(succ.data);\n    });\n  }, []);\n  const [array, setArray] = React.useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"a-container\",\n    children: array && array.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n          onClick: () => props.getAuctionFromDB(item.auction._id),\n          to: `/auction`,\n          children: /*#__PURE__*/_jsxDEV(OneAuction, {\n            item: item.auction\n          }, parseInt(item.auction._id), false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)\n        }, parseInt(item.auction._id), false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Amount to pay: \", item.sum, \"\\u20AA\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => emptyTheCartByAuction(item.auction._id, props.currentUser._id).then(succ => {\n              if (succ.status != 400) getCartFromDB(props.currentUser._id).then(succ => {\n                if (succ.status != 400) setArray(succ.data);\n              });\n            }),\n            title: \"Delete\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"my_icon\",\n              src: de\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CartAll, \"exZcaE3/N32/M5pkSmjX6f036YY=\");\n\n_c = CartAll;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    currentAuction: state.currentAuction.currentAuction,\n    currentUser: state.user.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAuctionFromDB,\n  signIn,\n  setCurrentAuction,\n  setNewAuction\n})(CartAll);\n\nvar _c;\n\n$RefreshReg$(_c, \"CartAll\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/user/CartAll.js"],"names":["Link","connect","React","useEffect","useState","emptyTheCartByAuction","getCartFromDB","getAuctionFromDB","de","IconButton","OneAuction","setNewAuction","setCurrentAuction","signIn","getUserByIDFromDB","getAuctionByIdFromDB","CartAll","props","id","localStorage","getItem","a_id","then","succ","status","data","password","email","currentUser","_id","setArray","array","map","item","auction","parseInt","sum","mapStateToProps","state","user","currentAuction"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom'\r\nimport './CartAll.scss';\r\nimport { connect } from \"react-redux\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { emptyTheCartByAuction, getCartFromDB } from '../../utils/userUtils';\r\nimport { getAuctionFromDB } from '../../store/actions/currentAuction'\r\nimport de from '../../img/icons/dustbin.png'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OneAuction from '../homePage/OneAuction';\r\nimport { setNewAuction } from '../../store/actions/newAuction';\r\nimport { setCurrentAuction } from '../../store/actions/currentAuction';\r\nimport { signIn } from '../../store/actions/signIn';\r\nimport { getUserByIDFromDB } from '../../utils/userUtils';\r\nimport { getAuctionByIdFromDB } from '../../utils/auctionUtils';\r\nconst CartAll = (props) => {\r\n\r\n    useEffect(() => {\r\n        let id = localStorage.getItem(\"user\");\r\n        let a_id = localStorage.getItem(\"currentAuction\");\r\n        getUserByIDFromDB(id).then(succ => { if (succ.status != 400) props.signIn(succ.data.password, succ.data.email); })\r\n        getAuctionByIdFromDB(a_id).then(succ => { if (succ.status != 400) props.setCurrentAuction(succ.data) });\r\n\r\n\r\n        getCartFromDB(props.currentUser._id).then(succ => {\r\n            if (succ.status != 400) setArray(succ.data);\r\n        })\r\n    }, [])\r\n\r\n    const [array, setArray] = React.useState(null);\r\n\r\n    return (<div id=\"a-container\">\r\n        {array && array.map((item) => {\r\n            return (\r\n                <div> <Link\r\n                    key={parseInt(item.auction._id)}\r\n                    onClick={() => props.getAuctionFromDB(item.auction._id)}\r\n                    to={`/auction`}>\r\n                    <OneAuction key={parseInt(item.auction._id)} item={item.auction} />\r\n\r\n                </Link>\r\n                    <center>\r\n                        <h3>Amount to pay: {item.sum}â‚ª</h3>\r\n                        <IconButton onClick={() => emptyTheCartByAuction(item.auction._id, props.currentUser._id).then(succ => {\r\n                            if (succ.status != 400) getCartFromDB(props.currentUser._id).then(succ => {\r\n                                if (succ.status != 400) setArray(succ.data);\r\n                            })\r\n                        })} title=\"Delete\" >\r\n                            <img className=\"my_icon\" src={de} ></img>\r\n                        </IconButton>\r\n                    </center>\r\n                </div>\r\n            )\r\n        })}\r\n    </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        currentAuction: state.currentAuction.currentAuction,\r\n        currentUser: state.user.currentUser\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { getAuctionFromDB, signIn, setCurrentAuction, setNewAuction })(CartAll);"]},"metadata":{},"sourceType":"module"}