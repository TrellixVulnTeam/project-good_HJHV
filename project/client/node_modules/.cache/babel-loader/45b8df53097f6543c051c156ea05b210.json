{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\login\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport { addUser } from '../../store/actions/signUp';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Button from '@material-ui/core/Button';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton'; // import EmailOutlinedIcon from '@material-ui/icons/EmailOutlined';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput'; // import LockRoundedIcon from '@material-ui/icons/LockRounded';\n// import { MDBCloseIcon } from 'mdbreact';\n// import LocalPhoneIcon from '@material-ui/icons/LocalPhone';\n// import PersonIcon from '@material-ui/icons/Person';\n// import PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\n// import PlaceIcon from '@material-ui/icons/Place';\n// import TodayIcon from '@material-ui/icons/Today';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: '25ch'\n  },\n  input_pas_ma: {\n    color: '#8e8e95',\n    height: '4vh !important',\n    background: 'none !important',\n    color: '#8e8e95 !important',\n    width: '100% !important',\n    padding: '0vw !important',\n    borderBottomColor: '8e8e95 !important',\n    marginInline: '5% !important',\n    background: 'none !important',\n    // alignItems:'center !important'\n    alignSelf: 'flex-end'\n  },\n  eye: {\n    color: '#8e8e95'\n  }\n}));\n\nconst SignUp = props => {\n  _s();\n\n  const classes = useStyles();\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false\n  }); //הרשמת משתמש חדש\n\n  let password = \"\";\n  let userName = \"\";\n  let email = \"\";\n  let phone = \"\";\n  let adress = \"\";\n  let birthYear;\n\n  const createUser = () => {\n    let newUser = {\n      password,\n      userName,\n      email,\n      phone,\n      adress,\n      birthYear\n    };\n    props.addUser(newUser); // אם ההוספה הצליחה\n    // בסטייט נשנה את איז-אפן-מודל שיהיה פולס\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputs_btns\",\n          children: [/*#__PURE__*/_jsxDEV(FilledInput, {\n            type: 'text',\n            placeholder: \"Username\",\n            required: true,\n            className: (clsx(classes.margin, classes.textField, classes.input_pas_ma), xxx),\n            variant: \"filled\",\n            onChange: e => {\n              userName = e.target.value;\n            },\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"user icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FilledInput, {\n            type: 'text',\n            placeholder: \"Mail Adress\",\n            className: clsx(classes.margin, classes.textField, classes.input_pas_ma),\n            variant: \"filled\",\n            required: true,\n            onChange: e => {\n              email = e.target.value;\n            },\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"envelope icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FilledInput, {\n            type: 'text',\n            placeholder: \"Adress\",\n            required: true,\n            className: clsx(classes.margin, classes.textField, classes.input_pas_ma),\n            variant: \"filled\",\n            onChange: e => {\n              adress = e.target.value;\n            },\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"map marker alternate icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FilledInput, {\n            type: 'text',\n            placeholder: \"Year Of Birth\",\n            required: true,\n            className: clsx(classes.margin, classes.textField, classes.input_pas_ma),\n            variant: \"filled\",\n            onChange: e => {\n              birthYear = e.target.value;\n            },\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"calendar alternate outline icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FilledInput, {\n            type: 'text',\n            placeholder: \"Phone Number\",\n            required: true,\n            className: clsx(classes.margin, classes.textField, classes.input_pas_ma),\n            variant: \"filled\",\n            onChange: e => {\n              phone = e.target.value;\n            },\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mobile alternate icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FilledInput, {\n            type: values.showPassword ? 'text' : 'password',\n            onChange: handleChange('password'),\n            placeholder: \"Password\",\n            required: true,\n            className: clsx(classes.margin, classes.textField, classes.input_pas_ma),\n            variant: \"filled\",\n            onChange: e => {\n              password = e.target.value;\n            },\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"lock icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 33\n            }, this),\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleClickShowPassword,\n                onMouseDown: handleMouseDownPassword,\n                className: classes.eye,\n                children: values.showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 64\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 81\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            variant: \"contained\",\n            className: \"login_btn\",\n            onClick: createUser,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"E6JKtiyoLp6xTwS5SNurEEfoe3g=\", false, function () {\n  return [useStyles];\n});\n\n_c = SignUp;\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.user.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addUser\n})(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/login/SignUp.js"],"names":["connect","React","addUser","Visibility","VisibilityOff","Button","InputAdornment","IconButton","clsx","makeStyles","FilledInput","useStyles","theme","root","display","flexWrap","margin","spacing","withoutLabel","marginTop","textField","width","input_pas_ma","color","height","background","padding","borderBottomColor","marginInline","alignSelf","eye","SignUp","props","classes","handleChange","prop","event","setValues","values","target","value","handleClickShowPassword","showPassword","handleMouseDownPassword","preventDefault","useState","amount","password","weight","weightRange","userName","email","phone","adress","birthYear","createUser","newUser","xxx","e","mapStateToProps","state","currentUser","user"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,QAAQ,EAAE;AAFR,GAD+B;AAKrCC,EAAAA,MAAM,EAAE;AACJA,IAAAA,MAAM,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AADJ,GAL6B;AAQrCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,SAAS,EAAEP,KAAK,CAACK,OAAN,CAAc,CAAd;AADD,GARuB;AAWrCG,EAAAA,SAAS,EAAE;AACPC,IAAAA,KAAK,EAAE;AADA,GAX0B;AAcrCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,KAAK,EAAE,SADG;AAEVC,IAAAA,MAAM,EAAE,gBAFE;AAGVC,IAAAA,UAAU,EAAE,iBAHF;AAIVF,IAAAA,KAAK,EAAE,oBAJG;AAKVF,IAAAA,KAAK,EAAE,iBALG;AAMVK,IAAAA,OAAO,EAAE,gBANC;AAOVC,IAAAA,iBAAiB,EAAE,mBAPT;AAQVC,IAAAA,YAAY,EAAE,eARJ;AASVH,IAAAA,UAAU,EAAE,iBATF;AAUV;AACAI,IAAAA,SAAS,EAAE;AAXD,GAduB;AA4BrCC,EAAAA,GAAG,EAAE;AACDP,IAAAA,KAAK,EAAE;AADN;AA5BgC,CAAZ,CAAD,CAA5B;;AAkCA,MAAMQ,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,OAAO,GAAGtB,SAAS,EAAzB;;AACA,QAAMuB,YAAY,GAAIC,IAAD,IAAWC,KAAD,IAAW;AACtCC,IAAAA,SAAS,CAAC,EAAE,GAAGC,MAAL;AAAa,OAACH,IAAD,GAAQC,KAAK,CAACG,MAAN,CAAaC;AAAlC,KAAD,CAAT;AACH,GAFD;;AAIA,QAAMC,uBAAuB,GAAG,MAAM;AAClCJ,IAAAA,SAAS,CAAC,EAAE,GAAGC,MAAL;AAAaI,MAAAA,YAAY,EAAE,CAACJ,MAAM,CAACI;AAAnC,KAAD,CAAT;AACH,GAFD;;AAIA,QAAMC,uBAAuB,GAAIP,KAAD,IAAW;AACvCA,IAAAA,KAAK,CAACQ,cAAN;AACH,GAFD;;AAGA,QAAM,CAACN,MAAD,EAASD,SAAT,IAAsBpC,KAAK,CAAC4C,QAAN,CAAe;AACvCC,IAAAA,MAAM,EAAE,EAD+B;AAEvCC,IAAAA,QAAQ,EAAE,EAF6B;AAGvCC,IAAAA,MAAM,EAAE,EAH+B;AAIvCC,IAAAA,WAAW,EAAE,EAJ0B;AAKvCP,IAAAA,YAAY,EAAE;AALyB,GAAf,CAA5B,CAbsB,CAuBtB;;AACA,MAAIK,QAAQ,GAAG,EAAf;AACA,MAAIG,QAAQ,GAAG,EAAf;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,SAAJ;;AACA,QAAMC,UAAU,GAAG,MAAM;AACrB,QAAIC,OAAO,GAAG;AAAET,MAAAA,QAAF;AAAYG,MAAAA,QAAZ;AAAsBC,MAAAA,KAAtB;AAA6BC,MAAAA,KAA7B;AAAoCC,MAAAA,MAApC;AAA4CC,MAAAA;AAA5C,KAAd;AACAtB,IAAAA,KAAK,CAAC9B,OAAN,CAAcsD,OAAd,EAFqB,CAGrB;AACA;AACH,GALD;;AAOA,sBACI;AAAA,2BACI;AAAM,MAAA,SAAS,EAAEvB,OAAO,CAACpB,IAAzB;AAA+B,MAAA,UAAU,MAAzC;AAA0C,MAAA,YAAY,EAAC,KAAvD;AAAA,6BACI;AAAA,+BAEI;AAAK,UAAA,SAAS,EAAE,aAAhB;AAAA,kCACI,QAAC,WAAD;AACI,YAAA,IAAI,EAAE,MADV;AAEI,YAAA,WAAW,EAAC,UAFhB;AAGI,YAAA,QAAQ,MAHZ;AAII,YAAA,SAAS,GAAEL,IAAI,CAACyB,OAAO,CAACjB,MAAT,EAAiBiB,OAAO,CAACb,SAAzB,EAAoCa,OAAO,CAACX,YAA5C,CAAJ,EAA8DmC,GAAhE,CAJb;AAKI,YAAA,OAAO,EAAC,QALZ;AAMI,YAAA,QAAQ,EAAGC,CAAD,IAAO;AAAER,cAAAA,QAAQ,GAAGQ,CAAC,CAACnB,MAAF,CAASC,KAApB;AAA2B,aANlD;AAOI,YAAA,cAAc,eACV,QAAC,cAAD;AAAgB,cAAA,QAAQ,EAAC,OAAzB;AAAA,qCACI;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AARR;AAAA;AAAA;AAAA;AAAA,kBADJ,eAcI,QAAC,WAAD;AACI,YAAA,IAAI,EAAE,MADV;AAEI,YAAA,WAAW,EAAC,aAFhB;AAGI,YAAA,SAAS,EAAEhC,IAAI,CAACyB,OAAO,CAACjB,MAAT,EAAiBiB,OAAO,CAACb,SAAzB,EAAoCa,OAAO,CAACX,YAA5C,CAHnB;AAII,YAAA,OAAO,EAAC,QAJZ;AAKI,YAAA,QAAQ,MALZ;AAMI,YAAA,QAAQ,EAAGoC,CAAD,IAAO;AAAEP,cAAAA,KAAK,GAAGO,CAAC,CAACnB,MAAF,CAASC,KAAjB;AAAwB,aAN/C;AAOI,YAAA,cAAc,eACV,QAAC,cAAD;AAAgB,cAAA,QAAQ,EAAC,OAAzB;AAAA,qCACI;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AARR;AAAA;AAAA;AAAA;AAAA,kBAdJ,eA2BI,QAAC,WAAD;AACI,YAAA,IAAI,EAAE,MADV;AAEI,YAAA,WAAW,EAAC,QAFhB;AAGI,YAAA,QAAQ,MAHZ;AAII,YAAA,SAAS,EAAEhC,IAAI,CAACyB,OAAO,CAACjB,MAAT,EAAiBiB,OAAO,CAACb,SAAzB,EAAoCa,OAAO,CAACX,YAA5C,CAJnB;AAKI,YAAA,OAAO,EAAC,QALZ;AAMI,YAAA,QAAQ,EAAGoC,CAAD,IAAO;AAAEL,cAAAA,MAAM,GAAGK,CAAC,CAACnB,MAAF,CAASC,KAAlB;AAAyB,aANhD;AAOI,YAAA,cAAc,eACV,QAAC,cAAD;AAAgB,cAAA,QAAQ,EAAC,OAAzB;AAAA,qCACI;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AARR;AAAA;AAAA;AAAA;AAAA,kBA3BJ,eAwCI,QAAC,WAAD;AACI,YAAA,IAAI,EAAE,MADV;AAEI,YAAA,WAAW,EAAC,eAFhB;AAGI,YAAA,QAAQ,MAHZ;AAII,YAAA,SAAS,EAAEhC,IAAI,CAACyB,OAAO,CAACjB,MAAT,EAAiBiB,OAAO,CAACb,SAAzB,EAAoCa,OAAO,CAACX,YAA5C,CAJnB;AAKI,YAAA,OAAO,EAAC,QALZ;AAMI,YAAA,QAAQ,EAAGoC,CAAD,IAAO;AAAEJ,cAAAA,SAAS,GAAGI,CAAC,CAACnB,MAAF,CAASC,KAArB;AAA4B,aANnD;AAOI,YAAA,cAAc,eACV,QAAC,cAAD;AAAgB,cAAA,QAAQ,EAAC,OAAzB;AAAA,qCACI;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AARR;AAAA;AAAA;AAAA;AAAA,kBAxCJ,eAqDI,QAAC,WAAD;AACI,YAAA,IAAI,EAAE,MADV;AAEI,YAAA,WAAW,EAAC,cAFhB;AAGI,YAAA,QAAQ,MAHZ;AAII,YAAA,SAAS,EAAEhC,IAAI,CAACyB,OAAO,CAACjB,MAAT,EAAiBiB,OAAO,CAACb,SAAzB,EAAoCa,OAAO,CAACX,YAA5C,CAJnB;AAKI,YAAA,OAAO,EAAC,QALZ;AAMI,YAAA,QAAQ,EAAGoC,CAAD,IAAO;AAAEN,cAAAA,KAAK,GAAGM,CAAC,CAACnB,MAAF,CAASC,KAAjB;AAAwB,aAN/C;AAOI,YAAA,cAAc,eACV,QAAC,cAAD;AAAgB,cAAA,QAAQ,EAAC,OAAzB;AAAA,qCACI;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AARR;AAAA;AAAA;AAAA;AAAA,kBArDJ,eAkEI,QAAC,WAAD;AACI,YAAA,IAAI,EAAEF,MAAM,CAACI,YAAP,GAAsB,MAAtB,GAA+B,UADzC;AAEI,YAAA,QAAQ,EAAER,YAAY,CAAC,UAAD,CAF1B;AAGI,YAAA,WAAW,EAAC,UAHhB;AAII,YAAA,QAAQ,MAJZ;AAKI,YAAA,SAAS,EAAE1B,IAAI,CAACyB,OAAO,CAACjB,MAAT,EAAiBiB,OAAO,CAACb,SAAzB,EAAoCa,OAAO,CAACX,YAA5C,CALnB;AAMI,YAAA,OAAO,EAAC,QANZ;AAOI,YAAA,QAAQ,EAAGoC,CAAD,IAAO;AAAEX,cAAAA,QAAQ,GAAGW,CAAC,CAACnB,MAAF,CAASC,KAApB;AAA2B,aAPlD;AAQI,YAAA,cAAc,eACV,QAAC,cAAD;AAAgB,cAAA,QAAQ,EAAC,OAAzB;AAAA,qCACI;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBATR;AAaI,YAAA,YAAY,eACR,QAAC,cAAD;AAAgB,cAAA,QAAQ,EAAC,KAAzB;AAAA,qCACI,QAAC,UAAD;AACI,gBAAA,OAAO,EAAEC,uBADb;AAEI,gBAAA,WAAW,EAAEE,uBAFjB;AAGI,gBAAA,SAAS,EAAEV,OAAO,CAACH,GAHvB;AAAA,0BAKKQ,MAAM,CAACI,YAAP,gBAAsB,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,wBAAtB,gBAAuC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAL5C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAdR;AAAA;AAAA;AAAA;AAAA,kBAlEJ,eA2FI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAC,WAA9B;AAA0C,YAAA,SAAS,EAAE,WAArD;AAAkE,YAAA,OAAO,EAAEa,UAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3FJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2GH,CAhJD;;GAAMxB,M;UACcpB,S;;;KADdoB,M;;AAkJN,MAAM4B,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACE,IAAN,CAAWD;AADrB,GAAP;AAGH,CAJD;;AAKA,eAAe7D,OAAO,CAAC2D,eAAD,EAAkB;AAAEzD,EAAAA;AAAF,CAAlB,CAAP,CAAsC6B,MAAtC,CAAf","sourcesContent":["import { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport { addUser } from '../../store/actions/signUp';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n// import EmailOutlinedIcon from '@material-ui/icons/EmailOutlined';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\n// import LockRoundedIcon from '@material-ui/icons/LockRounded';\r\n// import { MDBCloseIcon } from 'mdbreact';\r\n// import LocalPhoneIcon from '@material-ui/icons/LocalPhone';\r\n// import PersonIcon from '@material-ui/icons/Person';\r\n// import PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n// import PlaceIcon from '@material-ui/icons/Place';\r\n// import TodayIcon from '@material-ui/icons/Today';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n        width: '25ch',\r\n    },\r\n    input_pas_ma: {\r\n        color: '#8e8e95',\r\n        height: '4vh !important',\r\n        background: 'none !important',\r\n        color: '#8e8e95 !important',\r\n        width: '100% !important',\r\n        padding: '0vw !important',\r\n        borderBottomColor: '8e8e95 !important',\r\n        marginInline: '5% !important',\r\n        background: 'none !important',\r\n        // alignItems:'center !important'\r\n        alignSelf: 'flex-end'\r\n\r\n    },\r\n    eye: {\r\n        color: '#8e8e95',\r\n\r\n    }\r\n}));\r\n\r\nconst SignUp = (props) => {\r\n    const classes = useStyles();\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n    const [values, setValues] = React.useState({\r\n        amount: '',\r\n        password: '',\r\n        weight: '',\r\n        weightRange: '',\r\n        showPassword: false,\r\n    });\r\n\r\n\r\n\r\n    //הרשמת משתמש חדש\r\n    let password = \"\";\r\n    let userName = \"\";\r\n    let email = \"\";\r\n    let phone = \"\";\r\n    let adress = \"\";\r\n    let birthYear;\r\n    const createUser = () => {\r\n        let newUser = { password, userName, email, phone, adress, birthYear };\r\n        props.addUser(newUser);\r\n        // אם ההוספה הצליחה\r\n        // בסטייט נשנה את איז-אפן-מודל שיהיה פולס\r\n    };\r\n\r\n    return (\r\n        <center>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <div>\r\n\r\n                    <div className={\"inputs_btns\"}>\r\n                        <FilledInput\r\n                            type={'text'}\r\n                            placeholder=\"Username\"\r\n                            required\r\n                            className={clsx(classes.margin, classes.textField, classes.input_pas_ma),xxx}\r\n                            variant=\"filled\"\r\n                            onChange={(e) => { userName = e.target.value }}\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <i className=\"user icon\"></i>\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                        <FilledInput\r\n                            type={'text'}\r\n                            placeholder=\"Mail Adress\"\r\n                            className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n                            variant=\"filled\"\r\n                            required\r\n                            onChange={(e) => { email = e.target.value }}\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <i className=\"envelope icon\"></i>\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                        <FilledInput\r\n                            type={'text'}\r\n                            placeholder=\"Adress\"\r\n                            required\r\n                            className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n                            variant=\"filled\"\r\n                            onChange={(e) => { adress = e.target.value }}\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <i className=\"map marker alternate icon\"></i>\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                        <FilledInput\r\n                            type={'text'}\r\n                            placeholder=\"Year Of Birth\"\r\n                            required\r\n                            className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n                            variant=\"filled\"\r\n                            onChange={(e) => { birthYear = e.target.value }}\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <i className=\"calendar alternate outline icon\"></i>\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                        <FilledInput\r\n                            type={'text'}\r\n                            placeholder=\"Phone Number\"\r\n                            required\r\n                            className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n                            variant=\"filled\"\r\n                            onChange={(e) => { phone = e.target.value }}\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <i className=\"mobile alternate icon\"></i>\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                        <FilledInput\r\n                            type={values.showPassword ? 'text' : 'password'}\r\n                            onChange={handleChange('password')}\r\n                            placeholder=\"Password\"\r\n                            required\r\n                            className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n                            variant=\"filled\"\r\n                            onChange={(e) => { password = e.target.value }}\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <i className=\"lock icon\"></i>\r\n                                </InputAdornment>\r\n                            }\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                        className={classes.eye}\r\n                                    >\r\n                                        {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                        <Button type=\"button\" variant=\"contained\" className={\"login_btn\"} onClick={createUser}>Login</Button>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        </center>\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.user.currentUser\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { addUser })(SignUp);"]},"metadata":{},"sourceType":"module"}