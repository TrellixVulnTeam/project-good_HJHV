{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\auction\\\\AuctionList.js\",\n    _s = $RefreshSig$();\n\nimport { connect } from \"react-redux\";\nimport Auction from './Auction';\nimport CurrentAuction from './CurrentAuction';\nimport { setCurrentAuction } from '../../store/actions/currentAuction';\nimport { Link, BrowserRouter as Router, Route, useRouteMatch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AuctionList = props => {\n  _s();\n\n  const {\n    url,\n    path\n  } = useRouteMatch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [props.arr.map(item => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        onClick: () => props.setCurrentAuction(item.code),\n        to: `/auction:${item.code}`,\n        component: CurrentAuction,\n        children: /*#__PURE__*/_jsxDEV(Auction, {\n          item: item\n        }, parseInt(item.code), false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, parseInt(item.code), false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: `${path}/:id`,\n        children: /*#__PURE__*/_jsxDEV(CurrentAuction, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${path}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u05DC\\u05D7\\u05E5 \\u05E2\\u05DC \\u05D4\\u05E7\\u05D5\\u05E8\\u05E1 \\u05D4\\u05DE\\u05D1\\u05D5\\u05E7\\u05E9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AuctionList, \"1MAQBxDT46WWsBhoM12Ck4Kdmsw=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = AuctionList;\n\nconst mapStateToProps = state => {\n  return {\n    arr: state.main.auctionsList\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setCurrentAuction\n})(AuctionList); // const CoursesList = () => {\n//     const { state } = useLocation();\n//     let linkList = cArr.map((item) => {\n//         if (item.lessonsCount >= parseInt(input.current == null ||\n//             input.current.value == \"\" ||\n//             input.current.value == \"0\" ? 0 : input.current.value))\n//             return <li key={item.id}>\n//                 <Link to={`${url}/${item.id}`}>{item.name}</Link>{/*כאן שלחנו איידי לקומפוננטה שמציגה חוג אחד*/}\n//             </li>\n//         else return null;\n//     })\n//     return (\n//         <div>\n//             <p>hello to {name}</p>            <h1>Courses</h1>            <ul>{linkList}</ul>\n//             <input type=\"number\" placeholder=\"lessons count\" /*onKeyUp={byLessonsCount}*/ ref={input} onKeyUp={() => setSetInput()} /><br />\n//             <Switch>\n//                 <Route path={`${path}/:id`}><CourseDetails arr={cArr} /></Route>\n//                 <Route exact path={`${path}`}><p>לחץ על הקורס המבוקש</p></Route>\n//             </Switch>\n//         </div>\n//     );\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"AuctionList\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/auction/AuctionList.js"],"names":["connect","Auction","CurrentAuction","setCurrentAuction","Link","BrowserRouter","Router","Route","useRouteMatch","AuctionList","props","url","path","arr","map","item","code","parseInt","mapStateToProps","state","main","auctionsList"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,iBAAT,QAAkC,oCAAlC;AACA,SAASC,IAAT,EAAeC,aAAa,IAAIC,MAAhC,EAAwCC,KAAxC,EAA+CC,aAA/C,QAAoE,kBAApE;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAgBJ,aAAa,EAAnC;AAEA,sBAAQ;AAAA,eACHE,KAAK,CAACG,GAAN,CAAUC,GAAV,CAAeC,IAAD,IAAU;AACrB,0BACI,QAAC,IAAD;AACI,QAAA,OAAO,EAAE,MAAML,KAAK,CAACP,iBAAN,CAAwBY,IAAI,CAACC,IAA7B,CADnB;AAEI,QAAA,EAAE,EAAG,YAAWD,IAAI,CAACC,IAAK,EAF9B;AAGI,QAAA,SAAS,EAAEd,cAHf;AAAA,+BAII,QAAC,OAAD;AAAmC,UAAA,IAAI,EAAEa;AAAzC,WAAcE,QAAQ,CAACF,IAAI,CAACC,IAAN,CAAtB;AAAA;AAAA;AAAA;AAAA;AAJJ,SAAWC,QAAQ,CAACF,IAAI,CAACC,IAAN,CAAnB;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KATA,CADG,eAWJ,QAAC,MAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEJ,IAAK,MAArB;AAAA,+BAA4B,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEA,IAAK,EAA3B;AAAA,+BAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXI;AAAA,kBAAR;AAiBH,CApBD;;GAAMH,W;UACoBD,a;;;KADpBC,W;;AAqBN,MAAMS,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHN,IAAAA,GAAG,EAAEM,KAAK,CAACC,IAAN,CAAWC;AADb,GAAP;AAGH,CAJD;;AAMA,eAAerB,OAAO,CAACkB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAAgDM,WAAhD,CAAf,C,CAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { connect } from \"react-redux\";\r\nimport Auction from './Auction'\r\nimport CurrentAuction from './CurrentAuction'\r\nimport { setCurrentAuction } from '../../store/actions/currentAuction'\r\nimport { Link, BrowserRouter as Router, Route, useRouteMatch } from 'react-router-dom';\r\n\r\nconst AuctionList = (props) => {\r\n    const { url, path } = useRouteMatch();\r\n\r\n    return (<>\r\n        {props.arr.map((item) => {\r\n            return (\r\n                <Link key={parseInt(item.code)}\r\n                    onClick={() => props.setCurrentAuction(item.code)}\r\n                    to={`/auction:${item.code}`}\r\n                    component={CurrentAuction}>\r\n                    <Auction key={parseInt(item.code)} item={item} />\r\n                </Link>\r\n            )\r\n        })}\r\n        <Switch>\r\n            <Route path={`${path}/:id`}><CurrentAuction /></Route>\r\n            <Route exact path={`${path}`}><p>לחץ על הקורס המבוקש</p></Route>\r\n        </Switch>\r\n    </>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        arr: state.main.auctionsList,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setCurrentAuction })(AuctionList);\r\n\r\n\r\n// const CoursesList = () => {\r\n\r\n//     const { state } = useLocation();\r\n//     let linkList = cArr.map((item) => {\r\n//         if (item.lessonsCount >= parseInt(input.current == null ||\r\n//             input.current.value == \"\" ||\r\n//             input.current.value == \"0\" ? 0 : input.current.value))\r\n//             return <li key={item.id}>\r\n//                 <Link to={`${url}/${item.id}`}>{item.name}</Link>{/*כאן שלחנו איידי לקומפוננטה שמציגה חוג אחד*/}\r\n//             </li>\r\n//         else return null;\r\n//     })\r\n//     return (\r\n//         <div>\r\n//             <p>hello to {name}</p>            <h1>Courses</h1>            <ul>{linkList}</ul>\r\n//             <input type=\"number\" placeholder=\"lessons count\" /*onKeyUp={byLessonsCount}*/ ref={input} onKeyUp={() => setSetInput()} /><br />\r\n//             <Switch>\r\n//                 <Route path={`${path}/:id`}><CourseDetails arr={cArr} /></Route>\r\n//                 <Route exact path={`${path}`}><p>לחץ על הקורס המבוקש</p></Route>\r\n//             </Switch>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n"]},"metadata":{},"sourceType":"module"}