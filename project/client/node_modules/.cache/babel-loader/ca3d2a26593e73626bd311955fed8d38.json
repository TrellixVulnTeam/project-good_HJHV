{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\user\\\\site manager\\\\SiteManagerTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport './siteManager.scss';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Link } from 'react-router-dom';\nimport { setSelectedAuctionToOptions } from '../../../store/actions/auctionManager';\nimport IconButton from '@material-ui/core/IconButton';\nimport st from '../../../img/icons/statistics.png';\nimport results from '../../../img/icons/results.png';\nimport con from '../../../img/icons/continue.png';\nimport { setUserByStorage } from '../../../store/actions/user';\nimport { getAllAuctionsFromDB } from '../../../store/actions/siteManager';\nimport { getAuctionFromDB } from '../../../store/actions/currentAuction';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Popover from '@mui/material/Popover';\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    width: '80%',\n    marginBottom: '15vh'\n  },\n  container: {\n    maxHeight: 440\n  },\n  switchBase: {\n    color: \"#262b96\",\n    \"&$checked\": {\n      color: \"#262b96\"\n    },\n    \"&$checked + $track\": {\n      backgroundColor: \"#262b96\"\n    }\n  },\n  checked: {},\n  track: {}\n});\n\nconst SiteManagerTable = props => {\n  _s();\n\n  useEffect(() => {\n    let id = localStorage.getItem(\"user\");\n    if (id && props.currentUser == null) props.setUserByStorage(id);\n  }, []);\n  useEffect(() => {\n    if (props.auctions && props.auctions.length) {\n      let tmp = [];\n      props.auctions.map(a => {\n        tmp.push(createData(a));\n      });\n      setMyAuctions(tmp);\n    }\n  }, [props.auctions]);\n  useEffect(() => {\n    if (props.currentUser) props.getAllAuctionsFromDB(props.currentUser._id); //also set props.auctions \n  }, [props.currentUser]);\n  const [myAuctions, setMyAuctions] = React.useState([]);\n  const columns = [{\n    id: 'auctionName',\n    label: 'Auction Name',\n    align: 'left',\n    minWidth: 101\n  }, {\n    id: 'oName',\n    label: 'Organization Name',\n    align: 'left',\n    minWidth: 101\n  }, {\n    id: 'man',\n    label: 'Auction Manager',\n    align: 'left',\n    minWidth: 18\n  }, {\n    id: 'status',\n    label: \"Status\",\n    align: 'left',\n    minWidth: 26\n  }, {\n    id: 'published',\n    label: \"Published\",\n    align: 'left',\n    minWidth: 18\n  }, {\n    id: 'lotteriesDate',\n    label: 'Lotteries date',\n    minWidth: 101,\n    align: 'left'\n  }, {\n    id: 'approval',\n    label: 'Lottery Approval',\n    minWidth: 70,\n    align: 'left',\n    format: value => value.toFixed(2)\n  }, {\n    id: 'total',\n    label: 'Total revenue',\n    minWidth: 70,\n    align: 'left',\n    format: value => value.toFixed(2)\n  }, {\n    id: 'op',\n    label: 'Options',\n    minWidth: 120,\n    align: 'left',\n    format: value => value.toFixed(2)\n  }];\n\n  function createData(a) {\n    let auctionName = a.name;\n    let oName = a.organizationName;\n    let status = a.status.replace(/_/g, \" \");\n    let published = a.publicationApproval.toString();\n    let lotteriesDate = a.lotteriesDate ? moment(new Date(a.lotteriesDate)).format('D/MM/YYYY') : \"\";\n    let approval = a.lotteryApproval.toString();\n    let total = 0;\n    let isDone = a.status == \"DONE\";\n\n    let op = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"optionsBtnsDiv\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: isDone ? \"/your_profile/results\" : \"#\",\n        onClick: () => props.setSelectedAuctionToOptions(a),\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          title: \"Results\",\n          disabled: !isDone,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"site-m-icon\",\n            src: results\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 176\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 116\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        onClick: () => props.setSelectedAuctionToOptions(a),\n        to: \"/your_profile/statistics\",\n        children: [\"  \", /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          title: \"Statistics\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"site-m-icon\",\n            src: st\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 150\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 106\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: a.publicationApproval && !isDone ? \"/auction\" : \"#\",\n        onClick: () => props.getAuctionFromDB(a._id),\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          disabled: a.publicationApproval == false || isDone,\n          title: \"Continue\",\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"site-m-icon\",\n            src: con\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 216\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 122\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 18\n    }, this);\n\n    let man = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(PopupState, {\n        variant: \"popover\",\n        popupId: \"demo-popup-popover\",\n        children: popupState => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            variant: \"contained\",\n            ...bindTrigger(popupState),\n            size: \"small\",\n            title: \"Statistics\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"site-m-icon\",\n              src: st\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 118\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Popover, { ...bindPopover(popupState),\n            anchorOrigin: {\n              vertical: 'bottom',\n              horizontal: 'center'\n            },\n            transformOrigin: {\n              vertical: 'top',\n              horizontal: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                p: 2\n              },\n              children: [\"name: \", a.auctionManager.userName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this), \"email: \", a.auctionManager.email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this), \"phone: \", a.auctionManager.phone]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n\n    return {\n      auctionName,\n      oName,\n      man,\n      status,\n      published,\n      lotteriesDate,\n      approval,\n      total,\n      op\n    };\n  }\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"#262b96\"\n      },\n      children: \"Site Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            className: \"auctionManagerTableCls\",\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: column.align,\n                style: {\n                  minWidth: column.minWidth,\n                  color: \"#262b96\",\n                  fontWeight: 'bold'\n                },\n                children: column.label\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: myAuctions && myAuctions.length > 0 && myAuctions.map(row => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                tabIndex: -1,\n                children: columns.map(column => {\n                  const value = row[column.id];\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: column.align,\n                    children: column.format && typeof value === 'number' ? column.format(value) : value\n                  }, column.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, row.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SiteManagerTable, \"8KiC1cy1NK+k3X2RCob4Gkfn9yE=\", false, function () {\n  return [useStyles];\n});\n\n_c = SiteManagerTable;\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.user.currentUser,\n    auctions: state.siteManager.auctions\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAllAuctionsFromDB,\n  setUserByStorage,\n  setSelectedAuctionToOptions,\n  getAuctionFromDB\n})(SiteManagerTable);\n\nvar _c;\n\n$RefreshReg$(_c, \"SiteManagerTable\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/user/site manager/SiteManagerTable.js"],"names":["React","useEffect","connect","moment","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Link","setSelectedAuctionToOptions","IconButton","st","results","con","setUserByStorage","getAllAuctionsFromDB","getAuctionFromDB","Typography","Button","Popover","PopupState","bindTrigger","bindPopover","useStyles","root","width","marginBottom","container","maxHeight","switchBase","color","backgroundColor","checked","track","SiteManagerTable","props","id","localStorage","getItem","currentUser","auctions","length","tmp","map","a","push","createData","setMyAuctions","_id","myAuctions","useState","columns","label","align","minWidth","format","value","toFixed","auctionName","name","oName","organizationName","status","replace","published","publicationApproval","toString","lotteriesDate","Date","approval","lotteryApproval","total","isDone","op","man","popupState","vertical","horizontal","p","auctionManager","userName","email","phone","classes","column","fontWeight","row","code","mapStateToProps","state","user","siteManager"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment'\r\nimport './siteManager.scss'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Link } from 'react-router-dom';\r\nimport { setSelectedAuctionToOptions } from '../../../store/actions/auctionManager'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport st from '../../../img/icons/statistics.png'\r\nimport results from '../../../img/icons/results.png'\r\nimport con from '../../../img/icons/continue.png'\r\nimport { setUserByStorage } from '../../../store/actions/user';\r\nimport { getAllAuctionsFromDB } from '../../../store/actions/siteManager'\r\nimport { getAuctionFromDB } from '../../../store/actions/currentAuction';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Popover from '@mui/material/Popover';\r\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state';\r\nconst useStyles = makeStyles({\r\n    root: { width: '80%', marginBottom: '15vh' },\r\n    container: { maxHeight: 440, },\r\n    switchBase: {\r\n        color: \"#262b96\",\r\n        \"&$checked\": {\r\n            color: \"#262b96\"\r\n        },\r\n        \"&$checked + $track\": {\r\n            backgroundColor: \"#262b96\"\r\n        },\r\n\r\n    },\r\n    checked: {},\r\n    track: {}\r\n});\r\n\r\nconst SiteManagerTable = (props) => {\r\n\r\n    useEffect(() => {\r\n        let id = localStorage.getItem(\"user\");\r\n        if (id && props.currentUser == null) props.setUserByStorage(id)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (props.auctions && props.auctions.length) {\r\n            let tmp = [];\r\n            props.auctions.map(a => { tmp.push(createData(a)) })\r\n            setMyAuctions(tmp);\r\n        }\r\n    }, [props.auctions])\r\n\r\n    useEffect(() => {\r\n        if (props.currentUser) props.getAllAuctionsFromDB(props.currentUser._id);//also set props.auctions \r\n    }, [props.currentUser])\r\n\r\n    const [myAuctions, setMyAuctions] = React.useState([]);\r\n\r\n    const columns = [\r\n        { id: 'auctionName', label: 'Auction Name', align: 'left', minWidth: 101 },\r\n        { id: 'oName', label: 'Organization Name', align: 'left', minWidth: 101 },\r\n        { id: 'man', label: 'Auction Manager', align: 'left', minWidth: 18 },\r\n        { id: 'status', label: \"Status\", align: 'left', minWidth: 26 },\r\n        { id: 'published', label: \"Published\", align: 'left', minWidth: 18 },\r\n        { id: 'lotteriesDate', label: 'Lotteries date', minWidth: 101, align: 'left', },\r\n        { id: 'approval', label: 'Lottery Approval', minWidth: 70, align: 'left', format: (value) => value.toFixed(2) },\r\n        { id: 'total', label: 'Total revenue', minWidth: 70, align: 'left', format: (value) => value.toFixed(2) },\r\n        { id: 'op', label: 'Options', minWidth: 120, align: 'left', format: (value) => value.toFixed(2) }\r\n    ];\r\n\r\n    function createData(a) {\r\n        let auctionName = a.name;\r\n        let oName = a.organizationName;\r\n        let status = a.status.replace(/_/g, \" \");\r\n        let published = a.publicationApproval.toString();\r\n        let lotteriesDate = a.lotteriesDate ? moment(new Date(a.lotteriesDate)).format('D/MM/YYYY') : \"\";\r\n        let approval = a.lotteryApproval.toString();\r\n        let total = 0;\r\n        let isDone = a.status == \"DONE\";\r\n\r\n        let op = <div className=\"optionsBtnsDiv\">\r\n            <Link to={isDone ? \"/your_profile/results\" : \"#\"} onClick={() => props.setSelectedAuctionToOptions(a)}><IconButton size=\"small\" title=\"Results\" disabled={!isDone}><img className=\"site-m-icon\" src={results} ></img></IconButton></Link>\r\n            <Link onClick={() => props.setSelectedAuctionToOptions(a)} to={\"/your_profile/statistics\"}>  <IconButton size=\"small\" title=\"Statistics\"><img className=\"site-m-icon\" src={st} ></img></IconButton></Link>\r\n            <Link to={a.publicationApproval && !isDone ? \"/auction\" : \"#\"} onClick={() => props.getAuctionFromDB(a._id)}><IconButton disabled={a.publicationApproval == false || isDone} title=\"Continue\" size=\"small\"><img className=\"site-m-icon\" src={con} ></img></IconButton></Link>\r\n        </div >\r\n\r\n\r\n        let man = (<>\r\n            <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n                {(popupState) => (\r\n                    <div>\r\n                        <IconButton variant=\"contained\" {...bindTrigger(popupState)} size=\"small\" title=\"Statistics\"><img className=\"site-m-icon\" src={st} ></img></IconButton>\r\n                        <Popover\r\n                            {...bindPopover(popupState)}\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'center',\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'center',\r\n                            }}\r\n                        >\r\n                            <Typography sx={{ p: 2 }}>\r\n                                name: {a.auctionManager.userName}\r\n                                <br />\r\n                                email: {a.auctionManager.email}\r\n                                <br />\r\n                                phone: {a.auctionManager.phone}\r\n                            </Typography>\r\n                        </Popover>\r\n                    </div>\r\n                )}\r\n            </PopupState>\r\n        </>)\r\n\r\n        return { auctionName, oName, man, status, published, lotteriesDate, approval, total, op };\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <center>\r\n            <h1 style={{ color: \"#262b96\" }}>Site Manager</h1>\r\n\r\n            <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead className='auctionManagerTableCls'>\r\n                            <TableRow>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{ minWidth: column.minWidth, color: \"#262b96\", fontWeight: 'bold' }}\r\n                                    >\r\n                                        {column.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {myAuctions && myAuctions.length > 0 && myAuctions.map((row) => {\r\n                                return (\r\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                        {columns.map((column) => {\r\n                                            const value = row[column.id];\r\n                                            return (\r\n                                                <TableCell key={column.id} align={column.align}>\r\n                                                    {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                                </TableCell>\r\n                                            );\r\n                                        })}\r\n\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n            </Paper>\r\n\r\n        </center>);\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.user.currentUser,\r\n        auctions: state.siteManager.auctions\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { getAllAuctionsFromDB, setUserByStorage, setSelectedAuctionToOptions, getAuctionFromDB })(SiteManagerTable);\r\n\r\n"]},"metadata":{},"sourceType":"module"}