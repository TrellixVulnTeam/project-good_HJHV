{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\new auction\\\\AuctionInformation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport './NewAuction.scss';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { saveAuctionInformationInDB } from '../../utils/newAuctionUtils';\nimport { useForm } from \"react-hook-form\";\nimport { TextField } from \"@mui/material\";\nimport Alert from '@mui/material/Alert';\nimport { setNewAuction } from '../../store/actions/newAuction';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '40%' // outerHeight:'70%'\n\n    }\n  }\n}));\n\nconst AuctionInformation = props => {\n  _s();\n\n  let submit = (data, e) => {\n    e.preventDefault(); // details.registrationStartDate = selectedDate2;\n    // details.registrationEndDate = selectedDate3;\n    // details.lotteriesDate = selectedDate1;\n    // details.name = name;\n\n    details.registrationStartDate = new Date();\n    details.registrationEndDate = new Date(31, 1, 2021);\n    details.lotteriesDate = new Date(1, 12, 2021);\n    details.name = data.name;\n    details.lotteryApproval = lotteryApproval;\n    details.publicationApproval = publicationApproval;\n    saveAuctionInformationInDB(details).then(succ => {\n      if (succ.status != 400) props.setNewAuction(succ.data);\n    });\n  };\n\n  const classes = useStyles();\n  const [publicationApproval, setPublicationApproval] = useState(false);\n  const [lotteryApproval, setLotteryApproval] = useState(false);\n  const [selectedDate1, setSelectedDate1] = React.useState(null); //lotery\n\n  const [selectedDate2, setSelectedDate2] = React.useState(null); //start\n\n  const [selectedDate3, setSelectedDate3] = React.useState(null); //end\n\n  const [name, setName] = React.useState(null); //end\n\n  const handleDateChange1 = date => {\n    setSelectedDate1(date);\n  }; //lotery\n\n\n  const handleDateChange2 = date => {\n    setSelectedDate2(date);\n  }; //start\n\n\n  const handleDateChange3 = date => {\n    setSelectedDate3(date);\n  }; //end\n\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  let details = {\n    registrationStartDate: null,\n    registrationEndDate: null,\n    lotteriesDate: null,\n    terms: \"\",\n    //קובץ תקנון\n    name: \"unknown\",\n    auctionId: props.auctionId\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit(submit),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Auction information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs-in-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: \"txt\",\n        variant: \"standard\",\n        defaultValue: props.auction.name,\n        ...register('name', {\n          required: true\n        }),\n        id: \"input-with-icon-grid\",\n        label: \"Name Auction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), errors.name && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: \"This is an error enter Name (required)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        className: \"auctionInformationDate\",\n        children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n          disableToolbar: true,\n          variant: \"inline\",\n          format: \"dd/MM/yyyy\",\n          margin: \"normal\",\n          id: \"date-picker-inline\",\n          label: \"Date of the lottery\",\n          value: selectedDate1,\n          onChange: handleDateChange1,\n          defaultValue: props.auction.lotteriesDate,\n          KeyboardButtonProps: {\n            'aria-label': 'change date'\n          },\n          ...register('lotteriesDate', {\n            required: true\n          }),\n          id: \"input-with-icon-grid\",\n          label: \"Date of the lottery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n          disableToolbar: true,\n          variant: \"inline\",\n          format: \"dd/MM/yyyy\",\n          margin: \"normal\",\n          id: \"date-picker-inline\",\n          label: \"Registration start date\",\n          value: selectedDate2,\n          onChange: handleDateChange2,\n          defaultValue: props.auction.registrationStartDate,\n          KeyboardButtonProps: {\n            'aria-label': 'change date'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n          disableToolbar: true,\n          variant: \"inline\",\n          format: \"dd/MM/yyyy\",\n          margin: \"normal\",\n          id: \"date-picker-inline\",\n          label: \"Registration end date\",\n          value: selectedDate3,\n          onChange: handleDateChange3,\n          KeyboardButtonProps: {\n            'aria-label': 'change date'\n          },\n          defaultValue: props.auction.registrationEndDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"default\",\n        className: classes.button,\n        startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 28\n        }, this) // onChange={(e) => terms=e.target.value}\n        ,\n        children: \"Upload Terms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          onChange: e => setPublicationApproval(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 18\n        }, this),\n        label: \"Publication approval\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          onChange: e => setLotteryApproval(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 18\n        }, this),\n        label: \"Lottery approval\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"positive ui button\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 13\n  }, this); //submit!!!!\n  //לבדוק שהתאריכים תקינים\n  //סיום ההרשמה ולפני ביצוע ההגרלות\n};\n\n_s(AuctionInformation, \"XXi6QjkNp0LyAYnR1eYxi/FuZvM=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = AuctionInformation;\n\nconst mapStateToProps = state => {\n  return {\n    auctionId: state.auction.newAuction._id,\n    auction: state.auction.newAuction\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setNewAuction\n})(AuctionInformation);\n\nvar _c;\n\n$RefreshReg$(_c, \"AuctionInformation\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/new auction/AuctionInformation.js"],"names":["React","useEffect","useState","connect","makeStyles","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","Button","CloudUploadIcon","saveAuctionInformationInDB","useForm","TextField","Alert","setNewAuction","Checkbox","FormControlLabel","useStyles","theme","root","margin","spacing","width","AuctionInformation","props","submit","data","e","preventDefault","details","registrationStartDate","Date","registrationEndDate","lotteriesDate","name","lotteryApproval","publicationApproval","then","succ","status","classes","setPublicationApproval","setLotteryApproval","selectedDate1","setSelectedDate1","selectedDate2","setSelectedDate2","selectedDate3","setSelectedDate3","setName","handleDateChange1","date","handleDateChange2","handleDateChange3","register","handleSubmit","formState","errors","terms","auctionId","auction","required","button","target","checked","mapStateToProps","state","newAuction","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './NewAuction.scss'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { saveAuctionInformationInDB } from '../../utils/newAuctionUtils';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { TextField } from \"@mui/material\";\r\nimport Alert from '@mui/material/Alert';\r\nimport { setNewAuction } from '../../store/actions/newAuction';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '40%',\r\n            // outerHeight:'70%'\r\n        },\r\n    },\r\n}));\r\n\r\nconst AuctionInformation = (props) => {\r\n    let submit = (data, e) => {\r\n        e.preventDefault();\r\n        // details.registrationStartDate = selectedDate2;\r\n        // details.registrationEndDate = selectedDate3;\r\n        // details.lotteriesDate = selectedDate1;\r\n        // details.name = name;\r\n\r\n        details.registrationStartDate = new Date();\r\n        details.registrationEndDate = new Date(31, 1, 2021);\r\n        details.lotteriesDate = new Date(1, 12, 2021);\r\n        details.name = data.name;\r\n        details.lotteryApproval = lotteryApproval;\r\n        details.publicationApproval = publicationApproval;\r\n\r\n        saveAuctionInformationInDB(details).then(succ => {\r\n            if (succ.status != 400)\r\n                props.setNewAuction(succ.data);\r\n        })\r\n    }\r\n\r\n\r\n    const classes = useStyles();\r\n    const [publicationApproval, setPublicationApproval] = useState(false);\r\n    const [lotteryApproval, setLotteryApproval] = useState(false);\r\n    const [selectedDate1, setSelectedDate1] = React.useState(null);//lotery\r\n    const [selectedDate2, setSelectedDate2] = React.useState(null);//start\r\n    const [selectedDate3, setSelectedDate3] = React.useState(null);//end\r\n    const [name, setName] = React.useState(null);//end\r\n\r\n    const handleDateChange1 = (date) => { setSelectedDate1(date) };//lotery\r\n    const handleDateChange2 = (date) => { setSelectedDate2(date) };//start\r\n    const handleDateChange3 = (date) => { setSelectedDate3(date) };//end\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n\r\n    let details = {\r\n        registrationStartDate: null,\r\n        registrationEndDate: null,\r\n        lotteriesDate: null,\r\n        terms: \"\",//קובץ תקנון\r\n        name: \"unknown\",\r\n        auctionId: props.auctionId\r\n    }\r\n\r\n\r\n    return (<form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit(submit)}>\r\n        <h1>Auction information</h1>\r\n        <div className={\"inputs-in-form-container\"}>\r\n\r\n            <TextField className=\"txt\" variant=\"standard\" defaultValue={props.auction.name} {...register('name', { required: true })} id=\"input-with-icon-grid\" label=\"Name Auction\" />\r\n            {errors.name && <Alert severity=\"error\">This is an error enter Name (required)</Alert>}\r\n\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils} className=\"auctionInformationDate\">\r\n                <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    label=\"Date of the lottery\"\r\n                    value={selectedDate1}\r\n                    onChange={handleDateChange1}\r\n                    defaultValue={props.auction.lotteriesDate}\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                    {...register('lotteriesDate', { required: true })} id=\"input-with-icon-grid\" label=\"Date of the lottery\"\r\n                />\r\n\r\n            </MuiPickersUtilsProvider>\r\n\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    label=\"Registration start date\"\r\n                    value={selectedDate2}\r\n                    onChange={handleDateChange2}\r\n                    defaultValue={props.auction.registrationStartDate}\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    label=\"Registration end date\"\r\n                    value={selectedDate3}\r\n                    onChange={handleDateChange3}\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                    defaultValue={props.auction.registrationEndDate}\r\n\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"default\"\r\n                className={classes.button}\r\n                startIcon={<CloudUploadIcon />}\r\n            // onChange={(e) => terms=e.target.value}\r\n            >\r\n                Upload Terms\r\n            </Button>\r\n\r\n            <FormControlLabel\r\n                control=\r\n                {<Checkbox onChange={(e) => setPublicationApproval(e.target.checked)} />}\r\n                label=\"Publication approval\" />\r\n\r\n            <FormControlLabel\r\n                control=\r\n                {<Checkbox onChange={(e) => setLotteryApproval(e.target.checked)} />}\r\n                label=\"Lottery approval\" />\r\n            <button type=\"submit\" className=\"positive ui button\">Save</button>\r\n        </div>\r\n    </form >);\r\n    //submit!!!!\r\n    //לבדוק שהתאריכים תקינים\r\n    //סיום ההרשמה ולפני ביצוע ההגרלות\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auctionId: state.auction.newAuction._id,\r\n        auction: state.auction.newAuction\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { setNewAuction })(AuctionInformation);\r\n\r\n"]},"metadata":{},"sourceType":"module"}