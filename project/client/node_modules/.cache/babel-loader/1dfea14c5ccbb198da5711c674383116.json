{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\new auction\\\\AuctionInformation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport './NewAuction.scss';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { saveAuctionInformationInDB } from '../../utils/newAuctionUtils';\nimport { useForm } from \"react-hook-form\";\nimport { TextField } from \"@mui/material\";\nimport Alert from '@mui/material/Alert';\nimport { setNewAuction } from '../../store/actions/newAuction';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { setUserByStorage, setCurrentAuctionByStorage, setNewAuctionByStorage } from '../../store/actions/user';\nimport axios from 'axios'; //TODO שהתאריכים יהיו הגיוניים\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    },\n    width: '30vw',\n    marginRight: 'auto',\n    marginLeft: 'auto'\n  }\n}));\n\nconst AuctionInformation = props => {\n  _s();\n\n  useEffect(() => {\n    let id = localStorage.getItem(\"user\");\n\n    if (id && props.currentUser == null) {\n      let a_id = localStorage.getItem(\"currentAuction\");\n      let n_a_id = localStorage.getItem(\"newAuction\");\n      if (a_id) props.setCurrentAuctionByStorage(a_id);\n      if (n_a_id) props.setNewAuctionByStorage(n_a_id);\n      props.setUserByStorage(id);\n    }\n  }, []);\n  useEffect(() => {\n    return () => {\n      saveDetails();\n    };\n  }, []);\n\n  let saveDetails = () => {\n    let details = {\n      registrationStartDate: localStorage.getItem(\"registrationStartDate\"),\n      //selectedDate2,\n      lotteriesDate: localStorage.getItem(\"lotteriesDate\"),\n      //selectedDate1,\n      registrationEndDate: localStorage.getItem(\"registrationEndDate\"),\n      //selectedDate3,\n      lotteryApproval: localStorage.getItem(\"lotteryApproval\"),\n      //lotteryApproval,\n      name: localStorage.getItem(\"name\"),\n      //name,\n      terms: localStorage.getItem(\"filePath\") //filePath\n\n    };\n    alert(props.auctionId);\n    saveAuctionInformationInDB(props.auctionId, details).then(succ => {\n      if (succ.status != 400) props.setNewAuction(succ.data);\n    });\n  };\n\n  const classes = useStyles();\n  const [selectedDate1, setSelectedDate1] = useState(new Date(props.auction.lotteriesDate).setDate(new Date(props.auction.lotteriesDate).getDate() - 1) || null); //lotery\n\n  const [selectedDate2, setSelectedDate2] = useState(new Date(props.auction.registrationStartDate).setDate(new Date(props.auction.registrationStartDate).getDate() - 1) || null); //start\n\n  const [selectedDate3, setSelectedDate3] = useState(new Date(props.auction.registrationEndDate).setDate(new Date(props.auction.registrationEndDate).getDate() - 1) || null); //end\n\n  const [lotteryApproval, setLotteryApproval] = React.useState(props.auction.lotteryApproval || false);\n  const [name, setName] = React.useState(props.auction.name || \"\");\n  const [filePath, setFilePath] = useState(props.auction.terms || \"\");\n\n  const onChangeHandler = event => {\n    const data = new FormData();\n    data.append('file', event.target.files[0]);\n    axios.post(\"http://localhost:5000/upload\", data, {// receive two parameter endpoint url ,form data \n    }).then(res => {\n      // then print response status\n      console.log(res);\n      setFilePath(\"http://localhost:5000/files/\" + res.data.filename);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container \",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: \"txt\",\n          type: \"text\",\n          variant: \"standard\",\n          defaultValue: name,\n          id: \"input-with-icon-grid\",\n          label: \"Auction name\",\n          onChange: e => {\n            setName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            disableToolbar: true,\n            variant: \"inline\",\n            format: \"dd/MM/yyyy\",\n            margin: \"normal\",\n            id: \"date-picker-inline\",\n            label: \"Registration start date\",\n            value: selectedDate2,\n            onChange: date => {\n              setSelectedDate2(date);\n              localStorage.setItem(\"registrationStartDate\", date);\n            },\n            KeyboardButtonProps: {\n              'aria-label': 'change date'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            disableToolbar: true,\n            variant: \"inline\",\n            format: \"dd/MM/yyyy\",\n            margin: \"normal\",\n            id: \"date-picker-inline\",\n            label: \"Registration end date\",\n            value: selectedDate3,\n            onChange: date => {\n              setSelectedDate3(date);\n              localStorage.setItem(\"registrationEndDate\", date);\n            },\n            KeyboardButtonProps: {\n              'aria-label': 'change date'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            disableToolbar: true,\n            variant: \"inline\",\n            format: \"dd/MM/yyyy\",\n            margin: \"normal\",\n            id: \"date-picker-inline\",\n            label: \"Date of the lottery\",\n            value: selectedDate1,\n            onChange: date => {\n              setSelectedDate1(date);\n              localStorage.setItem(\"lotteriesDate\", date);\n            },\n            KeyboardButtonProps: {\n              'aria-label': 'change date'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: lotteryApproval,\n            onChange: e => {\n              setLotteryApproval(e.target.checked);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 48\n          }, this),\n          label: \"Lottery approval\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            display: \"none\"\n          },\n          id: \"contained-button-file\",\n          type: \"file\",\n          onChange: onChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"contained-button-file\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 44\n            }, this),\n            style: {\n              backgroundColor: \"#e0e0e0\",\n              color: \"#262b96\"\n            },\n            variant: \"contained\",\n            color: \"primary\",\n            component: \"span\",\n            children: \"Upload Terms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), filePath.replace('http://localhost:5000/files/', \"\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false); //submit!!!!\n  //לבדוק שהתאריכים תקינים\n  //סיום ההרשמה ולפני ביצוע ההגרלות\n};\n\n_s(AuctionInformation, \"14BEpAf9ldkVgt7Kf5Ur5JqUsng=\", false, function () {\n  return [useStyles];\n});\n\n_c = AuctionInformation;\n\nconst mapStateToProps = state => {\n  return {\n    auctionId: state.auction.newAuction._id,\n    currentUser: state.user.currentUser,\n    auction: state.auction.newAuction\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setNewAuction,\n  setNewAuctionByStorage,\n  setCurrentAuctionByStorage,\n  setUserByStorage\n})(AuctionInformation);\n\nvar _c;\n\n$RefreshReg$(_c, \"AuctionInformation\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/new auction/AuctionInformation.js"],"names":["React","useEffect","useState","connect","makeStyles","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","Button","CloudUploadIcon","saveAuctionInformationInDB","useForm","TextField","Alert","setNewAuction","Checkbox","FormControlLabel","setUserByStorage","setCurrentAuctionByStorage","setNewAuctionByStorage","axios","useStyles","theme","root","margin","spacing","width","marginRight","marginLeft","AuctionInformation","props","id","localStorage","getItem","currentUser","a_id","n_a_id","saveDetails","details","registrationStartDate","lotteriesDate","registrationEndDate","lotteryApproval","name","terms","alert","auctionId","then","succ","status","data","classes","selectedDate1","setSelectedDate1","Date","auction","setDate","getDate","selectedDate2","setSelectedDate2","selectedDate3","setSelectedDate3","setLotteryApproval","setName","filePath","setFilePath","onChangeHandler","event","FormData","append","target","files","post","res","console","log","filename","e","value","date","setItem","checked","display","backgroundColor","color","replace","mapStateToProps","state","newAuction","_id","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './NewAuction.scss'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { saveAuctionInformationInDB } from '../../utils/newAuctionUtils';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { TextField } from \"@mui/material\";\r\nimport Alert from '@mui/material/Alert';\r\nimport { setNewAuction } from '../../store/actions/newAuction';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport { setUserByStorage, setCurrentAuctionByStorage, setNewAuctionByStorage } from '../../store/actions/user';\r\nimport axios from 'axios';\r\n\r\n\r\n//TODO שהתאריכים יהיו הגיוניים\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        width: '30vw',\r\n        marginRight: 'auto',\r\n        marginLeft: 'auto'\r\n    },\r\n}));\r\n\r\nconst AuctionInformation = (props) => {\r\n\r\n    useEffect(() => {\r\n        let id = localStorage.getItem(\"user\");\r\n\r\n        if (id && props.currentUser == null) {\r\n\r\n            let a_id = localStorage.getItem(\"currentAuction\"); let n_a_id = localStorage.getItem(\"newAuction\");\r\n            if (a_id) props.setCurrentAuctionByStorage(a_id);\r\n            if (n_a_id) props.setNewAuctionByStorage(n_a_id);\r\n            props.setUserByStorage(id);\r\n        }\r\n\r\n    }, [])\r\n    useEffect(() => {\r\n        return () => {\r\n            saveDetails();\r\n        };\r\n    }, [])\r\n    let saveDetails = () => {\r\n\r\n        let details = {\r\n            registrationStartDate: localStorage.getItem(\"registrationStartDate\"),//selectedDate2,\r\n            lotteriesDate: localStorage.getItem(\"lotteriesDate\"),//selectedDate1,\r\n            registrationEndDate: localStorage.getItem(\"registrationEndDate\"),//selectedDate3,\r\n            lotteryApproval: localStorage.getItem(\"lotteryApproval\"),//lotteryApproval,\r\n            name: localStorage.getItem(\"name\"),//name,\r\n            terms: localStorage.getItem(\"filePath\"),//filePath\r\n        }\r\n        alert(props.auctionId)\r\n\r\n        saveAuctionInformationInDB(props.auctionId, details).then(succ => {\r\n            if (succ.status != 400) props.setNewAuction(succ.data);\r\n        })\r\n    }\r\n    const classes = useStyles();\r\n    const [selectedDate1, setSelectedDate1] = useState(new Date(props.auction.lotteriesDate).setDate(new Date(props.auction.lotteriesDate).getDate() - 1) || null);//lotery\r\n    const [selectedDate2, setSelectedDate2] = useState(new Date(props.auction.registrationStartDate).setDate(new Date(props.auction.registrationStartDate).getDate() - 1) || null);//start\r\n    const [selectedDate3, setSelectedDate3] = useState(new Date(props.auction.registrationEndDate).setDate(new Date(props.auction.registrationEndDate).getDate() - 1) || null);//end\r\n    const [lotteryApproval, setLotteryApproval] = React.useState(props.auction.lotteryApproval || false);\r\n    const [name, setName] = React.useState(props.auction.name || \"\");\r\n    const [filePath, setFilePath] = useState(props.auction.terms || \"\");\r\n\r\n    const onChangeHandler = event => {\r\n\r\n        const data = new FormData()\r\n        data.append('file', event.target.files[0]);\r\n        axios.post(\"http://localhost:5000/upload\", data, { // receive two parameter endpoint url ,form data \r\n        }).then(res => { // then print response status\r\n            console.log(res);\r\n            setFilePath(\"http://localhost:5000/files/\" + res.data.filename);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form className={classes.root} noValidate autoComplete=\"off\" >\r\n                <div className={\"form-container \"} >\r\n\r\n                    <TextField className=\"txt\" type=\"text\" variant=\"standard\" defaultValue={name} id=\"input-with-icon-grid\" label=\"Auction name\" onChange={(e) => { setName(e.target.value) }} />\r\n\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"Registration start date\"\r\n                            value={selectedDate2}\r\n                            onChange={(date) => { setSelectedDate2(date);localStorage.setItem(\"registrationStartDate\",date) }}\r\n\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"Registration end date\"\r\n                            value={selectedDate3}\r\n                            onChange={(date) => { setSelectedDate3(date); localStorage.setItem(\"registrationEndDate\",date) }}\r\n\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"Date of the lottery\"\r\n                            value={selectedDate1}\r\n                            onChange={(date) => { setSelectedDate1(date);localStorage.setItem(\"lotteriesDate\",date)  }}\r\n\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n\r\n                    </MuiPickersUtilsProvider>\r\n\r\n                    <FormControlLabel control={<Checkbox checked={lotteryApproval} onChange={(e) => { setLotteryApproval(e.target.checked) }} />} label=\"Lottery approval\" />\r\n\r\n\r\n                    <input style={{ display: \"none\" }} id=\"contained-button-file\" type=\"file\" onChange={onChangeHandler} />\r\n\r\n                    <label htmlFor=\"contained-button-file\">\r\n                        <Button startIcon={<CloudUploadIcon />} style={{ backgroundColor: \"#e0e0e0\", color: \"#262b96\" }} variant=\"contained\" color=\"primary\" component=\"span\">\r\n                            Upload Terms\r\n                        </Button>\r\n                    </label>\r\n                    {filePath.replace('http://localhost:5000/files/', \"\")}\r\n\r\n\r\n\r\n                </div>\r\n\r\n            </form >\r\n        </>\r\n\r\n    );\r\n\r\n\r\n    //submit!!!!\r\n    //לבדוק שהתאריכים תקינים\r\n    //סיום ההרשמה ולפני ביצוע ההגרלות\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auctionId: state.auction.newAuction._id,\r\n        currentUser: state.user.currentUser,\r\n        auction: state.auction.newAuction\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { setNewAuction, setNewAuctionByStorage, setCurrentAuctionByStorage, setUserByStorage })(AuctionInformation);\r\n\r\n"]},"metadata":{},"sourceType":"module"}