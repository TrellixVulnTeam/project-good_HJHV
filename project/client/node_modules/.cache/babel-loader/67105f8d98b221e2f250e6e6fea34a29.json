{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\main\\\\ContactFormmmm.js\",\n    _s = $RefreshSig$();\n\nimport { useForm } from 'react-hook-form';\nimport emailjs from 'emailjs-com';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm(); // Function that displays a success toast on bottom right of the page when form submission is successful\n\n  const toastifySuccess = () => {\n    toast('Form sent!', {\n      position: 'bottom-right',\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: 'submit-feedback success',\n      toastId: 'notifyToast'\n    });\n  }; // Function called on submit that uses emailjs to send email of valid contact form\n\n\n  const onSubmit = async data => {\n    // Destrcture data object\n    const {\n      name,\n      email,\n      subject,\n      message\n    } = data;\n\n    try {\n      const templateParams = {\n        name,\n        email,\n        subject,\n        message\n      };\n      console.log('Name: ', name);\n      console.log('Email: ', email);\n      console.log('Subject: ', subject);\n      console.log('Message: ', message);\n      await emailjs.send(process.env.REACT_APP_SERVICE_ID, process.env.REACT_APP_TEMPLATE_ID, templateParams, process.env.REACT_APP_USER_ID);\n      reset();\n      toastifySuccess();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ContactForm\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contactForm\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              id: \"contact-form\",\n              onSubmit: handleSubmit(onSubmit),\n              noValidate: true,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row formRow\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"name\",\n                    ...register('name', {\n                      required: {\n                        value: true,\n                        message: 'Please enter your name'\n                      },\n                      maxLength: {\n                        value: 30,\n                        message: 'Please use 30 characters or less'\n                      }\n                    }),\n                    className: \"form-control formInput\",\n                    placeholder: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 21\n                  }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"errorMessage\",\n                    children: errors.name.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    name: \"email\",\n                    ...register('email', {\n                      required: true,\n                      pattern: /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n                    }),\n                    className: \"form-control formInput\",\n                    placeholder: \"Email address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 21\n                  }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"errorMessage\",\n                    children: \"Please enter a valid email address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row formRow\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"subject\",\n                    ...register('subject', {\n                      required: {\n                        value: true,\n                        message: 'Please enter a subject'\n                      },\n                      maxLength: {\n                        value: 75,\n                        message: 'Subject cannot exceed 75 characters'\n                      }\n                    }),\n                    className: \"form-control formInput\",\n                    placeholder: \"Subject\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 21\n                  }, this), errors.subject && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"errorMessage\",\n                    children: errors.subject.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row formRow\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                    rows: 3,\n                    name: \"message\",\n                    ...register('message', {\n                      required: true\n                    }),\n                    className: \"form-control formInput\",\n                    placeholder: \"Message\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 21\n                  }, this), errors.message && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"errorMessage\",\n                    children: \"Please enter a message\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 40\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"submit-btn\",\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactForm, \"u3ANcGRSErcvoacPNBrRt8Z4sCM=\", false, function () {\n  return [useForm];\n});\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/main/ContactFormmmm.js"],"names":["useForm","emailjs","ToastContainer","toast","ContactForm","register","handleSubmit","reset","formState","errors","toastifySuccess","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","className","toastId","onSubmit","data","name","email","subject","message","templateParams","console","log","send","process","env","REACT_APP_SERVICE_ID","REACT_APP_TEMPLATE_ID","REACT_APP_USER_ID","e","required","value","maxLength","pattern"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,2CAAP;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAJP,MAKFT,OAAO,EALX,CADwB,CAQxB;;AACA,QAAMU,eAAe,GAAG,MAAM;AAC5BP,IAAAA,KAAK,CAAC,YAAD,EAAe;AAClBQ,MAAAA,QAAQ,EAAE,cADQ;AAElBC,MAAAA,SAAS,EAAE,IAFO;AAGlBC,MAAAA,eAAe,EAAE,IAHC;AAIlBC,MAAAA,YAAY,EAAE,IAJI;AAKlBC,MAAAA,YAAY,EAAE,IALI;AAMlBC,MAAAA,SAAS,EAAE,KANO;AAOlBC,MAAAA,SAAS,EAAE,yBAPO;AAQlBC,MAAAA,OAAO,EAAE;AARS,KAAf,CAAL;AAUD,GAXD,CATwB,CAsBxB;;;AACA,QAAMC,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAC/B;AACA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,OAAf;AAAwBC,MAAAA;AAAxB,QAAoCJ,IAA1C;;AACA,QAAI;AACF,YAAMK,cAAc,GAAG;AACrBJ,QAAAA,IADqB;AAErBC,QAAAA,KAFqB;AAGrBC,QAAAA,OAHqB;AAIrBC,QAAAA;AAJqB,OAAvB;AAMAE,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,IAAtB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBL,KAAvB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,OAAzB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,OAAzB;AAEA,YAAMvB,OAAO,CAAC2B,IAAR,CACJC,OAAO,CAACC,GAAR,CAAYC,oBADR,EAEJF,OAAO,CAACC,GAAR,CAAYE,qBAFR,EAGJP,cAHI,EAIJI,OAAO,CAACC,GAAR,CAAYG,iBAJR,CAAN;AAOA1B,MAAAA,KAAK;AACLG,MAAAA,eAAe;AAChB,KArBD,CAqBE,OAAOwB,CAAP,EAAU;AACVR,MAAAA,OAAO,CAACC,GAAR,CAAYO,CAAZ;AACD;AACF,GA3BD;;AA6BA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACE;AAAM,cAAA,EAAE,EAAC,cAAT;AAAwB,cAAA,QAAQ,EAAE5B,YAAY,CAACa,QAAD,CAA9C;AAA0D,cAAA,UAAU,MAApE;AAAA,sCAEE;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAC,OAAf;AAAA,0CACE;AACE,oBAAA,IAAI,EAAC,MADP;AAEE,oBAAA,IAAI,EAAC,MAFP;AAAA,uBAGMd,QAAQ,CAAC,MAAD,EAAS;AACnB8B,sBAAAA,QAAQ,EAAE;AAAEC,wBAAAA,KAAK,EAAE,IAAT;AAAeZ,wBAAAA,OAAO,EAAE;AAAxB,uBADS;AAEnBa,sBAAAA,SAAS,EAAE;AACTD,wBAAAA,KAAK,EAAE,EADE;AAETZ,wBAAAA,OAAO,EAAE;AAFA;AAFQ,qBAAT,CAHd;AAUE,oBAAA,SAAS,EAAC,wBAVZ;AAWE,oBAAA,WAAW,EAAC;AAXd;AAAA;AAAA;AAAA;AAAA,0BADF,EAcGf,MAAM,CAACY,IAAP,iBAAe;AAAM,oBAAA,SAAS,EAAC,cAAhB;AAAA,8BAAgCZ,MAAM,CAACY,IAAP,CAAYG;AAA5C;AAAA;AAAA;AAAA;AAAA,0BAdlB;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAiBE;AAAK,kBAAA,SAAS,EAAC,OAAf;AAAA,0CACE;AACE,oBAAA,IAAI,EAAC,OADP;AAEE,oBAAA,IAAI,EAAC,OAFP;AAAA,uBAGMnB,QAAQ,CAAC,OAAD,EAAU;AACpB8B,sBAAAA,QAAQ,EAAE,IADU;AAEpBG,sBAAAA,OAAO,EAAE;AAFW,qBAAV,CAHd;AAOE,oBAAA,SAAS,EAAC,wBAPZ;AAQE,oBAAA,WAAW,EAAC;AARd;AAAA;AAAA;AAAA;AAAA,0BADF,EAWG7B,MAAM,CAACa,KAAP,iBACC;AAAM,oBAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAoCE;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,uCACE;AAAK,kBAAA,SAAS,EAAC,KAAf;AAAA,0CACE;AACE,oBAAA,IAAI,EAAC,MADP;AAEE,oBAAA,IAAI,EAAC,SAFP;AAAA,uBAGMjB,QAAQ,CAAC,SAAD,EAAY;AACtB8B,sBAAAA,QAAQ,EAAE;AAAEC,wBAAAA,KAAK,EAAE,IAAT;AAAeZ,wBAAAA,OAAO,EAAE;AAAxB,uBADY;AAEtBa,sBAAAA,SAAS,EAAE;AACTD,wBAAAA,KAAK,EAAE,EADE;AAETZ,wBAAAA,OAAO,EAAE;AAFA;AAFW,qBAAZ,CAHd;AAUE,oBAAA,SAAS,EAAC,wBAVZ;AAWE,oBAAA,WAAW,EAAC;AAXd;AAAA;AAAA;AAAA;AAAA,0BADF,EAcGf,MAAM,CAACc,OAAP,iBACC;AAAM,oBAAA,SAAS,EAAC,cAAhB;AAAA,8BAAgCd,MAAM,CAACc,OAAP,CAAeC;AAA/C;AAAA;AAAA;AAAA;AAAA,0BAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBApCF,eAyDE;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,uCACE;AAAK,kBAAA,SAAS,EAAC,KAAf;AAAA,0CACE;AACE,oBAAA,IAAI,EAAE,CADR;AAEE,oBAAA,IAAI,EAAC,SAFP;AAAA,uBAGMnB,QAAQ,CAAC,SAAD,EAAY;AACtB8B,sBAAAA,QAAQ,EAAE;AADY,qBAAZ,CAHd;AAME,oBAAA,SAAS,EAAC,wBANZ;AAOE,oBAAA,WAAW,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA,0BADF,EAUG1B,MAAM,CAACe,OAAP,iBAAkB;AAAM,oBAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVrB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAzDF,eAuEE;AAAQ,gBAAA,SAAS,EAAC,YAAlB;AAA+B,gBAAA,IAAI,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAvEF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eA8EE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,kBA9EF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwFD,CA5ID;;GAAMpB,W;UAMAJ,O;;;KANAI,W;AA8IN,eAAeA,WAAf","sourcesContent":["import { useForm } from 'react-hook-form';\r\nimport emailjs from 'emailjs-com';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\n\r\nconst ContactForm = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors }\r\n  } = useForm();\r\n\r\n  // Function that displays a success toast on bottom right of the page when form submission is successful\r\n  const toastifySuccess = () => {\r\n    toast('Form sent!', {\r\n      position: 'bottom-right',\r\n      autoClose: 5000,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: false,\r\n      className: 'submit-feedback success',\r\n      toastId: 'notifyToast'\r\n    });\r\n  };\r\n\r\n  // Function called on submit that uses emailjs to send email of valid contact form\r\n  const onSubmit = async (data) => {\r\n    // Destrcture data object\r\n    const { name, email, subject, message } = data;\r\n    try {\r\n      const templateParams = {\r\n        name,\r\n        email,\r\n        subject,\r\n        message\r\n      };\r\n      console.log('Name: ', name);\r\n      console.log('Email: ', email);\r\n      console.log('Subject: ', subject);\r\n      console.log('Message: ', message);\r\n\r\n      await emailjs.send(\r\n        process.env.REACT_APP_SERVICE_ID,\r\n        process.env.REACT_APP_TEMPLATE_ID,\r\n        templateParams,\r\n        process.env.REACT_APP_USER_ID\r\n      );\r\n\r\n      reset();\r\n      toastifySuccess();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='ContactForm'>\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div className='col-12 text-center'>\r\n            <div className='contactForm'>\r\n              <form id='contact-form' onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                {/* Row 1 of form */}\r\n                <div className='row formRow'>\r\n                  <div className='col-6'>\r\n                    <input\r\n                      type='text'\r\n                      name='name'\r\n                      {...register('name', {\r\n                        required: { value: true, message: 'Please enter your name' },\r\n                        maxLength: {\r\n                          value: 30,\r\n                          message: 'Please use 30 characters or less'\r\n                        }\r\n                      })}\r\n                      className='form-control formInput'\r\n                      placeholder='Name'\r\n                    ></input>\r\n                    {errors.name && <span className='errorMessage'>{errors.name.message}</span>}\r\n                  </div>\r\n                  <div className='col-6'>\r\n                    <input\r\n                      type='email'\r\n                      name='email'\r\n                      {...register('email', {\r\n                        required: true,\r\n                        pattern: /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n                      })}\r\n                      className='form-control formInput'\r\n                      placeholder='Email address'\r\n                    ></input>\r\n                    {errors.email && (\r\n                      <span className='errorMessage'>Please enter a valid email address</span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                {/* Row 2 of form */}\r\n                <div className='row formRow'>\r\n                  <div className='col'>\r\n                    <input\r\n                      type='text'\r\n                      name='subject'\r\n                      {...register('subject', {\r\n                        required: { value: true, message: 'Please enter a subject' },\r\n                        maxLength: {\r\n                          value: 75,\r\n                          message: 'Subject cannot exceed 75 characters'\r\n                        }\r\n                      })}\r\n                      className='form-control formInput'\r\n                      placeholder='Subject'\r\n                    ></input>\r\n                    {errors.subject && (\r\n                      <span className='errorMessage'>{errors.subject.message}</span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                {/* Row 3 of form */}\r\n                <div className='row formRow'>\r\n                  <div className='col'>\r\n                    <textarea\r\n                      rows={3}\r\n                      name='message'\r\n                      {...register('message', {\r\n                        required: true\r\n                      })}\r\n                      className='form-control formInput'\r\n                      placeholder='Message'\r\n                    ></textarea>\r\n                    {errors.message && <span className='errorMessage'>Please enter a message</span>}\r\n                  </div>\r\n                </div>\r\n                <button className='submit-btn' type='submit'>\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </div>\r\n            <ToastContainer />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"]},"metadata":{},"sourceType":"module"}