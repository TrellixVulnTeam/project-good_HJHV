{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\auction\\\\Timer.js\",\n    _s = $RefreshSig$();\n\nimport { minutesToMilliseconds } from 'date-fns';\nimport React from 'react';\nimport { useTimer } from 'react-timer-hook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyTimer({\n  expiryTimestamp\n}) {\n  _s();\n\n  const {\n    seconds,\n    minutes,\n    hours,\n    days,\n    isRunning\n  } = useTimer({\n    expiryTimestamp,\n    onExpire: () => console.warn('onExpire called')\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      fontSize: '100px',\n      marginTop: '10vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: days\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: String(hours).padStart(2, '0')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: String(minutes).padStart(2, '0')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: String(seconds).padStart(2, '0')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyTimer, \"/9TkdonKILVoeI4svK4sy9oylGs=\", false, function () {\n  return [useTimer];\n});\n\n_c = MyTimer;\nexport default function App() {\n  const time = new Date();\n  time.setSeconds(time.getSeconds() + 600); // 10 minutes timer\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MyTimer, {\n      expiryTimestamp: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyTimer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/auction/Timer.js"],"names":["minutesToMilliseconds","React","useTimer","MyTimer","expiryTimestamp","seconds","minutes","hours","days","isRunning","onExpire","console","warn","textAlign","fontSize","marginTop","String","padStart","App","time","Date","setSeconds","getSeconds"],"mappings":";;;AAAA,SAASA,qBAAT,QAAsC,UAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAAsC;AAAA;;AAClC,QAAM;AACFC,IAAAA,OADE;AAEFC,IAAAA,OAFE;AAGFC,IAAAA,KAHE;AAIFC,IAAAA,IAJE;AAKFC,IAAAA;AALE,MAMFP,QAAQ,CAAC;AAAEE,IAAAA,eAAF;AAAmBM,IAAAA,QAAQ,EAAE,MAAMC,OAAO,CAACC,IAAR,CAAa,iBAAb;AAAnC,GAAD,CANZ;AASA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,QAAQ,EAAE,OAAjC;AAA0CC,MAAAA,SAAS,EAAE;AAArD,KAAZ;AAAA,4BACI;AAAA,gBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA,YADJ,oBAEI;AAAA,gBAAOQ,MAAM,CAACT,KAAD,CAAN,CAAcU,QAAd,CAAuB,CAAvB,EAA0B,GAA1B;AAAP;AAAA;AAAA;AAAA;AAAA,YAFJ,oBAGI;AAAA,gBAAOD,MAAM,CAACV,OAAD,CAAN,CAAgBW,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B;AAAP;AAAA;AAAA;AAAA;AAAA,YAHJ,oBAII;AAAA,gBAAOD,MAAM,CAACX,OAAD,CAAN,CAAgBY,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B;AAAP;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAlBQd,O;UAODD,Q;;;KAPCC,O;AAoBT,eAAe,SAASe,GAAT,GAAe;AAC1B,QAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACAD,EAAAA,IAAI,CAACE,UAAL,CAAgBF,IAAI,CAACG,UAAL,KAAoB,GAApC,EAF0B,CAEgB;;AAC1C,sBACI;AAAA,2BACI,QAAC,OAAD;AAAS,MAAA,eAAe,EAAEH;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;MARuBD,G","sourcesContent":["import { minutesToMilliseconds } from 'date-fns';\r\nimport React from 'react';\r\nimport { useTimer } from 'react-timer-hook';\r\n\r\nfunction MyTimer({ expiryTimestamp }) {\r\n    const {\r\n        seconds,\r\n        minutes,\r\n        hours,\r\n        days,\r\n        isRunning\r\n    } = useTimer({ expiryTimestamp, onExpire: () => console.warn('onExpire called') });\r\n\r\n\r\n    return (\r\n        <div style={{ textAlign: 'center', fontSize: '100px', marginTop: '10vh' }}>\r\n            <span>{days}</span>:\r\n            <span>{String(hours).padStart(2, '0')}</span>:\r\n            <span>{String(minutes).padStart(2, '0')}</span>:\r\n            <span>{String(seconds).padStart(2, '0')}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function App() {\r\n    const time = new Date();\r\n    time.setSeconds(time.getSeconds() + 600); // 10 minutes timer\r\n    return (\r\n        <div>\r\n            <MyTimer expiryTimestamp={time} />\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}