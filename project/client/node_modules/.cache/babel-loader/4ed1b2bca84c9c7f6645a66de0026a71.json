{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\user\\\\UpdateDetails.js\",\n    _s = $RefreshSig$();\n\n// import './yourProfile.scss'\n// import { connect } from 'react-redux';\n// import React, { useEffect } from 'react';\n// import Visibility from '@material-ui/icons/Visibility';\n// import VisibilityOff from '@material-ui/icons/VisibilityOff';\n// import Button from '@material-ui/core/Button';\n// import InputAdornment from '@material-ui/core/InputAdornment';\n// import IconButton from '@material-ui/core/IconButton';\n// import clsx from 'clsx';\n// import { makeStyles } from '@material-ui/core/styles';\n// import FilledInput from '@material-ui/core/FilledInput';\n// import { updateUser } from '../../store/actions/user'//מעדכן בסטייט ובסטורג\n// const useStyles = makeStyles((theme) => ({\n//     root: {\n//         display: 'flex',\n//         flexWrap: 'wrap',\n//     },\n//     margin: {\n//         margin: theme.spacing(1),\n//     },\n//     withoutLabel: {\n//         marginTop: theme.spacing(3),\n//     },\n//     textField: {\n//         width: '25ch',\n//     },\n//     input_pas_ma: {\n//         color: '#8e8e95',\n//         height: '4vh !important',\n//         background: 'none !important',\n//         color: '#8e8e95 !important',\n//         width: '70% !important',\n//         padding: '0vw !important',\n//         borderBottomColor: '8e8e95 !important',\n//         background: 'none !important',\n//         alignSelf: 'flex-end',\n//         marginRight: 'auto',\n//         marginLeft: 'auto'\n//     },\n//     eye: {\n//         color: '#8e8e95',\n//     },\n//     placeholder_in_form: {\n//         marginLeft: '3% !important',\n//         marginBottom: ' -2% !important'\n//     }\n// }));\n// const UpdateDetails = (props) => {\n//     const classes = useStyles();\n//     const handleChange = (prop) => (event) => {\n//         setValues({ ...values, [prop]: event.target.value });\n//     };\n//     const handleClickShowPassword = () => {\n//         setValues({ ...values, showPassword: !values.showPassword });\n//     };\n//     const handleMouseDownPassword = (event) => {\n//         event.preventDefault();\n//     };\n//     const [values, setValues] = React.useState({\n//         amount: '',\n//         password: '',\n//         weight: '',\n//         weightRange: '',\n//         showPassword: false,\n//     });\n//     //עדכון משתמש קיים\n//     let u = JSON.parse(localStorage.getItem(\"user\")).currentUser;\n//     let password = u.password;\n//     let userName = u.userName;\n//     let email = u.email;\n//     let phone = u.phone;\n//     let city = u.city;\n//     let birthYear = u.birthYear;\n//     const updateUser = () => {\n//         let user = JSON.parse(localStorage.getItem(\"user\")).currentUser;\n//         user.password = password;\n//         user.email = email;\n//         user.phone = phone;\n//         user.city = city;\n//         user.name = userName;\n//         user.birthYear = birthYear;\n//         props.updateUser(user);\n//     };\n//     return (\n//         <>\n//             <center>\n//                 <br />\n//                 <h1 id=\"h1_profile\">Update your details</h1>\n//                 <form className={classes.root} autoComplete=\"off\" id=\"update_user_details_form\" >\n//                     <FilledInput\n//                         type={'text'}\n//                         placeholder=\"Name\"\n//                         required\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\n//                         variant=\"filled\"\n//                         onChange={(e) => { userName = e.target.value }}\n//                         startAdornment={\n//                             <InputAdornment position=\"start\">\n//                                 <i className=\"user icon\"></i>\n//                             </InputAdornment>\n//                         }\n//                         defaultValue={userName}\n//                     />\n//                     <FilledInput\n//                         type={'email'}\n//                         placeholder=\"Email address\"\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\n//                         variant=\"filled\"\n//                         required\n//                         onChange={(e) => { email = e.target.value }}\n//                         startAdornment={\n//                             <InputAdornment position=\"start\">\n//                                 <i className=\"envelope icon\"></i>\n//                             </InputAdornment>\n//                         }\n//                         defaultValue={email} />\n//                     <FilledInput\n//                         type={'text'}\n//                         required\n//                         placeholder='City'\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\n//                         variant=\"filled\"\n//                         onChange={(e) => { city = e.target.value }}\n//                         startAdornment={\n//                             <InputAdornment position=\"start\">\n//                                 <i className=\"map marker alternate icon\"></i>\n//                             </InputAdornment>\n//                         }\n//                         defaultValue={city} />\n//                     <FilledInput\n//                         type={'text'}\n//                         placeholder=\"Year Of Birth\"\n//                         required\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\n//                         variant=\"filled\"\n//                         onChange={(e) => { birthYear = e.target.value }}\n//                         startAdornment={\n//                             <InputAdornment position=\"start\">\n//                                 <i className=\"calendar alternate outline icon\"></i>\n//                             </InputAdornment>\n//                         }\n//                         defaultValue={birthYear} />\n//                     <FilledInput\n//                         type={'text'}\n//                         placeholder=\"Phone Number\"\n//                         required\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\n//                         variant=\"filled\"\n//                         onChange={(e) => { phone = e.target.value }}\n//                         startAdornment={\n//                             <InputAdornment position=\"start\">\n//                                 <i className=\"mobile alternate icon\"></i>\n//                             </InputAdornment>\n//                         }\n//                         defaultValue={phone} />\n//                     <FilledInput\n//                         type={values.showPassword ? 'text' : 'password'}\n//                         onChange={handleChange('password')}\n//                         placeholder=\"Password\"\n//                         required\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\n//                         variant=\"filled\"\n//                         onChange={(e) => { password = e.target.value }}\n//                         startAdornment={\n//                             <InputAdornment position=\"start\">\n//                                 <i className=\"lock icon\"></i>\n//                             </InputAdornment>\n//                         }\n//                         endAdornment={\n//                             <InputAdornment position=\"end\">\n//                                 <IconButton\n//                                     onClick={handleClickShowPassword}\n//                                     onMouseDown={handleMouseDownPassword}\n//                                     className={classes.eye}\n//                                 >\n//                                     {values.showPassword ? <Visibility /> : <VisibilityOff />}\n//                                 </IconButton>\n//                             </InputAdornment>\n//                         }\n//                         defaultValue={password} />\n//                     <br />\n//                     {/* האם לעשות שיעבור לדף הבית */}\n//                     {/* וגם להודיע לו שזה עודכן */}\n//                     <Button type=\"button\" variant=\"contained\" id=\"update_details_btn\" onClick={() => { updateUser() }}>Update</Button>\n//                 </form>\n//             </center >\n//         </>\n//     );\n// }\n// const mapStateToProps = (state) => {\n//     return {\n//     };\n// }\n// export default connect(mapStateToProps, { updateUser})(UpdateDetails);\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport MailIcon from '@mui/icons-material/Mail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SwipeableTemporaryDrawer() {\n  _s();\n\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const list = anchor => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250\n    },\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)]\n      }, text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: ['All mail', 'Trash', 'Spam'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)]\n      }, text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ['left', 'right', 'top', 'bottom'].map(anchor => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleDrawer(anchor, true),\n        children: anchor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SwipeableDrawer, {\n        anchor: anchor,\n        open: state[anchor],\n        onClose: toggleDrawer(anchor, false),\n        onOpen: toggleDrawer(anchor, true),\n        children: list(anchor)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this)]\n    }, anchor, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SwipeableTemporaryDrawer, \"mrP2scG11YaBBfM2gqRg58YN+SA=\");\n\n_c = SwipeableTemporaryDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwipeableTemporaryDrawer\");","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/project-good/project/client/src/components/user/UpdateDetails.js"],"names":["React","Box","SwipeableDrawer","Button","List","Divider","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","SwipeableTemporaryDrawer","state","setState","useState","top","left","bottom","right","toggleDrawer","anchor","open","event","type","key","list","width","map","text","index"],"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","sourcesContent":["// import './yourProfile.scss'\r\n// import { connect } from 'react-redux';\r\n// import React, { useEffect } from 'react';\r\n// import Visibility from '@material-ui/icons/Visibility';\r\n// import VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n// import Button from '@material-ui/core/Button';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import clsx from 'clsx';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import FilledInput from '@material-ui/core/FilledInput';\r\n// import { updateUser } from '../../store/actions/user'//מעדכן בסטייט ובסטורג\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//         display: 'flex',\r\n//         flexWrap: 'wrap',\r\n//     },\r\n//     margin: {\r\n//         margin: theme.spacing(1),\r\n//     },\r\n//     withoutLabel: {\r\n//         marginTop: theme.spacing(3),\r\n//     },\r\n//     textField: {\r\n//         width: '25ch',\r\n//     },\r\n//     input_pas_ma: {\r\n//         color: '#8e8e95',\r\n//         height: '4vh !important',\r\n//         background: 'none !important',\r\n//         color: '#8e8e95 !important',\r\n//         width: '70% !important',\r\n//         padding: '0vw !important',\r\n//         borderBottomColor: '8e8e95 !important',\r\n//         background: 'none !important',\r\n//         alignSelf: 'flex-end',\r\n//         marginRight: 'auto',\r\n//         marginLeft: 'auto'\r\n\r\n//     },\r\n//     eye: {\r\n//         color: '#8e8e95',\r\n\r\n//     },\r\n//     placeholder_in_form: {\r\n//         marginLeft: '3% !important',\r\n//         marginBottom: ' -2% !important'\r\n//     }\r\n// }));\r\n\r\n// const UpdateDetails = (props) => {\r\n\r\n//     const classes = useStyles();\r\n//     const handleChange = (prop) => (event) => {\r\n//         setValues({ ...values, [prop]: event.target.value });\r\n//     };\r\n\r\n//     const handleClickShowPassword = () => {\r\n//         setValues({ ...values, showPassword: !values.showPassword });\r\n//     };\r\n\r\n//     const handleMouseDownPassword = (event) => {\r\n//         event.preventDefault();\r\n//     };\r\n\r\n//     const [values, setValues] = React.useState({\r\n//         amount: '',\r\n//         password: '',\r\n//         weight: '',\r\n//         weightRange: '',\r\n//         showPassword: false,\r\n//     });\r\n\r\n//     //עדכון משתמש קיים\r\n//     let u = JSON.parse(localStorage.getItem(\"user\")).currentUser;\r\n//     let password = u.password;\r\n//     let userName = u.userName;\r\n//     let email = u.email;\r\n//     let phone = u.phone;\r\n//     let city = u.city;\r\n//     let birthYear = u.birthYear;\r\n\r\n//     const updateUser = () => {\r\n//         let user = JSON.parse(localStorage.getItem(\"user\")).currentUser;\r\n//         user.password = password;\r\n//         user.email = email;\r\n//         user.phone = phone;\r\n//         user.city = city;\r\n//         user.name = userName;\r\n//         user.birthYear = birthYear;\r\n//         props.updateUser(user);\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             <center>\r\n//                 <br />\r\n\r\n//                 <h1 id=\"h1_profile\">Update your details</h1>\r\n//                 <form className={classes.root} autoComplete=\"off\" id=\"update_user_details_form\" >\r\n\r\n//                     <FilledInput\r\n//                         type={'text'}\r\n//                         placeholder=\"Name\"\r\n//                         required\r\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n//                         variant=\"filled\"\r\n//                         onChange={(e) => { userName = e.target.value }}\r\n//                         startAdornment={\r\n//                             <InputAdornment position=\"start\">\r\n//                                 <i className=\"user icon\"></i>\r\n//                             </InputAdornment>\r\n//                         }\r\n//                         defaultValue={userName}\r\n//                     />\r\n\r\n//                     <FilledInput\r\n//                         type={'email'}\r\n//                         placeholder=\"Email address\"\r\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n//                         variant=\"filled\"\r\n//                         required\r\n//                         onChange={(e) => { email = e.target.value }}\r\n//                         startAdornment={\r\n//                             <InputAdornment position=\"start\">\r\n//                                 <i className=\"envelope icon\"></i>\r\n//                             </InputAdornment>\r\n//                         }\r\n//                         defaultValue={email} />\r\n\r\n//                     <FilledInput\r\n//                         type={'text'}\r\n//                         required\r\n//                         placeholder='City'\r\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n//                         variant=\"filled\"\r\n//                         onChange={(e) => { city = e.target.value }}\r\n//                         startAdornment={\r\n//                             <InputAdornment position=\"start\">\r\n//                                 <i className=\"map marker alternate icon\"></i>\r\n//                             </InputAdornment>\r\n//                         }\r\n//                         defaultValue={city} />\r\n\r\n//                     <FilledInput\r\n//                         type={'text'}\r\n//                         placeholder=\"Year Of Birth\"\r\n//                         required\r\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n//                         variant=\"filled\"\r\n//                         onChange={(e) => { birthYear = e.target.value }}\r\n//                         startAdornment={\r\n//                             <InputAdornment position=\"start\">\r\n//                                 <i className=\"calendar alternate outline icon\"></i>\r\n//                             </InputAdornment>\r\n//                         }\r\n//                         defaultValue={birthYear} />\r\n\r\n//                     <FilledInput\r\n//                         type={'text'}\r\n//                         placeholder=\"Phone Number\"\r\n//                         required\r\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n//                         variant=\"filled\"\r\n//                         onChange={(e) => { phone = e.target.value }}\r\n//                         startAdornment={\r\n//                             <InputAdornment position=\"start\">\r\n//                                 <i className=\"mobile alternate icon\"></i>\r\n//                             </InputAdornment>\r\n//                         }\r\n//                         defaultValue={phone} />\r\n\r\n//                     <FilledInput\r\n//                         type={values.showPassword ? 'text' : 'password'}\r\n//                         onChange={handleChange('password')}\r\n//                         placeholder=\"Password\"\r\n//                         required\r\n//                         className={clsx(classes.margin, classes.textField, classes.input_pas_ma)}\r\n//                         variant=\"filled\"\r\n//                         onChange={(e) => { password = e.target.value }}\r\n//                         startAdornment={\r\n//                             <InputAdornment position=\"start\">\r\n//                                 <i className=\"lock icon\"></i>\r\n//                             </InputAdornment>\r\n//                         }\r\n//                         endAdornment={\r\n//                             <InputAdornment position=\"end\">\r\n//                                 <IconButton\r\n//                                     onClick={handleClickShowPassword}\r\n//                                     onMouseDown={handleMouseDownPassword}\r\n//                                     className={classes.eye}\r\n//                                 >\r\n//                                     {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n//                                 </IconButton>\r\n//                             </InputAdornment>\r\n//                         }\r\n//                         defaultValue={password} />\r\n\r\n\r\n//                     <br />\r\n\r\n\r\n//                     {/* האם לעשות שיעבור לדף הבית */}\r\n//                     {/* וגם להודיע לו שזה עודכן */}\r\n//                     <Button type=\"button\" variant=\"contained\" id=\"update_details_btn\" onClick={() => { updateUser() }}>Update</Button>\r\n//                 </form>\r\n\r\n//             </center >\r\n//         </>\r\n//     );\r\n\r\n// }\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//     };\r\n// }\r\n// export default connect(mapStateToProps, { updateUser})(UpdateDetails);\r\n\r\n\r\n\r\n\r\nimport * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\n\r\nexport default function SwipeableTemporaryDrawer() {\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === 'keydown' &&\r\n      (event.key === 'Tab' || event.key === 'Shift')\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <Box\r\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {['left', 'right', 'top', 'bottom'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\r\n          <SwipeableDrawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n            onOpen={toggleDrawer(anchor, true)}\r\n          >\r\n            {list(anchor)}\r\n          </SwipeableDrawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}