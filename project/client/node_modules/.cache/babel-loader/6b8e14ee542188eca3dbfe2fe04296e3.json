{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\user\\\\auction manager\\\\ApprovalModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport { saveApprovalLotteriesInDB } from '../../../utils/newAuctionUtils';\nimport { getManagerAuctionsFromDB, setApprovalAuctionModal } from '../../../store/actions/auctionManager';\nimport './auctionManager.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ApprovalModal = props => {\n  _s();\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      fullScreen: fullScreen,\n      open: true,\n      onClick: () => props.setApprovalAuctionModal(false),\n      onClose: () => props.setApprovalAuctionModal(false),\n      \"aria-labelledby\": \"responsive-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"responsive-dialog-title\",\n        children: \"Approval\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Are you shure you want to approval this chinese auctions lotteries?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"medium\",\n          onClick: () => saveApprovalLotteriesInDB(props.auction_id, true).then(succ => {\n            if (succ.status != 400) {\n              props.getManagerAuctionsFromDB(props.userId);\n            }\n          }),\n          color: \"primary\",\n          children: \"Ok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"medium\",\n          color: \"primary\",\n          children: \"Cancle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ApprovalModal, \"s4YKggqTL4GpL1vhNriIrg3n/tw=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c = ApprovalModal;\n\nconst mapStateToProps = state => {\n  return {\n    auction_id: state.auctionManager.selected_auction_to_options._id,\n    userId: state.user.currentUser._id,\n    x: state.auctionManager.x\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getManagerAuctionsFromDB,\n  setApprovalAuctionModal\n})(ApprovalModal);\n\nvar _c;\n\n$RefreshReg$(_c, \"ApprovalModal\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/user/auction manager/ApprovalModal.js"],"names":["React","useEffect","connect","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","useTheme","saveApprovalLotteriesInDB","getManagerAuctionsFromDB","setApprovalAuctionModal","ApprovalModal","props","theme","fullScreen","breakpoints","down","auction_id","then","succ","status","userId","mapStateToProps","state","auctionManager","selected_auction_to_options","_id","user","currentUser","x"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,yBAAT,QAA0C,gCAA1C;AACA,SAASC,wBAAT,EAAmCC,uBAAnC,QAAkE,uCAAlE;AACA,OAAO,uBAAP;;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,KAAK,GAAGN,QAAQ,EAAtB;AACA,QAAMO,UAAU,GAAGR,aAAa,CAACO,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAAhC;AAEA,sBACI;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,UAAU,EAAEF,UADhB;AAEI,MAAA,IAAI,EAAE,IAFV;AAGI,MAAA,OAAO,EAAE,MAAMF,KAAK,CAACF,uBAAN,CAA8B,KAA9B,CAHnB;AAII,MAAA,OAAO,EAAE,MAAME,KAAK,CAACF,uBAAN,CAA8B,KAA9B,CAJnB;AAKI,yBAAgB,yBALpB;AAAA,8BAOI,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,yBAAhB;AAAA,kBAA2C;AAA3C;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI,QAAC,aAAD;AAAA,+BACI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ,eAaI,QAAC,aAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,IAAI,EAAC,QAAjC;AAA0C,UAAA,OAAO,EAAE,MAAMF,yBAAyB,CAACI,KAAK,CAACK,UAAP,EAAmB,IAAnB,CAAzB,CAAkDC,IAAlD,CAAuDC,IAAI,IAAI;AAAE,gBAAIA,IAAI,CAACC,MAAL,IAAe,GAAnB,EAAwB;AAAER,cAAAA,KAAK,CAACH,wBAAN,CAA+BG,KAAK,CAACS,MAArC;AAA8C;AAAE,WAA3I,CAAzD;AAAuM,UAAA,KAAK,EAAC,SAA7M;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,IAAI,EAAC,QAAjC;AAA0C,UAAA,KAAK,EAAC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA9BD;;GAAMV,a;UACYJ,Q,EACKD,a;;;KAFjBK,a;;AA+BN,MAAMW,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHN,IAAAA,UAAU,EAAEM,KAAK,CAACC,cAAN,CAAqBC,2BAArB,CAAiDC,GAD1D;AAEHL,IAAAA,MAAM,EAAEE,KAAK,CAACI,IAAN,CAAWC,WAAX,CAAuBF,GAF5B;AAGHG,IAAAA,CAAC,EAAEN,KAAK,CAACC,cAAN,CAAqBK;AAHrB,GAAP;AAKH,CAND;;AAOA,eAAe9B,OAAO,CAACuB,eAAD,EAAkB;AAAEb,EAAAA,wBAAF;AAA4BC,EAAAA;AAA5B,CAAlB,CAAP,CAAgFC,aAAhF,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { saveApprovalLotteriesInDB } from '../../../utils/newAuctionUtils'\r\nimport { getManagerAuctionsFromDB, setApprovalAuctionModal } from '../../../store/actions/auctionManager'\r\nimport './auctionManager.scss'\r\nconst ApprovalModal = (props) => {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                open={true}\r\n                onClick={() => props.setApprovalAuctionModal(false)}\r\n                onClose={() => props.setApprovalAuctionModal(false)}\r\n                aria-labelledby=\"responsive-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"responsive-dialog-title\">{\"Approval\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Are you shure you want to approval this chinese auctions lotteries?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" size=\"medium\" onClick={() => saveApprovalLotteriesInDB(props.auction_id, true).then(succ => { if (succ.status != 400) { props.getManagerAuctionsFromDB(props.userId) } })} color=\"primary\">\r\n                        Ok\r\n                    </Button>\r\n                    <Button variant=\"contained\" size=\"medium\" color=\"primary\">\r\n                        Cancle\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div >\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auction_id: state.auctionManager.selected_auction_to_options._id,\r\n        userId: state.user.currentUser._id,\r\n        x: state.auctionManager.x\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { getManagerAuctionsFromDB, setApprovalAuctionModal })(ApprovalModal);"]},"metadata":{},"sourceType":"module"}