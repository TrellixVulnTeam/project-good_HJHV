{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\auction\\\\Auction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { Link, Route, useRouteMatch, Switch } from 'react-router-dom';\nimport CurrentAuction from '../auction/CurrentAuction';\nimport Cart from '../auction/Cart';\nimport './Auction.scss';\nimport { setUserByStorage, setCurrentAuctionByStorage, setNewAuctionByStorage } from '../../store/actions/user';\nimport PaymentForm from './PaymentForm';\nimport AboutAuction from './about/AboutAuction';\nimport { updateShoppingCart } from '../../store/actions/user';\nimport { getProductsInCartByAuctionIdFromDB } from '../../utils/userUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Auction = props => {\n  _s();\n\n  useEffect(() => {\n    let id = localStorage.getItem(\"user\");\n\n    if (id && props.currentUser == null) {\n      let a_id = localStorage.getItem(\"currentAuction\"); //let n_a_id = localStorage.getItem(\"newAuction\");\n\n      if (a_id) props.setCurrentAuctionByStorage(a_id); //if (n_a_id) props.setNewAuctionByStorage(n_a_id);\n\n      props.setUserByStorage(id);\n    }\n  }, []);\n  useEffect(() => {\n    if (props.currentUser) getProductsInCartByAuctionIdFromDB(props.user.currentUser._id, props.currentAuction._id).then(succ => {\n      if (succ.status != 400) {\n        props.updateShoppingCart(succ.data);\n      }\n    });\n  }, [props.currentUser]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: '/auction/payment',\n        children: /*#__PURE__*/_jsxDEV(PaymentForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: '/auction/about',\n        children: /*#__PURE__*/_jsxDEV(AboutAuction, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `/auction/cart`,\n        children: /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `/auction`,\n        children: /*#__PURE__*/_jsxDEV(CurrentAuction, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Auction, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n\n_c = Auction;\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.user.currentUser,\n    currentAuction: state.currentAuction.currentAuction\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setNewAuctionByStorage,\n  setCurrentAuctionByStorage,\n  setUserByStorage,\n  updateShoppingCart\n})(Auction);\n\nvar _c;\n\n$RefreshReg$(_c, \"Auction\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/auction/Auction.js"],"names":["React","useEffect","connect","Link","Route","useRouteMatch","Switch","CurrentAuction","Cart","setUserByStorage","setCurrentAuctionByStorage","setNewAuctionByStorage","PaymentForm","AboutAuction","updateShoppingCart","getProductsInCartByAuctionIdFromDB","Auction","props","id","localStorage","getItem","currentUser","a_id","user","_id","currentAuction","then","succ","status","data","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,aAAtB,EAAqCC,MAArC,QAAmD,kBAAnD;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAO,gBAAP;AACA,SAASC,gBAAT,EAA2BC,0BAA3B,EAAuDC,sBAAvD,QAAqF,0BAArF;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAASC,kBAAT,QAAmC,0BAAnC;AAEA,SAASC,kCAAT,QAAmD,uBAAnD;;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAGvBhB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIiB,EAAE,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAT;;AAEA,QAAIF,EAAE,IAAID,KAAK,CAACI,WAAN,IAAqB,IAA/B,EAAqC;AAEjC,UAAIC,IAAI,GAAGH,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,CAFiC,CAGjC;;AACA,UAAIE,IAAJ,EAAUL,KAAK,CAACP,0BAAN,CAAiCY,IAAjC,EAJuB,CAKjC;;AACAL,MAAAA,KAAK,CAACR,gBAAN,CAAuBS,EAAvB;AACH;AACJ,GAXQ,EAWN,EAXM,CAAT;AAYAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgB,KAAK,CAACI,WAAV,EAAuBN,kCAAkC,CAACE,KAAK,CAACM,IAAN,CAAWF,WAAX,CAAuBG,GAAxB,EAA6BP,KAAK,CAACQ,cAAN,CAAqBD,GAAlD,CAAlC,CAAyFE,IAAzF,CAA8FC,IAAI,IAAI;AACzH,UAAIA,IAAI,CAACC,MAAL,IAAe,GAAnB,EAAwB;AAAEX,QAAAA,KAAK,CAACH,kBAAN,CAAyBa,IAAI,CAACE,IAA9B;AAAsC;AACnE,KAFsB;AAG1B,GAJQ,EAIN,CAACZ,KAAK,CAACI,WAAP,CAJM,CAAT;AAKA,sBAAQ;AAAA,2BACJ,QAAC,MAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,kBAAb;AAAA,+BAAiC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,gBAAb;AAAA,+BAA+B,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,eAAd;AAAA,+BAA8B,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,UAAd;AAAA,+BAAyB,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADI,mBAAR;AASH,CA7BD;;GAAML,O;;KAAAA,O;;AA8BN,MAAMc,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHV,IAAAA,WAAW,EAAEU,KAAK,CAACR,IAAN,CAAWF,WADrB;AAEHI,IAAAA,cAAc,EAAEM,KAAK,CAACN,cAAN,CAAqBA;AAFlC,GAAP;AAIH,CALD;;AAMA,eAAevB,OAAO,CAAC4B,eAAD,EAAkB;AAAEnB,EAAAA,sBAAF;AAA0BD,EAAAA,0BAA1B;AAAsDD,EAAAA,gBAAtD;AAAuEK,EAAAA;AAAvE,CAAlB,CAAP,CAAsHE,OAAtH,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Route, useRouteMatch, Switch } from 'react-router-dom'\r\nimport CurrentAuction from '../auction/CurrentAuction';\r\nimport Cart from '../auction/Cart';\r\nimport './Auction.scss';\r\nimport { setUserByStorage, setCurrentAuctionByStorage, setNewAuctionByStorage } from '../../store/actions/user';\r\nimport PaymentForm from './PaymentForm';\r\nimport AboutAuction from './about/AboutAuction'\r\nimport { updateShoppingCart } from '../../store/actions/user';\r\n\r\nimport { getProductsInCartByAuctionIdFromDB } from '../../utils/userUtils';\r\n\r\nconst Auction = (props) => {\r\n\r\n\r\n    useEffect(() => {\r\n        let id = localStorage.getItem(\"user\");\r\n\r\n        if (id && props.currentUser == null) {\r\n\r\n            let a_id = localStorage.getItem(\"currentAuction\");\r\n            //let n_a_id = localStorage.getItem(\"newAuction\");\r\n            if (a_id) props.setCurrentAuctionByStorage(a_id);\r\n            //if (n_a_id) props.setNewAuctionByStorage(n_a_id);\r\n            props.setUserByStorage(id);\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        if (props.currentUser) getProductsInCartByAuctionIdFromDB(props.user.currentUser._id, props.currentAuction._id).then(succ => {\r\n            if (succ.status != 400) { props.updateShoppingCart(succ.data); }\r\n        })\r\n    }, [props.currentUser])\r\n    return (<>\r\n        <Switch>\r\n            <Route path={'/auction/payment'}><PaymentForm /></Route>\r\n            <Route path={'/auction/about'}><AboutAuction /></Route>\r\n            <Route path={`/auction/cart`}><Cart /></Route>\r\n            <Route path={`/auction`}><CurrentAuction /></Route>\r\n        </Switch>\r\n    </>\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentUser: state.user.currentUser,\r\n        currentAuction: state.currentAuction.currentAuction\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { setNewAuctionByStorage, setCurrentAuctionByStorage, setUserByStorage,updateShoppingCart })(Auction);\r\n"]},"metadata":{},"sourceType":"module"}