{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\new auction\\\\AuctionInformation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport './NewAuction.scss';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { saveAuctionInformationInDB } from '../../utils/newAuctionUtils';\nimport { useForm } from \"react-hook-form\";\nimport { TextField } from \"@mui/material\";\nimport Alert from '@mui/material/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '40%' // outerHeight:'70%'\n\n    }\n  }\n}));\n\nconst AuctionInformation = props => {\n  _s();\n\n  let submit = (data, e) => {\n    debugger;\n    e.preventDefault(); // details.registrationStartDate = selectedDate2;\n    // details.registrationEndDate = selectedDate3;\n    // details.lotteriesDate = selectedDate1;\n    // details.name = name;\n\n    debugger;\n    details.registrationStartDate = new Date();\n    details.registrationEndDate = new Date(31, 1, 2021);\n    details.lotteriesDate = new Date(1, 12, 2021);\n    details.name = data.name;\n    console.log(details);\n    console.log(props.auctionId);\n    debugger;\n    saveAuctionInformationInDB(details); // saveAuctionInformationInDB(props.auctionId, details).then(succ => {\n    //     console.log(succ.data);\n    //     if (succ.status != 400) props.setNewAuction(succ.data)\n    // })\n  };\n\n  const classes = useStyles();\n  const [selectedDate1, setSelectedDate1] = React.useState(null); //lotery\n\n  const [selectedDate2, setSelectedDate2] = React.useState(null); //start\n\n  const [selectedDate3, setSelectedDate3] = React.useState(null); //end\n\n  const [name, setName] = React.useState(null); //end\n\n  const handleDateChange1 = date => {\n    setSelectedDate1(date);\n  }; //lotery\n\n\n  const handleDateChange2 = date => {\n    setSelectedDate2(date);\n  }; //start\n\n\n  const handleDateChange3 = date => {\n    setSelectedDate3(date);\n  }; //end\n\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  let details = {\n    registrationStartDate: null,\n    registrationEndDate: null,\n    lotteriesDate: null,\n    terms: \"\",\n    //קובץ תקנון\n    name: \"unknown\",\n    auctionId: props.auctionId\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit(submit),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Auction information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: \"txt\",\n      variant: \"standard\",\n      ...register('name', {\n        required: true\n      }),\n      id: \"input-with-icon-grid\",\n      label: \"Name Auction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), errors.name && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: \"This is an error enter Name (required)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n        disableToolbar: true,\n        variant: \"inline\",\n        format: \"dd/MM/yyyy\",\n        margin: \"normal\",\n        id: \"date-picker-inline\",\n        label: \"Registration start date\",\n        value: selectedDate2,\n        onChange: handleDateChange2,\n        KeyboardButtonProps: {\n          'aria-label': 'change date'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n        disableToolbar: true,\n        variant: \"inline\",\n        format: \"dd/MM/yyyy\",\n        margin: \"normal\",\n        id: \"date-picker-inline\",\n        label: \"Registration end date\",\n        value: selectedDate3,\n        onChange: handleDateChange3,\n        KeyboardButtonProps: {\n          'aria-label': 'change date'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"default\",\n      className: classes.button,\n      startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 24\n      }, this) // onChange={(e) => terms=e.target.value}\n      ,\n      children: \"Upload Terms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \" Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 13\n  }, this); //submit!!!!\n  //לבדוק שהתאריכים תקינים\n  //סיום ההרשמה ולפני ביצוע ההגרלות\n};\n\n_s(AuctionInformation, \"gbrBYd12ph21WEv3C6Tu0B5GtqA=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = AuctionInformation;\n\nconst mapStateToProps = state => {\n  return {\n    auctionId: state.auction.newAuction._id\n  };\n};\n\nexport default connect(mapStateToProps, {\n  /*setNewAuction*/\n})(AuctionInformation);\n\nvar _c;\n\n$RefreshReg$(_c, \"AuctionInformation\");","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/project-good/project/client/src/components/new auction/AuctionInformation.js"],"names":["React","useEffect","connect","makeStyles","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","Button","CloudUploadIcon","saveAuctionInformationInDB","useForm","TextField","Alert","useStyles","theme","root","margin","spacing","width","AuctionInformation","props","submit","data","e","preventDefault","details","registrationStartDate","Date","registrationEndDate","lotteriesDate","name","console","log","auctionId","classes","selectedDate1","setSelectedDate1","useState","selectedDate2","setSelectedDate2","selectedDate3","setSelectedDate3","setName","handleDateChange1","date","handleDateChange2","handleDateChange3","register","handleSubmit","formState","errors","terms","required","button","mapStateToProps","state","auction","newAuction","_id"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './NewAuction.scss'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { saveAuctionInformationInDB } from '../../utils/newAuctionUtils';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { TextField } from \"@mui/material\";\r\nimport Alert from '@mui/material/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '40%',\r\n            // outerHeight:'70%'\r\n        },\r\n    },\r\n}));\r\n\r\nconst AuctionInformation = (props) => {\r\n    let submit = (data, e) => {\r\n        debugger;\r\n        e.preventDefault();\r\n        // details.registrationStartDate = selectedDate2;\r\n        // details.registrationEndDate = selectedDate3;\r\n        // details.lotteriesDate = selectedDate1;\r\n        // details.name = name;\r\n        debugger;\r\n        details.registrationStartDate = new Date();\r\n        details.registrationEndDate = new Date(31, 1, 2021);\r\n        details.lotteriesDate =new Date(1, 12, 2021);\r\n        details.name = data.name;\r\n\r\n        console.log(details);\r\n\r\n        console.log(props.auctionId);\r\n        debugger;\r\n        saveAuctionInformationInDB(details)\r\n        // saveAuctionInformationInDB(props.auctionId, details).then(succ => {\r\n        //     console.log(succ.data);\r\n        //     if (succ.status != 400) props.setNewAuction(succ.data)\r\n        // })\r\n\r\n    }\r\n\r\n\r\n    const classes = useStyles();\r\n    const [selectedDate1, setSelectedDate1] = React.useState(null);//lotery\r\n    const [selectedDate2, setSelectedDate2] = React.useState(null);//start\r\n    const [selectedDate3, setSelectedDate3] = React.useState(null);//end\r\n    const [name, setName] = React.useState(null);//end\r\n\r\n    const handleDateChange1 = (date) => { setSelectedDate1(date) };//lotery\r\n    const handleDateChange2 = (date) => { setSelectedDate2(date) };//start\r\n    const handleDateChange3 = (date) => { setSelectedDate3(date) };//end\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n\r\n    let details = {\r\n        registrationStartDate: null,\r\n        registrationEndDate: null,\r\n        lotteriesDate: null,\r\n        terms: \"\",//קובץ תקנון\r\n        name: \"unknown\",\r\n        auctionId: props.auctionId\r\n    }\r\n\r\n\r\n    return (<form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit(submit)}>\r\n        <h1>Auction information</h1>\r\n\r\n        <TextField className=\"txt\" variant=\"standard\"  {...register('name', { required: true })} id=\"input-with-icon-grid\" label=\"Name Auction\" />\r\n        {errors.name && <Alert severity=\"error\">This is an error enter Name (required)</Alert>}\r\n       \r\n\r\n\r\n\r\n        {/* <input type=\"text\" placeholder=\"newAuction.name\" onChange={(e) => { setName(e.target.value) }} /> */}\r\n\r\n\r\n        {/* <MuiPickersUtilsProvider utils={DateFnsUtils} className=\"auctionInformationDate\">\r\n            <KeyboardDatePicker\r\n                disableToolbar\r\n                variant=\"inline\"\r\n                format=\"dd/MM/yyyy\"\r\n                margin=\"normal\"\r\n                id=\"date-picker-inline\"\r\n                label=\"Date of the lottery\"\r\n                value={selectedDate1}\r\n                onChange={handleDateChange1}\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                }}\r\n                {...register('lotteriesDate', { required: true })} id=\"input-with-icon-grid\" label=\"Date of the lottery\"\r\n            />\r\n\r\n        </MuiPickersUtilsProvider> */}\r\n\r\n       <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n                disableToolbar\r\n                variant=\"inline\"\r\n                format=\"dd/MM/yyyy\"\r\n                margin=\"normal\"\r\n                id=\"date-picker-inline\"\r\n                label=\"Registration start date\"\r\n                value={selectedDate2}\r\n                onChange={handleDateChange2}\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                }}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n                disableToolbar\r\n                variant=\"inline\"\r\n                format=\"dd/MM/yyyy\"\r\n                margin=\"normal\"\r\n                id=\"date-picker-inline\"\r\n                label=\"Registration end date\"\r\n                value={selectedDate3}\r\n                onChange={handleDateChange3}\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                }}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n\r\n\r\n\r\n\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n            className={classes.button}\r\n            startIcon={<CloudUploadIcon />}\r\n        // onChange={(e) => terms=e.target.value}\r\n        >\r\n            Upload Terms\r\n        </Button>\r\n        \r\n\r\n        <button type=\"submit\"> Save</button>\r\n\r\n    </form >);\r\n    //submit!!!!\r\n    //לבדוק שהתאריכים תקינים\r\n    //סיום ההרשמה ולפני ביצוע ההגרלות\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auctionId: state.auction.newAuction._id\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { /*setNewAuction*/ })(AuctionInformation);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}