{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\auction\\\\Clock.js\";\nimport { connect } from \"react-redux\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    let fixDate = new Date(12, 8, 2021); // עד איזה זמן\n\n    let currDate = new Date(); // מה הזמן כעת\n\n    let secs = Math.floor((fixDate - currDate) / 1000);\n    let mins = Math.floor(secs / 60);\n    let hours = Math.floor(mins / 60);\n    let days = Math.floor(hours / 24);\n    this.state = {\n      fixDate,\n      currDate,\n      secs,\n      mins,\n      hours,\n      days\n    };\n  }\n\n  tick() {\n    //מעדכנת את הסטייט\n    this.setState((prevState, props) => ({\n      diff: prevState.fixDate - new Date().getTime()\n    }));\n  }\n\n  componentDidMount() {\n    //כשהקומפוננטה נטענת נגדיר את פונ' טיק שתתבצע כל שניה\n    this.interval = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    //כשהקומפוננטה נסגרת נעצור את פעילות הפונ' טיק\n    clearInterval(this.interval);\n  }\n\n  render() {\n    let {\n      diff\n    } = this.state;\n    let {\n      fixDate\n    } = this.state;\n    let {\n      currDate\n    } = this.state;\n    let {\n      secs\n    } = this.state;\n    let {\n      mins\n    } = this.state;\n    let {\n      hours\n    } = this.state;\n    let {\n      days\n    } = this.state;\n    hours = hours - days * 24;\n    mins = mins - days * 24 * 60 - hours * 60;\n    secs = secs - days * 24 * 60 * 60 - hours * 60 * 60 - mins * 60;\n\n    if (diff <= 0) {\n      clearInterval(this.interval); //00:אם יעשו ריענון כשהשעון שלילי נרצה שיציג 00:00:00\n\n      days = 0;\n      hours = 0;\n      mins = 0;\n      secs = 0;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [days, \":\", String(hours).padStart(2, '0'), \":\", String(mins).padStart(2, '0'), \":\", String(secs).padStart(2, '0')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    theDate: state.currentAuction.registrationEndDate\n  };\n};\n\nexport default connect(mapStateToProps, {})(Clock);","map":{"version":3,"sources":["D:/project-good/project/client/src/components/auction/Clock.js"],"names":["connect","React","Clock","Component","constructor","props","fixDate","Date","currDate","secs","Math","floor","mins","hours","days","state","tick","setState","prevState","diff","getTime","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","String","padStart","mapStateToProps","theDate","currentAuction","registrationEndDate"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\r\nimport React from \"react\";\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let fixDate = new Date(12, 8, 2021);// עד איזה זמן\r\n        let currDate = new Date();// מה הזמן כעת\r\n        let secs = Math.floor((fixDate - (currDate)) / 1000);\r\n        let mins = Math.floor(secs / 60);\r\n        let hours = Math.floor(mins / 60);\r\n        let days = Math.floor(hours / 24);\r\n        this.state = { fixDate, currDate, secs, mins, hours, days };\r\n    }\r\n\r\n    tick() {\r\n        //מעדכנת את הסטייט\r\n        this.setState((prevState, props) => ({\r\n            diff: prevState.fixDate - (new Date()).getTime(),\r\n        }));\r\n    }\r\n    componentDidMount() {\r\n        //כשהקומפוננטה נטענת נגדיר את פונ' טיק שתתבצע כל שניה\r\n        this.interval = setInterval(() => this.tick(), 1000);\r\n    }\r\n    componentWillUnmount() {\r\n        //כשהקומפוננטה נסגרת נעצור את פעילות הפונ' טיק\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let { diff } = this.state;\r\n        let { fixDate } = this.state;\r\n        let { currDate } = this.state;\r\n        let { secs } = this.state;\r\n        let { mins } = this.state;\r\n        let { hours } = this.state;\r\n        let { days } = this.state;\r\n\r\n        hours = hours - (days * 24);\r\n        mins = mins - (days * 24 * 60) - (hours * 60);\r\n        secs = secs - (days * 24 * 60 * 60) - (hours * 60 * 60) - (mins * 60);\r\n\r\n        if (diff <= 0) {\r\n            clearInterval(this.interval);\r\n            //00:אם יעשו ריענון כשהשעון שלילי נרצה שיציג 00:00:00\r\n            days = 0; hours = 0; mins = 0; secs = 0;\r\n        }\r\n        return (\r\n            <div>\r\n                <h2>{days}:{String(hours).padStart(2, '0')}:{String(mins).padStart(2, '0')}:{String(secs).padStart(2, '0')}</h2>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        theDate: state.currentAuction.registrationEndDate\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(Clock);"]},"metadata":{},"sourceType":"module"}