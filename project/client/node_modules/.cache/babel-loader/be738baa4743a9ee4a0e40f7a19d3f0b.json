{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\new auction\\\\OrganizationInformation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { setNewAuction } from '../../store/actions/newAuction';\nimport { saveOrganizationInformationInDB } from '../../utils/newAuctionUtils';\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrganizationInformation = props => {\n  _s();\n\n  let organizationName = \"\";\n  let organizationText = \"\";\n  let organizationPhotos = [];\n  useEffect(() => {// componentWillUnmount\n    // if (props.currentUser == null && localStorage.getItem(\"login\") == \"true\")\n    //     props.signIn(localStorage.getItem(\"pass\"), localStorage.getItem(\"email\"));\n    // else if (props.currentUser == null && localStorage.getItem(\"login\") == \"google\")\n    //     props.loginGoogle(localStorage.getItem(\"name\"), localStorage.getItem(\"email\"))\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" The organization name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => organizationName = e.target.value,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"area\", {\n      onChange: e => organizationText = e.target.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Upload photos of the organization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"upload photos\",\n      onChange: e => {\n        organizationPhotos.push(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"save organization information\",\n      onClick: saveOrganizationInformationInDB().then(succ => {\n        console.log(succ.data);\n        if (succ.status != 400) dispatch(console.log(succ.data), setNewAuction(succ.data));\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }, this);\n}; //submit!!!!\n\n\n_s(OrganizationInformation, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = OrganizationInformation;\n\nconst mapStateToProps = state => {\n  return {\n    auctionId: state.auction.newAuction._id\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setOrganizationPhotos,\n  setOrganizationName,\n  setOrganizationText\n})(OrganizationInformation);\n\nvar _c;\n\n$RefreshReg$(_c, \"OrganizationInformation\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/new auction/OrganizationInformation.js"],"names":["React","useEffect","setNewAuction","saveOrganizationInformationInDB","connect","OrganizationInformation","props","organizationName","organizationText","organizationPhotos","e","target","value","push","then","succ","console","log","data","status","dispatch","mapStateToProps","state","auctionId","auction","newAuction","_id","setOrganizationPhotos","setOrganizationName","setOrganizationText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,+BAAT,QAAgD,6BAAhD;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,uBAAuB,GAAIC,KAAD,IAAW;AAAA;;AACvC,MAAIC,gBAAgB,GAAG,EAAvB;AACA,MAAIC,gBAAgB,GAAG,EAAvB;AACA,MAAIC,kBAAkB,GAAG,EAAzB;AAEAR,EAAAA,SAAS,CAAC,MAAM,CAAE;AACd;AACA;AACA;AACA;AAEH,GANQ,CAAT;AAQA,sBAAQ;AAAA,4BAGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHI,eAIJ;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAGS,CAAD,IAAOH,gBAAgB,GAAGG,CAAC,CAACC,MAAF,CAASC,KAAhE;AAAuE,MAAA,QAAQ,EAAE;AAAjF;AAAA;AAAA;AAAA;AAAA,YAJI,eAKJ;AAAM,MAAA,QAAQ,EAAGF,CAAD,IAAOF,gBAAgB,GAAGE,CAAC,CAACC,MAAF,CAASC;AAAnD;AAAA;AAAA;AAAA;AAAA,YALI,eAOJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPI,eASJ;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,eAA3B;AAA2C,MAAA,QAAQ,EAAGF,CAAD,IAAO;AAAED,QAAAA,kBAAkB,CAACI,IAAnB,CAAwBH,CAAC,CAACC,MAAF,CAASC,KAAjC;AAAyC;AAAvG;AAAA;AAAA;AAAA;AAAA,YATI,eAUJ;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,+BAA3B;AAA2D,MAAA,OAAO,EAC9DT,+BAA+B,GAE1BW,IAFL,CAEUC,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB;AACA,YAAIH,IAAI,CAACI,MAAL,IAAe,GAAnB,EACIC,QAAQ,CAACJ,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB,CAAD,EAAyBhB,aAAa,CAACa,IAAI,CAACG,IAAN,CAAtC,CAAR;AACP,OANL;AADJ;AAAA;AAAA;AAAA;AAAA,YAVI;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAoBH,CAjCD,C,CAkCA;;;GAlCMb,uB;;KAAAA,uB;;AAmCN,MAAMgB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,SAAS,EAAED,KAAK,CAACE,OAAN,CAAcC,UAAd,CAAyBC;AADjC,GAAP;AAGH,CAJD;;AAKA,eAAetB,OAAO,CAACiB,eAAD,EAAkB;AAAEM,EAAAA,qBAAF;AAAyBC,EAAAA,mBAAzB;AAA8CC,EAAAA;AAA9C,CAAlB,CAAP,CAA8FxB,uBAA9F,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { setNewAuction } from '../../store/actions/newAuction';\r\nimport { saveOrganizationInformationInDB } from '../../utils/newAuctionUtils';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst OrganizationInformation = (props) => {\r\n    let organizationName = \"\";\r\n    let organizationText = \"\";\r\n    let organizationPhotos = [];\r\n\r\n    useEffect(() => { // componentWillUnmount\r\n        // if (props.currentUser == null && localStorage.getItem(\"login\") == \"true\")\r\n        //     props.signIn(localStorage.getItem(\"pass\"), localStorage.getItem(\"email\"));\r\n        // else if (props.currentUser == null && localStorage.getItem(\"login\") == \"google\")\r\n        //     props.loginGoogle(localStorage.getItem(\"name\"), localStorage.getItem(\"email\"))\r\n\r\n    });\r\n\r\n    return (<form>\r\n        {/* <TextField id=\"standard-basic\" label=\"Dccc\" /> */}\r\n\r\n        <label> The organization name</label>\r\n        <input type=\"text\" onChange={(e) => organizationName = e.target.value} required={true} />\r\n        <area onChange={(e) => organizationText = e.target.value}>\r\n        </area>\r\n        <label>Upload photos of the organization</label>\r\n        {/* לשמור תמונות שהוא מעלה */}\r\n        <input type=\"button\" value=\"upload photos\" onChange={(e) => { organizationPhotos.push(e.target.value) }} />\r\n        <input type=\"button\" value=\"save organization information\" onClick={\r\n            saveOrganizationInformationInDB()\r\n\r\n                .then(succ => {\r\n                    console.log(succ.data);\r\n                    if (succ.status != 400)\r\n                        dispatch(console.log(succ.data), setNewAuction(succ.data));\r\n                })\r\n        } />\r\n    </form>)\r\n}\r\n//submit!!!!\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auctionId: state.auction.newAuction._id\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { setOrganizationPhotos, setOrganizationName, setOrganizationText })(OrganizationInformation);"]},"metadata":{},"sourceType":"module"}