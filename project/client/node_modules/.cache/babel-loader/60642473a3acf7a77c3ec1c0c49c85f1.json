{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\auction\\\\ProductInCart.js\",\n    _s = $RefreshSig$();\n\nimport './Cart.scss';\nimport { Header, Modal } from 'semantic-ui-react';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { updateShoppingCart } from '../../store/actions/user';\nimport { addProductToShoppingCartInDB, deleteProductFromShoppingCartInDB } from '../../utils/userUtils';\nimport deleteIcon from '../../img/icons/dustbin.png';\nimport { connect } from \"react-redux\";\nimport defaultImg from '../../img/picture.png';\nimport { setUserByStorage, setCurrentAuctionByStorage, setNewAuctionByStorage } from '../../store/actions/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 300\n  },\n  media: {\n    height: 160\n  }\n});\n\nconst ProductInCart = props => {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n  useEffect(() => {\n    let id = localStorage.getItem(\"user\");\n\n    if (id && props.currentUser == null) {\n      let a_id = localStorage.getItem(\"currentAuction\");\n      if (a_id) props.setCurrentAuctionByStorage(a_id);\n      props.setUserByStorage(id);\n    }\n  }, []);\n  let image_src = props.productInCart.image || defaultImg;\n  let description = props.productInCart.description;\n  let name = props.productInCart.name;\n  let price = props.productInCart.price;\n  let qty = props.qty;\n  let _id = props.productInCart._id;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    closeIcon: true,\n    open: open,\n    trigger: /*#__PURE__*/_jsxDEV(Card, {\n      className: (classes.root, \"cart-product-in-list\"),\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        style: {\n          color: \"#262b96\"\n        },\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\",\n        style: {\n          color: \"#262b96\"\n        },\n        children: price + \"$\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n        className: classes.media,\n        image: image_src,\n        title: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"qty-container\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          style: {\n            color: \"#262b96\"\n          },\n          onClick: e => {\n            e.stopPropagation();\n            deleteProductFromShoppingCartInDB(props.currentAuction._id, props.currentUser._id, _id, 1).then(succ => {\n              if (succ.status != 400) props.updateShoppingCart(succ.data);\n            });\n          },\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            display: \"inline-block\",\n            fontSize: '2.6vh',\n            color: \"#262b96\"\n          },\n          children: qty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          style: {\n            color: \"#262b96\"\n          },\n          color: \"primary\",\n          onClick: e => {\n            e.stopPropagation();\n            addProductToShoppingCartInDB(props.currentAuction._id, props.currentUser._id, _id, 1).then(succ => {\n              if (succ.status != 400) props.updateShoppingCart(succ.data);\n            });\n          },\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          \"aria-label\": \"delete from shopping cart\",\n          onClick: e => {\n            e.stopPropagation();\n            deleteProductFromShoppingCartInDB(props.currentAuction._id, props.currentUser._id, _id, qty).then(succ => {\n              if (succ.status != 400) props.updateShoppingCart(succ.data);\n            });\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: deleteIcon,\n            className: \"my_icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this),\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image_src,\n        style: {\n          width: '30%',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '2vw',\n          marginTop: '2vh',\n          overflowWrap: 'break-word'\n        },\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductInCart, \"0uQrkGr59TIxYZN9au5zCd6fxGs=\", false, function () {\n  return [useStyles];\n});\n\n_c = ProductInCart;\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.user.currentUser,\n    currentAuction: state.currentAuction.currentAuction\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setNewAuctionByStorage,\n  setCurrentAuctionByStorage,\n  setUserByStorage,\n  updateShoppingCart\n})(ProductInCart);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductInCart\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/auction/ProductInCart.js"],"names":["Header","Modal","IconButton","AddShoppingCartIcon","useEffect","useState","makeStyles","Card","CardMedia","Typography","React","updateShoppingCart","addProductToShoppingCartInDB","deleteProductFromShoppingCartInDB","deleteIcon","connect","defaultImg","setUserByStorage","setCurrentAuctionByStorage","setNewAuctionByStorage","useStyles","root","maxWidth","media","height","ProductInCart","props","open","setOpen","classes","id","localStorage","getItem","currentUser","a_id","image_src","productInCart","image","description","name","price","qty","_id","color","e","stopPropagation","currentAuction","then","succ","status","data","display","fontSize","width","marginLeft","marginTop","overflowWrap","mapStateToProps","state","user"],"mappings":";;;AAAA,OAAO,aAAP;AACA,SAASA,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,0BAAnC;AACA,SAASC,4BAAT,EAAuCC,iCAAvC,QAAgF,uBAAhF;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,gBAAT,EAA2BC,0BAA3B,EAAuDC,sBAAvD,QAAqF,0BAArF;;AAEA,MAAMC,SAAS,GAAGd,UAAU,CAAC;AACzBe,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR,GADmB;AAIzBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAE;AADL;AAJkB,CAAD,CAA5B;;AASA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,KAAK,CAACL,QAAN,CAAe,KAAf,CAAxB;AACA,QAAMwB,OAAO,GAAGT,SAAS,EAAzB;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI0B,EAAE,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAT;;AACA,QAAIF,EAAE,IAAIJ,KAAK,CAACO,WAAN,IAAqB,IAA/B,EAAqC;AACjC,UAAIC,IAAI,GAAGH,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX;AACA,UAAIE,IAAJ,EAAUR,KAAK,CAACR,0BAAN,CAAiCgB,IAAjC;AACVR,MAAAA,KAAK,CAACT,gBAAN,CAAuBa,EAAvB;AACH;AACJ,GAPQ,EAON,EAPM,CAAT;AASA,MAAIK,SAAS,GAAGT,KAAK,CAACU,aAAN,CAAoBC,KAApB,IAA6BrB,UAA7C;AACA,MAAIsB,WAAW,GAAGZ,KAAK,CAACU,aAAN,CAAoBE,WAAtC;AACA,MAAIC,IAAI,GAAGb,KAAK,CAACU,aAAN,CAAoBG,IAA/B;AACA,MAAIC,KAAK,GAAGd,KAAK,CAACU,aAAN,CAAoBI,KAAhC;AACA,MAAIC,GAAG,GAAGf,KAAK,CAACe,GAAhB;AACA,MAAIC,GAAG,GAAGhB,KAAK,CAACU,aAAN,CAAoBM,GAA9B;AAEA,sBACI,QAAC,KAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,IAAI,EAAEf,IAFV;AAGI,IAAA,OAAO,eACH,QAAC,IAAD;AAAM,MAAA,SAAS,GAAEE,OAAO,CAACR,IAAR,EAAc,sBAAhB,CAAf;AAAA,8BAEI;AAAS,QAAA,KAAK,EAAE;AAAEsB,UAAAA,KAAK,EAAE;AAAT,SAAhB;AAAA,kBAAuCJ;AAAvC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,UAAD;AAAY,QAAA,YAAY,MAAxB;AAAyB,QAAA,OAAO,EAAC,IAAjC;AAAsC,QAAA,SAAS,EAAC,IAAhD;AAAqD,QAAA,KAAK,EAAE;AAAEI,UAAAA,KAAK,EAAE;AAAT,SAA5D;AAAA,kBAAmFH,KAAK,GAAG;AAA3F;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,SAAD;AAAW,QAAA,SAAS,EAAEX,OAAO,CAACN,KAA9B;AAAqC,QAAA,KAAK,EAAEY,SAA5C;AAAuD,QAAA,KAAK,EAAEI;AAA9D;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAK,QAAA,SAAS,EAAE,eAAhB;AAAA,gCAEI,QAAC,UAAD;AACI,UAAA,KAAK,EAAC,SADV;AAEI,UAAA,KAAK,EAAE;AAAEI,YAAAA,KAAK,EAAE;AAAT,WAFX;AAGI,UAAA,OAAO,EAAGC,CAAD,IAAO;AACZA,YAAAA,CAAC,CAACC,eAAF;AACAhC,YAAAA,iCAAiC,CAACa,KAAK,CAACoB,cAAN,CAAqBJ,GAAtB,EAA2BhB,KAAK,CAACO,WAAN,CAAkBS,GAA7C,EAAkDA,GAAlD,EAAuD,CAAvD,CAAjC,CAA2FK,IAA3F,CAAgGC,IAAI,IAAI;AACpG,kBAAIA,IAAI,CAACC,MAAL,IAAe,GAAnB,EAAwBvB,KAAK,CAACf,kBAAN,CAAyBqC,IAAI,CAACE,IAA9B;AAC3B,aAFD;AAGH,WARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAaI;AAAI,UAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAE,cAAX;AAA2BC,YAAAA,QAAQ,EAAE,OAArC;AAA8CT,YAAAA,KAAK,EAAE;AAArD,WAAX;AAAA,oBAA8EF;AAA9E;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAeI,QAAC,UAAD;AACI,UAAA,KAAK,EAAE;AAAEE,YAAAA,KAAK,EAAE;AAAT,WADX;AAEI,UAAA,KAAK,EAAC,SAFV;AAGI,UAAA,OAAO,EAAGC,CAAD,IAAO;AACZA,YAAAA,CAAC,CAACC,eAAF;AACAjC,YAAAA,4BAA4B,CAACc,KAAK,CAACoB,cAAN,CAAqBJ,GAAtB,EAA2BhB,KAAK,CAACO,WAAN,CAAkBS,GAA7C,EAAkDA,GAAlD,EAAuD,CAAvD,CAA5B,CAAsFK,IAAtF,CAA2FC,IAAI,IAAI;AAC/F,kBAAIA,IAAI,CAACC,MAAL,IAAe,GAAnB,EAAwBvB,KAAK,CAACf,kBAAN,CAAyBqC,IAAI,CAACE,IAA9B;AAC3B,aAFD;AAGH,WARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ,eA0BI,QAAC,UAAD;AACI,UAAA,KAAK,EAAC,SADV;AAEI,wBAAW,2BAFf;AAGI,UAAA,OAAO,EAAGN,CAAD,IAAO;AACZA,YAAAA,CAAC,CAACC,eAAF;AACAhC,YAAAA,iCAAiC,CAACa,KAAK,CAACoB,cAAN,CAAqBJ,GAAtB,EAA2BhB,KAAK,CAACO,WAAN,CAAkBS,GAA7C,EAAkDA,GAAlD,EAAuDD,GAAvD,CAAjC,CAA6FM,IAA7F,CAAkGC,IAAI,IAAI;AACtG,kBAAIA,IAAI,CAACC,MAAL,IAAe,GAAnB,EAAwBvB,KAAK,CAACf,kBAAN,CAAyBqC,IAAI,CAACE,IAA9B;AAC3B,aAFD;AAGH,WARL;AAAA,iCASI;AAAK,YAAA,GAAG,EAAEpC,UAAV;AAAsB,YAAA,SAAS,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,gBA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJR;AAmDI,IAAA,OAAO,EAAE,MAAMc,OAAO,CAAC,KAAD,CAnD1B;AAoDI,IAAA,MAAM,EAAE,MAAMA,OAAO,CAAC,IAAD,CApDzB;AAAA,4BAuDI,QAAC,MAAD;AAAA,6BAAS;AAAA,kBAAKW;AAAL;AAAA;AAAA;AAAA;AAAA;AAAT;AAAA;AAAA;AAAA;AAAA,YAvDJ,eAwDI,QAAC,KAAD,CAAO,OAAP;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEJ,SAAV;AAAqB,QAAA,KAAK,EAAE;AAAEkB,UAAAA,KAAK,EAAE,KAAT;AAAgB7B,UAAAA,MAAM,EAAE;AAAxB;AAA5B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,KAAK,EAAE;AAAE8B,UAAAA,UAAU,EAAE,KAAd;AAAqBC,UAAAA,SAAS,EAAE,KAAhC;AAAuCC,UAAAA,YAAY,EAAE;AAArD,SAAZ;AAAA,kBAAkFlB;AAAlF;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAxDJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgEH,CAnFD;;GAAMb,a;UAEcL,S;;;KAFdK,a;;AAqFN,MAAMgC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHzB,IAAAA,WAAW,EAAEyB,KAAK,CAACC,IAAN,CAAW1B,WADrB;AAEHa,IAAAA,cAAc,EAAEY,KAAK,CAACZ,cAAN,CAAqBA;AAFlC,GAAP;AAIH,CALD;;AAMA,eAAe/B,OAAO,CAAC0C,eAAD,EAAkB;AAAEtC,EAAAA,sBAAF;AAA0BD,EAAAA,0BAA1B;AAAsDD,EAAAA,gBAAtD;AAAwEN,EAAAA;AAAxE,CAAlB,CAAP,CAAuHc,aAAvH,CAAf","sourcesContent":["import './Cart.scss';\r\nimport { Header, Modal } from 'semantic-ui-react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React from 'react';\r\nimport { updateShoppingCart } from '../../store/actions/user';\r\nimport { addProductToShoppingCartInDB, deleteProductFromShoppingCartInDB } from '../../utils/userUtils';\r\nimport deleteIcon from '../../img/icons/dustbin.png'\r\nimport { connect } from \"react-redux\";\r\nimport defaultImg from '../../img/picture.png'\r\nimport { setUserByStorage, setCurrentAuctionByStorage, setNewAuctionByStorage } from '../../store/actions/user';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 300,\r\n    },\r\n    media: {\r\n        height: 160\r\n    },\r\n});\r\n\r\nconst ProductInCart = (props) => {\r\n    const [open, setOpen] = React.useState(false)\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        let id = localStorage.getItem(\"user\");\r\n        if (id && props.currentUser == null) {\r\n            let a_id = localStorage.getItem(\"currentAuction\");\r\n            if (a_id) props.setCurrentAuctionByStorage(a_id);\r\n            props.setUserByStorage(id);\r\n        }\r\n    }, [])\r\n\r\n    let image_src = props.productInCart.image || defaultImg;\r\n    let description = props.productInCart.description;\r\n    let name = props.productInCart.name;\r\n    let price = props.productInCart.price;\r\n    let qty = props.qty;\r\n    let _id = props.productInCart._id;\r\n\r\n    return (\r\n        <Modal\r\n            closeIcon\r\n            open={open}\r\n            trigger={\r\n                <Card className={classes.root, \"cart-product-in-list\"} >\r\n\r\n                    <center  style={{ color: \"#262b96\" }}>{name}</center>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{ color: \"#262b96\" }}>{price + \"$\"}</Typography>\r\n                    <CardMedia className={classes.media} image={image_src} title={name} />\r\n\r\n\r\n                    <div className={\"qty-container\"}>\r\n\r\n                        <IconButton\r\n                            color=\"primary\"\r\n                            style={{ color: \"#262b96\" }}\r\n                            onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                deleteProductFromShoppingCartInDB(props.currentAuction._id, props.currentUser._id, _id, 1).then(succ => {\r\n                                    if (succ.status != 400) props.updateShoppingCart(succ.data);\r\n                                })\r\n                            }} >-\r\n                        </IconButton>\r\n\r\n                        <h2 style={{ display: \"inline-block\", fontSize: '2.6vh', color: \"#262b96\" }}>{qty}</h2>\r\n\r\n                        <IconButton\r\n                            style={{ color: \"#262b96\" }}\r\n                            color=\"primary\"\r\n                            onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                addProductToShoppingCartInDB(props.currentAuction._id, props.currentUser._id, _id, 1).then(succ => {\r\n                                    if (succ.status != 400) props.updateShoppingCart(succ.data);\r\n                                })\r\n                            }}>+\r\n                        </IconButton>\r\n\r\n                        <IconButton\r\n                            color=\"primary\"\r\n                            aria-label=\"delete from shopping cart\"\r\n                            onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                deleteProductFromShoppingCartInDB(props.currentAuction._id, props.currentUser._id, _id, qty).then(succ => {\r\n                                    if (succ.status != 400) props.updateShoppingCart(succ.data);\r\n                                })\r\n                            }}>\r\n                            <img src={deleteIcon} className=\"my_icon\" />\r\n                        </IconButton>\r\n                    </div>\r\n\r\n                </Card>}\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n        >\r\n\r\n            <Header ><h1>{name}</h1></Header>\r\n            <Modal.Content>\r\n                <img src={image_src} style={{ width: '30%', height: 'auto' }} />\r\n                <div style={{ marginLeft: '2vw', marginTop: '2vh', overflowWrap: 'break-word' }}>{description}</div>\r\n            </Modal.Content>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentUser: state.user.currentUser,\r\n        currentAuction: state.currentAuction.currentAuction\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { setNewAuctionByStorage, setCurrentAuctionByStorage, setUserByStorage, updateShoppingCart })(ProductInCart);\r\n"]},"metadata":{},"sourceType":"module"}