{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\user\\\\site manager\\\\SiteManagerTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport './siteManager.scss';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Link } from 'react-router-dom';\nimport { setSelectedAuctionToOptions } from '../../../store/actions/auctionManager';\nimport IconButton from '@material-ui/core/IconButton';\nimport st from '../../../img/icons/statistics.png';\nimport results from '../../../img/icons/results.png';\nimport con from '../../../img/icons/continue.png';\nimport { setUserByStorage } from '../../../store/actions/user';\nimport { getAllAuctionsFromDB } from '../../../store/actions/siteManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    width: '90%',\n    marginBottom: '15vh'\n  },\n  container: {\n    maxHeight: 440\n  },\n  switchBase: {\n    color: \"#262b96\",\n    \"&$checked\": {\n      color: \"#262b96\"\n    },\n    \"&$checked + $track\": {\n      backgroundColor: \"#262b96\"\n    }\n  },\n  checked: {},\n  track: {}\n});\n\nconst SiteManagerTable = props => {\n  _s();\n\n  useEffect(() => {\n    let id = localStorage.getItem(\"user\");\n    if (id && props.currentUser == null) props.setUserByStorage(id);\n  }, []);\n  useEffect(() => {\n    if (props.auctions && props.auctions.length) {\n      let tmp = [];\n      props.auctions.map(a => {\n        tmp.push(createData(a));\n      });\n      setMyAuctions(tmp);\n    }\n  }, [props.auctions]);\n  useEffect(() => {\n    if (props.currentUser) props.getAllAuctionsFromDB(props.currentUser._id); //also set props.auctions \n  }, [props.currentUser]);\n  const [myAuctions, setMyAuctions] = React.useState([]);\n  const columns = [{\n    id: 'auctionName',\n    label: 'Auction Name',\n    align: 'left',\n    minWidth: 101\n  }, {\n    id: 'oName',\n    label: 'Organization Name',\n    align: 'left',\n    minWidth: 101\n  }, {\n    id: 'managerName',\n    label: 'Manager Name',\n    align: 'left',\n    minWidth: 101\n  }, {\n    id: 'managerEmail',\n    label: 'Manager Email',\n    align: 'left',\n    minWidth: 101\n  }, {\n    id: 'status',\n    label: \"Status\",\n    align: 'left',\n    minWidth: 26\n  }, {\n    id: 'published',\n    label: \"Published\",\n    align: 'left',\n    minWidth: 26\n  }, {\n    id: 'lotteriesDate',\n    label: 'Lotteries date',\n    minWidth: 150,\n    align: 'left'\n  }, {\n    id: 'approval',\n    label: 'Lottery Approval',\n    minWidth: 70,\n    align: 'left',\n    format: value => value.toFixed(2)\n  }, {\n    id: 'total',\n    label: 'Total revenue',\n    minWidth: 70,\n    align: 'left',\n    format: value => value.toFixed(2)\n  }, {\n    id: 'op',\n    label: 'Options',\n    minWidth: 120,\n    align: 'left',\n    format: value => value.toFixed(2)\n  }];\n\n  function createData(a) {\n    let auctionName = a.name;\n    let oName = a.organizationName;\n    let managerName = a.auctionManager.userName;\n    let managerEmail = a.auctionManager.email;\n    let status = a.status.replace(/_/g, \" \");\n    let published = a.publicationApproval;\n    let lotteriesDate = a.lotteriesDate ? moment(new Date(a.lotteriesDate)).format('D/MM/YYYY') : \"\";\n    let approval = a.lotteryApproval.toString();\n    let total = 0;\n    let isDone = a.status == \"DONE\";\n\n    let op = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"optionsBtnsDiv\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        onClick: () => props.setSelectedAuctionToOptions(a),\n        to: isDone ? `/your_profile/results` : '#',\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          title: \"Results\",\n          disabled: !isDone,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"my_icon\",\n            src: results\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 163\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 116\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        onClick: () => props.setSelectedAuctionToOptions(a),\n        to: `/your_profile/statistics`,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          title: \"Statistics\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"my_icon\",\n            src: st\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 135\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 104\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        onClick: () => props.getAuctionFromDB(a._id),\n        to: `/auction`,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          title: \"Statistics\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"my_icon\",\n            src: con\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 112\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 81\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 18\n    }, this);\n\n    return {\n      auctionName,\n      oName,\n      managerName,\n      managerEmail,\n      status,\n      published,\n      lotteriesDate,\n      approval,\n      total,\n      op\n    };\n  }\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"#262b96\"\n      },\n      children: \"Site Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            className: \"auctionManagerTableCls\",\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: column.align,\n                style: {\n                  minWidth: column.minWidth,\n                  color: \"#262b96\",\n                  fontWeight: 'bold'\n                },\n                children: column.label\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: myAuctions && myAuctions.length > 0 && myAuctions.map(row => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                tabIndex: -1,\n                children: columns.map(column => {\n                  const value = row[column.id];\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: column.align,\n                    children: column.format && typeof value === 'number' ? column.format(value) : value\n                  }, column.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, row.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SiteManagerTable, \"8KiC1cy1NK+k3X2RCob4Gkfn9yE=\", false, function () {\n  return [useStyles];\n});\n\n_c = SiteManagerTable;\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.user.currentUser,\n    auctions: state.siteManager.auctions\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAllAuctionsFromDB,\n  setUserByStorage,\n  setSelectedAuctionToOptions\n})(SiteManagerTable);\n\nvar _c;\n\n$RefreshReg$(_c, \"SiteManagerTable\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/user/site manager/SiteManagerTable.js"],"names":["React","useEffect","connect","moment","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Link","setSelectedAuctionToOptions","IconButton","st","results","con","setUserByStorage","getAllAuctionsFromDB","useStyles","root","width","marginBottom","container","maxHeight","switchBase","color","backgroundColor","checked","track","SiteManagerTable","props","id","localStorage","getItem","currentUser","auctions","length","tmp","map","a","push","createData","setMyAuctions","_id","myAuctions","useState","columns","label","align","minWidth","format","value","toFixed","auctionName","name","oName","organizationName","managerName","auctionManager","userName","managerEmail","email","status","replace","published","publicationApproval","lotteriesDate","Date","approval","lotteryApproval","toString","total","isDone","op","getAuctionFromDB","classes","column","fontWeight","row","code","mapStateToProps","state","user","siteManager"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment'\r\nimport './siteManager.scss'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Link } from 'react-router-dom';\r\nimport { setSelectedAuctionToOptions } from '../../../store/actions/auctionManager'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport st from '../../../img/icons/statistics.png'\r\nimport results from '../../../img/icons/results.png'\r\nimport con from '../../../img/icons/continue.png'\r\nimport { setUserByStorage } from '../../../store/actions/user';\r\nimport {getAllAuctionsFromDB}from '../../../store/actions/siteManager'\r\n\r\nconst useStyles = makeStyles({\r\n    root: { width: '90%', marginBottom: '15vh' },\r\n    container: { maxHeight: 440, },\r\n    switchBase: {\r\n        color: \"#262b96\",\r\n        \"&$checked\": {\r\n            color: \"#262b96\"\r\n        },\r\n        \"&$checked + $track\": {\r\n            backgroundColor: \"#262b96\"\r\n        },\r\n\r\n    },\r\n    checked: {},\r\n    track: {}\r\n});\r\n\r\nconst SiteManagerTable = (props) => {\r\n\r\n    useEffect(() => {\r\n        let id = localStorage.getItem(\"user\");\r\n        if (id && props.currentUser == null) props.setUserByStorage(id)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (props.auctions && props.auctions.length) {\r\n            let tmp = [];\r\n            props.auctions.map(a => { tmp.push(createData(a)) })\r\n            setMyAuctions(tmp);\r\n        }\r\n    }, [props.auctions])\r\n\r\n    useEffect(() => {\r\n        if (props.currentUser) props.getAllAuctionsFromDB(props.currentUser._id);//also set props.auctions \r\n    }, [props.currentUser])\r\n\r\n    const [myAuctions, setMyAuctions] = React.useState([]);\r\n\r\n    const columns = [\r\n        { id: 'auctionName', label: 'Auction Name', align: 'left', minWidth: 101 },\r\n        { id: 'oName', label: 'Organization Name', align: 'left', minWidth: 101 },\r\n        { id: 'managerName', label: 'Manager Name', align: 'left', minWidth: 101 },\r\n        { id: 'managerEmail', label: 'Manager Email', align: 'left', minWidth: 101 },\r\n        { id: 'status', label: \"Status\", align: 'left', minWidth: 26 },\r\n        { id: 'published', label: \"Published\", align: 'left', minWidth: 26 },\r\n        { id: 'lotteriesDate', label: 'Lotteries date', minWidth: 150, align: 'left', },\r\n        { id: 'approval', label: 'Lottery Approval', minWidth: 70, align: 'left', format: (value) => value.toFixed(2) },\r\n        { id: 'total', label: 'Total revenue', minWidth: 70, align: 'left', format: (value) => value.toFixed(2) },\r\n        { id: 'op', label: 'Options', minWidth: 120, align: 'left', format: (value) => value.toFixed(2) }\r\n    ];\r\n\r\n    function createData(a) {\r\n        let auctionName = a.name;\r\n        let oName = a.organizationName;\r\n        let managerName = a.auctionManager.userName;\r\n        let managerEmail = a.auctionManager.email;\r\n        let status = a.status.replace(/_/g, \" \");\r\n        let published = a.publicationApproval;\r\n        let lotteriesDate = a.lotteriesDate ? moment(new Date(a.lotteriesDate)).format('D/MM/YYYY') : \"\";\r\n        let approval = a.lotteryApproval.toString();\r\n        let total = 0;\r\n        let isDone = a.status == \"DONE\";\r\n\r\n        let op = <div className=\"optionsBtnsDiv\">\r\n            <Link onClick={() => props.setSelectedAuctionToOptions(a)} to={isDone ? `/your_profile/results` : '#'}><IconButton title=\"Results\" disabled={!isDone}><img className=\"my_icon\" src={results} ></img></IconButton></Link>\r\n            <Link onClick={() => props.setSelectedAuctionToOptions(a)} to={`/your_profile/statistics`}><IconButton title=\"Statistics\"><img className=\"my_icon\" src={st} ></img></IconButton></Link>\r\n            <Link onClick={() => props.getAuctionFromDB(a._id)} to={`/auction`}><IconButton title=\"Statistics\"><img className=\"my_icon\" src={con} ></img></IconButton></Link>\r\n        </div>\r\n\r\n        return { auctionName, oName, managerName, managerEmail, status, published, lotteriesDate, approval, total, op };\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <center>\r\n            <h1 style={{ color: \"#262b96\" }}>Site Manager</h1>\r\n\r\n            <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead className='auctionManagerTableCls'>\r\n                            <TableRow>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{ minWidth: column.minWidth, color: \"#262b96\", fontWeight: 'bold' }}\r\n                                    >\r\n                                        {column.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {myAuctions && myAuctions.length > 0 && myAuctions.map((row) => {\r\n                                return (\r\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                        {columns.map((column) => {\r\n                                            const value = row[column.id];\r\n                                            return (\r\n                                                <TableCell key={column.id} align={column.align}>\r\n                                                    {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                                </TableCell>\r\n                                            );\r\n                                        })}\r\n\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n            </Paper>\r\n\r\n        </center>);\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.user.currentUser,\r\n        auctions: state.siteManager.auctions\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { getAllAuctionsFromDB, setUserByStorage, setSelectedAuctionToOptions })(SiteManagerTable);\r\n\r\n"]},"metadata":{},"sourceType":"module"}