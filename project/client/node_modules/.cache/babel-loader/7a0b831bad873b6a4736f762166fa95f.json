{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\auction\\\\Clock.js\";\nimport { connect } from \"react-redux\";\nimport ProductInCart from './ProductInCart';\nimport { Link } from 'react-router-dom';\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    let fixDate = new Date().setHours(14, 18, 0); // עד איזה זמן\n\n    let currDate = new Date(); // מה הזמן כעת\n\n    this.state = {\n      fixDate,\n      diff: fixDate - currDate\n    };\n  }\n\n  tick() {\n    //מעדכנת את הסטייט\n    this.setState((prevState, props) => ({\n      diff: prevState.fixDate - new Date().getTime()\n    }));\n  }\n\n  componentDidMount() {\n    //כשהקומפוננטה נטענת נגדיר את פונ' טיק שתתבצע כל שניה\n    this.interval = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    //כשהקומפוננטה נסגרת נעצור את פעילות הפונ' טיק\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const {\n      diff\n    } = this.state;\n    const hours = Math.floor(diff / (60 * 60 * 1000));\n    const mins = Math.floor((diff - hours * 60 * 60 * 1000) / (60 * 1000));\n    const secs = Math.floor((diff - hours * 60 * 60 * 1000 - mins * 60 * 1000) / 1000);\n    if (diff < 0) clearInterval(this.interval);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [hours, \":\", mins, \":\", secs]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {//theDate: state.u\n  };\n};\n\nexport default connect(mapStateToProps, {})(Clock);","map":{"version":3,"sources":["D:/project-good/project/client/src/components/auction/Clock.js"],"names":["connect","ProductInCart","Link","React","Clock","Component","constructor","props","fixDate","Date","setHours","currDate","state","diff","tick","setState","prevState","getTime","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","hours","Math","floor","mins","secs","mapStateToProps"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,QAAIC,OAAO,GAAI,IAAIC,IAAJ,EAAD,CAAaC,QAAb,CAAsB,EAAtB,EAA0B,EAA1B,EAA8B,CAA9B,CAAd,CAFe,CAEiC;;AAChD,QAAIC,QAAQ,GAAG,IAAIF,IAAJ,EAAf,CAHe,CAGW;;AAC1B,SAAKG,KAAL,GAAa;AAAEJ,MAAAA,OAAF;AAAWK,MAAAA,IAAI,EAAEL,OAAO,GAAGG;AAA3B,KAAb;AACH;;AAEDG,EAAAA,IAAI,GAAG;AACH;AACA,SAAKC,QAAL,CAAc,CAACC,SAAD,EAAYT,KAAZ,MAAuB;AACjCM,MAAAA,IAAI,EAAEG,SAAS,CAACR,OAAV,GAAqB,IAAIC,IAAJ,EAAD,CAAaQ,OAAb;AADO,KAAvB,CAAd;AAGH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM,KAAKN,IAAL,EAAP,EAAoB,IAApB,CAA3B;AACH;;AACDO,EAAAA,oBAAoB,GAAG;AACnB;AACAC,IAAAA,aAAa,CAAC,KAAKH,QAAN,CAAb;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEV,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,UAAMY,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWb,IAAI,IAAI,KAAK,EAAL,GAAU,IAAd,CAAf,CAAd;AACA,UAAMc,IAAI,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACb,IAAI,GAAIW,KAAK,GAAG,EAAR,GAAa,EAAb,GAAkB,IAA3B,KAAqC,KAAK,IAA1C,CAAX,CAAb;AACA,UAAMI,IAAI,GAAGH,IAAI,CAACC,KAAL,CAAW,CAACb,IAAI,GAAIW,KAAK,GAAG,EAAR,GAAa,EAAb,GAAkB,IAA1B,GAAmCG,IAAI,GAAG,EAAP,GAAY,IAAhD,IAAyD,IAApE,CAAb;AACA,QAAId,IAAI,GAAG,CAAX,EAAcS,aAAa,CAAC,KAAKH,QAAN,CAAb;AACd,wBACI;AAAA,6BACI;AAAA,mBAAKK,KAAL,OAAaG,IAAb,OAAoBC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAlC+B;;AAqCpC,MAAMC,eAAe,GAAIjB,KAAD,IAAW;AAC/B,SAAO,CACH;AADG,GAAP;AAGH,CAJD;;AAMA,eAAeZ,OAAO,CAAC6B,eAAD,EAAkB,EAAlB,CAAP,CAA6BzB,KAA7B,CAAf","sourcesContent":["import { connect } from \"react-redux\";\r\nimport ProductInCart from './ProductInCart'\r\nimport { Link } from 'react-router-dom';\r\nimport React from \"react\";\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let fixDate = (new Date()).setHours(14, 18, 0); // עד איזה זמן\r\n        let currDate = new Date();// מה הזמן כעת\r\n        this.state = { fixDate, diff: fixDate - currDate };\r\n    }\r\n\r\n    tick() {\r\n        //מעדכנת את הסטייט\r\n        this.setState((prevState, props) => ({\r\n            diff: prevState.fixDate - (new Date()).getTime(),\r\n        }));\r\n    }\r\n    componentDidMount() {\r\n        //כשהקומפוננטה נטענת נגדיר את פונ' טיק שתתבצע כל שניה\r\n        this.interval = setInterval(() => this.tick(), 1000);\r\n    }\r\n    componentWillUnmount() {\r\n        //כשהקומפוננטה נסגרת נעצור את פעילות הפונ' טיק\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    render() {\r\n        const { diff } = this.state;\r\n        const hours = Math.floor(diff / (60 * 60 * 1000));\r\n        const mins = Math.floor((diff - (hours * 60 * 60 * 1000)) / (60 * 1000));\r\n        const secs = Math.floor((diff - (hours * 60 * 60 * 1000) - (mins * 60 * 1000)) / 1000);\r\n        if (diff < 0) clearInterval(this.interval);\r\n        return (\r\n            <div>\r\n                <h2>{hours}:{mins}:{secs}</h2>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        //theDate: state.u\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(Clock);"]},"metadata":{},"sourceType":"module"}