{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\new auction\\\\uploading products\\\\AddProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { addProduct } from \"./../../../store/actions/newAuction\";\nimport { connect } from \"react-redux\";\nimport Uploady from \"@rpldy/uploady\";\nimport UploadButton from \"@rpldy/upload-button\";\nimport UploadPreview from \"@rpldy/upload-preview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddProduct = props => {\n  _s();\n\n  const fileInputRef = useRef(); // const handleChange = (event) => {\n  //     console.log(event.target.files[0].name);\n  // }\n\n  let newProduct = {\n    img: \"\",\n    prodName: \"\",\n    prodDescription: \"\"\n  };\n\n  const filterBySize = file => {\n    inewProduct.img = file.name;\n    return file.size <= 5242880;\n  };\n\n  return props.showSetProduct ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"field\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"product name\",\n        type: \"text\",\n        onChange: e => newProduct.prodName = e.target.value,\n        required: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"product description\",\n        onChange: e => newProduct.prodDescription = e.target.value,\n        required: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Uploady, {\n        destination: {\n          url: \"my-server.com/upload\"\n        },\n        fileFilter: filterBySize,\n        accept: \"image/*\",\n        children: [/*#__PURE__*/_jsxDEV(UploadButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(UploadPreview, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"positive ui button\",\n        type: \"button\",\n        value: \"Add\",\n        onClick: () => {\n          props.addProduct(newProduct);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this) : null;\n};\n\n_s(AddProduct, \"YQqvMxdmg33cmOXmQcOjJm+FLVI=\");\n\n_c = AddProduct;\n\nconst mapStateToProps = state => {\n  return {\n    showSetProduct: state.auction.showSetProduct\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addProduct\n})(AddProduct);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/project-good/project/client/src/components/new auction/uploading products/AddProduct.js"],"names":["React","useRef","addProduct","connect","Uploady","UploadButton","UploadPreview","AddProduct","props","fileInputRef","newProduct","img","prodName","prodDescription","filterBySize","file","inewProduct","name","size","showSetProduct","e","target","value","url","mapStateToProps","state","auction"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,UAAT,QAA2B,qCAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAE1B,QAAMC,YAAY,GAAGR,MAAM,EAA3B,CAF0B,CAI1B;AACA;AAEA;;AACA,MAAIS,UAAU,GAAG;AAAEC,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,QAAQ,EAAE,EAArB;AAAyBC,IAAAA,eAAe,EAAE;AAA1C,GAAjB;;AAEA,QAAMC,YAAY,GAAIC,IAAD,IAAU;AAC3BC,IAAAA,WAAW,CAACL,GAAZ,GAAkBI,IAAI,CAACE,IAAvB;AACA,WAAOF,IAAI,CAACG,IAAL,IAAa,OAApB;AACH,GAHD;;AAIA,SAASV,KAAK,CAACW,cAAP,gBACJ;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACI;AAAA,8BACI;AAAO,QAAA,WAAW,EAAC,cAAnB;AAAkC,QAAA,IAAI,EAAC,MAAvC;AAA8C,QAAA,QAAQ,EAAGC,CAAD,IAAOV,UAAU,CAACE,QAAX,GAAsBQ,CAAC,CAACC,MAAF,CAASC,KAA9F;AAAqG,QAAA,QAAQ,EAAC;AAA9G;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAU,QAAA,WAAW,EAAC,qBAAtB;AACI,QAAA,QAAQ,EAAGF,CAAD,IAAOV,UAAU,CAACG,eAAX,GAA6BO,CAAC,CAACC,MAAF,CAASC,KAD3D;AACkE,QAAA,QAAQ,EAAC;AAD3E;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI,QAAC,OAAD;AACI,QAAA,WAAW,EAAE;AAAEC,UAAAA,GAAG,EAAE;AAAP,SADjB;AAEI,QAAA,UAAU,EAAET,YAFhB;AAGI,QAAA,MAAM,EAAC,SAHX;AAAA,gCAKI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eAyBI;AAAO,QAAA,SAAS,EAAC,oBAAjB;AAAsC,QAAA,IAAI,EAAC,QAA3C;AAAoD,QAAA,KAAK,EAAC,KAA1D;AAAgE,QAAA,OAAO,EAAE,MAAM;AAAEN,UAAAA,KAAK,CAACN,UAAN,CAAiBQ,UAAjB;AAA8B;AAA/G;AAAA;AAAA;AAAA;AAAA,cAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADI,GA8BJ,IA9BJ;AA+BH,CA7CD;;GAAMH,U;;KAAAA,U;;AA8CN,MAAMiB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHN,IAAAA,cAAc,EAAEM,KAAK,CAACC,OAAN,CAAcP;AAD3B,GAAP;AAGH,CAJD;;AAKA,eAAehB,OAAO,CAACqB,eAAD,EAAkB;AAAEtB,EAAAA;AAAF,CAAlB,CAAP,CAAyCK,UAAzC,CAAf","sourcesContent":["import React, { useRef } from 'react';\r\nimport { addProduct } from \"./../../../store/actions/newAuction\";\r\nimport { connect } from \"react-redux\";\r\nimport Uploady from \"@rpldy/uploady\";\r\nimport UploadButton from \"@rpldy/upload-button\";\r\nimport UploadPreview from \"@rpldy/upload-preview\";\r\n\r\nconst AddProduct = (props) => {\r\n\r\n    const fileInputRef = useRef();\r\n\r\n    // const handleChange = (event) => {\r\n    //     console.log(event.target.files[0].name);\r\n\r\n    // }\r\n    let newProduct = { img: \"\", prodName: \"\", prodDescription: \"\" };\r\n\r\n    const filterBySize = (file) => {\r\n        inewProduct.img = file.name;\r\n        return file.size <= 5242880;\r\n    };\r\n    return ((props.showSetProduct) ? (\r\n        <div className=\"field\">\r\n            <form>\r\n                <input placeholder=\"product name\" type=\"text\" onChange={(e) => newProduct.prodName = e.target.value} required=\"true\" />\r\n                <textarea placeholder=\"product description\"\r\n                    onChange={(e) => newProduct.prodDescription = e.target.value} required=\"true\"></textarea>\r\n                {/* כפתור להעלאת תמונה */}\r\n\r\n\r\n\r\n                <Uploady\r\n                    destination={{ url: \"my-server.com/upload\" }}\r\n                    fileFilter={filterBySize}\r\n                    accept=\"image/*\"\r\n                >\r\n                    <UploadButton />\r\n                    <UploadPreview />\r\n                </Uploady>\r\n\r\n\r\n\r\n\r\n\r\n                {/* <input type=\"file\" id=\"file\" style={{display: \"none\"}}/>\r\n                <button onClick={() => fileInputRef.current.click()}> Custom File Input Button</button>\r\n                <input onChange={(e) =>{ newProduct.img = e.target.value ;console.log(e.target.value)}  }  multiple={false} ref={fileInputRef} type='file'/> */}\r\n                {/* hidden  */}\r\n                <input className=\"positive ui button\" type=\"button\" value=\"Add\" onClick={() => { props.addProduct(newProduct) }} />\r\n            </form>\r\n        </div>\r\n    ) : null)\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        showSetProduct: state.auction.showSetProduct\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { addProduct })(AddProduct);"]},"metadata":{},"sourceType":"module"}