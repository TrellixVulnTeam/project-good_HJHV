{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\auction\\\\ProductInCart.js\",\n    _s = $RefreshSig$();\n\n// import './Auction.scss';\n// import { Header, Modal } from 'semantic-ui-react';\n// import p from '../../img/car.jpg';\n// import IconButton from '@material-ui/core/IconButton';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Card from '@material-ui/core/Card';\n// import CardMedia from '@material-ui/core/CardMedia';\n// import Typography from '@material-ui/core/Typography';\n// import { connect } from \"react-redux\";\n// import Button from '@material-ui/core/Button';\n// import { deleteProductFromCart } from '../../store/actions/user';\n// import { setCntOfProductInCart } from '../../store/actions/currentAuction';\n// import React, { useEffect, useState } from 'react';\n// const useStyles = makeStyles({\n//   root: {\n//     maxWidth: 300,\n//   },\n//   media: {\n//     height: 160,\n//   },\n// });\n// const getCnt = (_id) => {\n//   let arr = JSON.parse(localStorage.getItem(\"shoppingCart\"));\n//   if (!arr) return 0;\n//   let index = arr.findIndex(item => item.product_id == _id);\n//   if (index != -1)\n//     return arr[index].cnt;\n//   return 0;\n// }\n// const ProductInCart = (props) => {\n//   const [open, setOpen] = React.useState(false)\n//   const classes = useStyles();\n//   let image_src = p;//עד שנעשה את הקטע של התמונות\n//   let description = props.item.product.description;\n//   let name = props.item.product.name;\n//   let price = props.item.product.prices;\n//   let _id = props.item.product._id;\n//   return (\n//     <Modal\n//       closeIcon\n//       open={open}\n//       trigger={\n//         <Card className={classes.root} >\n//           {name}\n//           <Typography gutterBottom variant=\"h5\" component=\"h2\">\n//             {price}\n//           </Typography>\n//           <CardMedia\n//             className={classes.media}\n//             image={image_src}\n//             title=\"Contemplative Reptile\"\n//           />\n//           <i className=\"trash icon\" onClick={(e) => { e.stopPropagation(); props.deleteProductFromCart(_id) }}></i>\n//           <IconButton color=\"primary\"\n//             onClick={(e) => {\n//               let c = getCnt(_id);\n//               if (c > 0) props.setCntOfProductInCart(_id, c - 1);\n//               e.stopPropagation();\n//             }}  >\n//             -</IconButton>\n//           <h2>{getCnt()}</h2>\n//           <IconButton color=\"primary\"\n//             onClick={(e) => {\n//               let c = getCnt(_id);\n//               props.setCntOfProductInCart(_id, c + 1);\n//               e.stopPropagation();\n//             }}\n//           >+</IconButton>\n//         </Card >}\n//       onClose={() => setOpen(false)}\n//       onOpen={() => setOpen(true)}\n//     >\n//       <Header ><h1>{name}</h1></Header>\n//       <Modal.Content>\n//         {description}<br />\n//         <img src={image_src}></img>\n//       </Modal.Content>\n//     </Modal >\n//   )\n// }\n// const mapStateToProps = state => {\n//   return {\n//     currentUser: state.user.currentUser,\n//     loginIsOpen: state.user.loginIsOpen,\n//     currnetAuction: state.auction\n//   }\n// }\n// export default connect(mapStateToProps, { deleteProductFromCart, })(ProductInCart);\nimport './Cart.scss';\nimport { Header, Modal } from 'semantic-ui-react';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { updateShoppingCart } from '../../store/actions/user';\nimport { addProductToShoppingCartInDB, deleteProductFromShoppingCartInDB } from '../../utils/userUtils';\nimport deleteIcon from '../../img/icons/dustbin.png';\nimport { connect } from \"react-redux\";\nimport defaultImg from '../../img/picture.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 300\n  },\n  media: {\n    height: 160\n  }\n});\n\nconst ProductInCart = props => {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n  let image_src = props.productInCart.image || defaultImg;\n  let description = props.productInCart.description;\n  let name = props.productInCart.name;\n  let price = props.productInCart.prices;\n  let qty = props.qty;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    closeIcon: true,\n    open: open,\n    trigger: /*#__PURE__*/_jsxDEV(Card, {\n      className: (classes.root, \"cart-product-in-list\"),\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\",\n        children: price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n        className: classes.media,\n        image: image_src,\n        title: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        onClick: e => {\n          e.stopPropagation();\n        },\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          display: \"inline-block\",\n          fontSize: '2vh'\n        },\n        children: qty\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        onClick: e => {\n          e.stopPropagation();\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        \"aria-label\": \"delete from shopping cart\",\n        onClick: e => {\n          e.stopPropagation(); //delete\n\n          alert(\"וגם לשנות את האייקון! deleted!!\");\n          deleteProductFromShoppingCartInDB().then(succ => {\n            if (succ.status != 400) props.updateShoppingCart(succ.data);\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: deleteIcon,\n          className: \"my_icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }, this),\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image_src,\n        style: {\n          width: '30%',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '2vw',\n          marginTop: '2vh',\n          overflowWrap: 'break-word'\n        },\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductInCart, \"sAdzNhf/eEVWcoR6sLHcRgUAoMI=\", false, function () {\n  return [useStyles];\n});\n\n_c = ProductInCart;\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.user.currentUser,\n    currentAuction: state.currentAuction.currentAuction\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateShoppingCart\n})(ProductInCart);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductInCart\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/auction/ProductInCart.js"],"names":["Header","Modal","IconButton","AddShoppingCartIcon","useEffect","useState","makeStyles","Card","CardMedia","Typography","React","updateShoppingCart","addProductToShoppingCartInDB","deleteProductFromShoppingCartInDB","deleteIcon","connect","defaultImg","useStyles","root","maxWidth","media","height","ProductInCart","props","open","setOpen","classes","image_src","productInCart","image","description","name","price","prices","qty","e","stopPropagation","display","fontSize","alert","then","succ","status","data","width","marginLeft","marginTop","overflowWrap","mapStateToProps","state","currentUser","user","currentAuction"],"mappings":"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","sourcesContent":["// import './Auction.scss';\r\n// import { Header, Modal } from 'semantic-ui-react';\r\n// import p from '../../img/car.jpg';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import Card from '@material-ui/core/Card';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import { connect } from \"react-redux\";\r\n// import Button from '@material-ui/core/Button';\r\n// import { deleteProductFromCart } from '../../store/actions/user';\r\n// import { setCntOfProductInCart } from '../../store/actions/currentAuction';\r\n// import React, { useEffect, useState } from 'react';\r\n\r\n// const useStyles = makeStyles({\r\n//   root: {\r\n//     maxWidth: 300,\r\n//   },\r\n//   media: {\r\n//     height: 160,\r\n//   },\r\n// });\r\n\r\n// const getCnt = (_id) => {\r\n//   let arr = JSON.parse(localStorage.getItem(\"shoppingCart\"));\r\n//   if (!arr) return 0;\r\n//   let index = arr.findIndex(item => item.product_id == _id);\r\n//   if (index != -1)\r\n//     return arr[index].cnt;\r\n//   return 0;\r\n// }\r\n\r\n// const ProductInCart = (props) => {\r\n//   const [open, setOpen] = React.useState(false)\r\n//   const classes = useStyles();\r\n\r\n//   let image_src = p;//עד שנעשה את הקטע של התמונות\r\n//   let description = props.item.product.description;\r\n//   let name = props.item.product.name;\r\n//   let price = props.item.product.prices;\r\n//   let _id = props.item.product._id;\r\n\r\n//   return (\r\n//     <Modal\r\n//       closeIcon\r\n//       open={open}\r\n//       trigger={\r\n//         <Card className={classes.root} >\r\n//           {name}\r\n//           <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n//             {price}\r\n//           </Typography>\r\n//           <CardMedia\r\n//             className={classes.media}\r\n//             image={image_src}\r\n//             title=\"Contemplative Reptile\"\r\n//           />\r\n\r\n//           <i className=\"trash icon\" onClick={(e) => { e.stopPropagation(); props.deleteProductFromCart(_id) }}></i>\r\n//           <IconButton color=\"primary\"\r\n//             onClick={(e) => {\r\n//               let c = getCnt(_id);\r\n//               if (c > 0) props.setCntOfProductInCart(_id, c - 1);\r\n//               e.stopPropagation();\r\n//             }}  >\r\n//             -</IconButton>\r\n//           <h2>{getCnt()}</h2>\r\n//           <IconButton color=\"primary\"\r\n//             onClick={(e) => {\r\n//               let c = getCnt(_id);\r\n//               props.setCntOfProductInCart(_id, c + 1);\r\n\r\n//               e.stopPropagation();\r\n//             }}\r\n//           >+</IconButton>\r\n//         </Card >}\r\n//       onClose={() => setOpen(false)}\r\n//       onOpen={() => setOpen(true)}\r\n//     >\r\n\r\n//       <Header ><h1>{name}</h1></Header>\r\n//       <Modal.Content>\r\n//         {description}<br />\r\n//         <img src={image_src}></img>\r\n//       </Modal.Content>\r\n//     </Modal >\r\n//   )\r\n// }\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     currentUser: state.user.currentUser,\r\n//     loginIsOpen: state.user.loginIsOpen,\r\n//     currnetAuction: state.auction\r\n//   }\r\n// }\r\n// export default connect(mapStateToProps, { deleteProductFromCart, })(ProductInCart);\r\n\r\nimport './Cart.scss';\r\nimport { Header, Modal } from 'semantic-ui-react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React from 'react';\r\nimport { updateShoppingCart } from '../../store/actions/user';\r\nimport { addProductToShoppingCartInDB, deleteProductFromShoppingCartInDB } from '../../utils/userUtils';\r\nimport deleteIcon from '../../img/icons/dustbin.png'\r\nimport { connect } from \"react-redux\";\r\nimport defaultImg from '../../img/picture.png'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 300,\r\n    },\r\n    media: {\r\n        height: 160\r\n    },\r\n});\r\n\r\nconst ProductInCart = (props) => {\r\n    const [open, setOpen] = React.useState(false)\r\n    const classes = useStyles();\r\n\r\n    let image_src = props.productInCart.image || defaultImg;\r\n    let description = props.productInCart.description;\r\n    let name = props.productInCart.name;\r\n    let price = props.productInCart.prices;\r\n    let qty = props.qty;\r\n\r\n\r\n    return (\r\n        <Modal\r\n            closeIcon\r\n            open={open}\r\n            trigger={\r\n                <Card className={classes.root, \"cart-product-in-list\"} >\r\n\r\n                    <center>{name}</center>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">{price}</Typography>\r\n                    <CardMedia className={classes.media} image={image_src} title={name} />\r\n                    <IconButton color=\"primary\" onClick={(e) => { e.stopPropagation(); }}  >-</IconButton>\r\n                    <h2 style={{ display: \"inline-block\", fontSize: '2vh' }}>{qty}</h2>\r\n                    <IconButton color=\"primary\" onClick={(e) => { e.stopPropagation(); }}>+</IconButton>\r\n\r\n                    {/* מחיקה מהסל */}\r\n                    <IconButton color=\"primary\" aria-label=\"delete from shopping cart\" onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        //delete\r\n                        alert(\"וגם לשנות את האייקון! deleted!!\");\r\n                        deleteProductFromShoppingCartInDB().then(succ => {\r\n                            if (succ.status != 400) props.updateShoppingCart(succ.data);\r\n                        })\r\n                    }}>\r\n                        <img src={deleteIcon} className=\"my_icon\" />\r\n                    </IconButton>\r\n\r\n\r\n                </Card>}\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n        >\r\n\r\n            <Header ><h1>{name}</h1></Header>\r\n            <Modal.Content>\r\n                <img src={image_src} style={{ width: '30%', height: 'auto' }} />\r\n                <div style={{ marginLeft: '2vw', marginTop: '2vh', overflowWrap: 'break-word' }}>{description}</div>\r\n            </Modal.Content>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentUser: state.user.currentUser,\r\n        currentAuction: state.currentAuction.currentAuction\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { updateShoppingCart })(ProductInCart);\r\n"]},"metadata":{},"sourceType":"module"}