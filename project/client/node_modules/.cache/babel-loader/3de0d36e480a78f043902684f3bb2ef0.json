{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\auction\\\\Clock.js\";\nimport { connect } from \"react-redux\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    let fixDate = new Date(12, 8, 2021); // עד איזה זמן\n\n    let currDate = new Date(); // מה הזמן כעת\n\n    this.state = {\n      fixDate,\n      diff: fixDate - currDate\n    };\n  }\n\n  tick() {\n    //מעדכנת את הסטייט\n    this.setState((prevState, props) => ({\n      diff: prevState.fixDate - new Date().getTime()\n    }));\n  }\n\n  componentDidMount() {\n    //כשהקומפוננטה נטענת נגדיר את פונ' טיק שתתבצע כל שניה\n    this.interval = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    //כשהקומפוננטה נסגרת נעצור את פעילות הפונ' טיק\n    clearInterval(this.interval);\n  }\n\n  render() {\n    let {\n      diff\n    } = this.state;\n    let seconds = Math.floor((fixDate - currDate) / 1000);\n    let minutes = Math.floor(seconds / 60);\n    let hours = Math.floor(minutes / 60);\n    let days = Math.floor(hours / 24);\n    hours = hours - days * 24;\n    minutes = minutes - days * 24 * 60 - hours * 60;\n    seconds = seconds - days * 24 * 60 * 60 - hours * 60 * 60 - minutes * 60;\n\n    if (diff <= 0) {\n      clearInterval(this.interval); //00:אם יעשו ריענון כשהשעון שלילי נרצה שיציג 00:00:00\n\n      days = 0;\n      hours = 0;\n      mins = 0;\n      secs = 0;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [days, \":\", String(hours).padStart(2, '0'), \":\", String(mins).padStart(2, '0'), \":\", String(secs).padStart(2, '0')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    theDate: state.currentAuction.registrationEndDate\n  };\n};\n\nexport default connect(mapStateToProps, {})(Clock);","map":{"version":3,"sources":["D:/project-good/project/client/src/components/auction/Clock.js"],"names":["connect","React","Clock","Component","constructor","props","fixDate","Date","currDate","state","diff","tick","setState","prevState","getTime","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","seconds","Math","floor","minutes","hours","days","mins","secs","String","padStart","mapStateToProps","theDate","currentAuction","registrationEndDate"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\r\nimport React from \"react\";\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let fixDate = new Date(12,8,2021);// עד איזה זמן\r\n        let currDate = new Date();// מה הזמן כעת\r\n        this.state = { fixDate, diff: fixDate - currDate };\r\n    }\r\n\r\n    tick() {\r\n        //מעדכנת את הסטייט\r\n        this.setState((prevState, props) => ({\r\n            diff: prevState.fixDate - (new Date()).getTime(),\r\n        }));\r\n    }\r\n    componentDidMount() {\r\n        //כשהקומפוננטה נטענת נגדיר את פונ' טיק שתתבצע כל שניה\r\n        this.interval = setInterval(() => this.tick(), 1000);\r\n    }\r\n    componentWillUnmount() {\r\n        //כשהקומפוננטה נסגרת נעצור את פעילות הפונ' טיק\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let { diff } = this.state;\r\n\r\n        let seconds = Math.floor((fixDate - (currDate)) / 1000);\r\n        let minutes = Math.floor(seconds / 60);\r\n        let hours = Math.floor(minutes / 60);\r\n        let days = Math.floor(hours / 24);\r\n        hours = hours - (days * 24);\r\n        minutes = minutes - (days * 24 * 60) - (hours * 60);\r\n        seconds = seconds - (days * 24 * 60 * 60) - (hours * 60 * 60) - (minutes * 60);\r\n\r\n        if (diff <= 0) {\r\n            clearInterval(this.interval);\r\n            //00:אם יעשו ריענון כשהשעון שלילי נרצה שיציג 00:00:00\r\n            days = 0; hours = 0; mins = 0; secs = 0;\r\n        }\r\n        return (\r\n            <div>\r\n                <h2>{days}:{String(hours).padStart(2, '0')}:{String(mins).padStart(2, '0')}:{String(secs).padStart(2, '0')}</h2>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        theDate: state.currentAuction.registrationEndDate\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(Clock);"]},"metadata":{},"sourceType":"module"}