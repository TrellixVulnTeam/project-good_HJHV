{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\auction\\\\Clock.js\";\nimport { connect } from \"react-redux\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    let fixDate = props.theDate; // עד איזה זמן\n\n    let currDate = new Date(); // מה הזמן כעת\n\n    this.state = {\n      fixDate,\n      diff: fixDate - currDate\n    };\n  }\n\n  tick() {\n    //מעדכנת את הסטייט\n    this.setState((prevState, props) => ({\n      diff: prevState.fixDate - new Date().getTime()\n    }));\n  }\n\n  componentDidMount() {\n    //כשהקומפוננטה נטענת נגדיר את פונ' טיק שתתבצע כל שניה\n    this.interval = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    //כשהקומפוננטה נסגרת נעצור את פעילות הפונ' טיק\n    clearInterval(this.interval);\n  }\n\n  render() {\n    let {\n      diff\n    } = this.state;\n    var delta = diff / 1000; // calculate (and subtract) whole days\n\n    var days = Math.floor(delta / 86400);\n    delta -= days * 86400; // calculate (and subtract) whole hours\n\n    var hours = Math.floor(delta / 3600) % 24;\n    delta -= hours * 3600; // calculate (and subtract) whole minutes\n\n    var mins = Math.floor(delta / 60) % 60;\n    delta -= mins * 60; // what's left is seconds\n\n    var secs = Math.floor(delta % 60);\n\n    if (diff <= 0) {\n      clearInterval(this.interval); //אם יעשו ריענון כשהשעון שלילי נרצה שיציג 00:00:00\n\n      days = 0;\n      hours = 0;\n      mins = 0;\n      secs = 0;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [String(days).padStart(2, '0'), \":\", String(hours).padStart(2, '0'), \":\", String(mins).padStart(2, '0'), \":\", String(secs).padStart(2, '0')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    theDate: new Date(2021, 5, 10).setHours(17, 0, 0) // theDate: state.currentAuction.registrationEndDate\n\n  };\n};\n\nexport default connect(mapStateToProps, {})(Clock);","map":{"version":3,"sources":["D:/project-good/project/client/src/components/auction/Clock.js"],"names":["connect","React","Clock","Component","constructor","props","fixDate","theDate","currDate","Date","state","diff","tick","setState","prevState","getTime","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","delta","days","Math","floor","hours","mins","secs","String","padStart","mapStateToProps","setHours"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\r\nimport React from \"react\";\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let fixDate = props.theDate// עד איזה זמן\r\n        let currDate = new Date();// מה הזמן כעת\r\n        this.state = { fixDate, diff: fixDate - currDate };\r\n    }\r\n\r\n    tick() {\r\n        //מעדכנת את הסטייט\r\n        this.setState((prevState, props) => ({\r\n            diff: prevState.fixDate - (new Date()).getTime(),\r\n        }));\r\n    }\r\n    componentDidMount() {\r\n        //כשהקומפוננטה נטענת נגדיר את פונ' טיק שתתבצע כל שניה\r\n        this.interval = setInterval(() => this.tick(), 1000);\r\n    }\r\n    componentWillUnmount() {\r\n        //כשהקומפוננטה נסגרת נעצור את פעילות הפונ' טיק\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    render() {\r\n        let { diff } = this.state;\r\n        var delta = diff / 1000;\r\n\r\n        // calculate (and subtract) whole days\r\n        var days = Math.floor(delta / 86400);\r\n        delta -= days * 86400;\r\n\r\n        // calculate (and subtract) whole hours\r\n        var hours = Math.floor(delta / 3600) % 24;\r\n        delta -= hours * 3600;\r\n\r\n        // calculate (and subtract) whole minutes\r\n        var mins = Math.floor(delta / 60) % 60;\r\n        delta -= mins * 60;\r\n\r\n        // what's left is seconds\r\n        var secs = Math.floor(delta % 60);\r\n\r\n        if (diff <= 0) {\r\n            clearInterval(this.interval);\r\n            //אם יעשו ריענון כשהשעון שלילי נרצה שיציג 00:00:00\r\n            days = 0; hours = 0; mins = 0; secs = 0;\r\n        }\r\n        return (\r\n            <div>\r\n                <h2>{String(days).padStart(2, '0')}:{String(hours).padStart(2, '0')}:{String(mins).padStart(2, '0')}:{String(secs).padStart(2, '0')}</h2>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        theDate: (new Date(2021, 5, 10)).setHours(17, 0, 0)\r\n        // theDate: state.currentAuction.registrationEndDate\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(Clock);"]},"metadata":{},"sourceType":"module"}