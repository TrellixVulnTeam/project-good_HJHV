{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\auction\\\\ProductInCart.js\",\n    _s = $RefreshSig$();\n\n// import './Auction.scss';\n// import { Header, Modal } from 'semantic-ui-react';\n// import p from '../../img/car.jpg';\n// import IconButton from '@material-ui/core/IconButton';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Card from '@material-ui/core/Card';\n// import CardMedia from '@material-ui/core/CardMedia';\n// import Typography from '@material-ui/core/Typography';\n// import { connect } from \"react-redux\";\n// import Button from '@material-ui/core/Button';\n// import { deleteProductFromCart } from '../../store/actions/user';\n// import { setCntOfProductInCart } from '../../store/actions/currentAuction';\n// import React, { useEffect, useState } from 'react';\n// const useStyles = makeStyles({\n//   root: {\n//     maxWidth: 300,\n//   },\n//   media: {\n//     height: 160,\n//   },\n// });\n// const getCnt = (_id) => {\n//   let arr = JSON.parse(localStorage.getItem(\"shoppingCart\"));\n//   if (!arr) return 0;\n//   let index = arr.findIndex(item => item.product_id == _id);\n//   if (index != -1)\n//     return arr[index].cnt;\n//   return 0;\n// }\n// const ProductInCart = (props) => {\n//   const [open, setOpen] = React.useState(false)\n//   const classes = useStyles();\n//   let image_src = p;//עד שנעשה את הקטע של התמונות\n//   let description = props.item.product.description;\n//   let name = props.item.product.name;\n//   let price = props.item.product.prices;\n//   let _id = props.item.product._id;\n//   return (\n//     <Modal\n//       closeIcon\n//       open={open}\n//       trigger={\n//         <Card className={classes.root} >\n//           {name}\n//           <Typography gutterBottom variant=\"h5\" component=\"h2\">\n//             {price}\n//           </Typography>\n//           <CardMedia\n//             className={classes.media}\n//             image={image_src}\n//             title=\"Contemplative Reptile\"\n//           />\n//           <i className=\"trash icon\" onClick={(e) => { e.stopPropagation(); props.deleteProductFromCart(_id) }}></i>\n//           <IconButton color=\"primary\"\n//             onClick={(e) => {\n//               let c = getCnt(_id);\n//               if (c > 0) props.setCntOfProductInCart(_id, c - 1);\n//               e.stopPropagation();\n//             }}  >\n//             -</IconButton>\n//           <h2>{getCnt()}</h2>\n//           <IconButton color=\"primary\"\n//             onClick={(e) => {\n//               let c = getCnt(_id);\n//               props.setCntOfProductInCart(_id, c + 1);\n//               e.stopPropagation();\n//             }}\n//           >+</IconButton>\n//         </Card >}\n//       onClose={() => setOpen(false)}\n//       onOpen={() => setOpen(true)}\n//     >\n//       <Header ><h1>{name}</h1></Header>\n//       <Modal.Content>\n//         {description}<br />\n//         <img src={image_src}></img>\n//       </Modal.Content>\n//     </Modal >\n//   )\n// }\n// const mapStateToProps = state => {\n//   return {\n//     currentUser: state.user.currentUser,\n//     loginIsOpen: state.user.loginIsOpen,\n//     currnetAuction: state.auction\n//   }\n// }\n// export default connect(mapStateToProps, { deleteProductFromCart, })(ProductInCart);\nimport './Cart.scss';\nimport { Header, Modal } from 'semantic-ui-react';\nimport p from '../../img/car.jpg';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { updateShoppingCart } from '../../store/actions/user';\nimport { addProductToShoppingCartInDB } from '../../utils/userUtils';\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 300\n  },\n  media: {\n    height: 160\n  }\n});\n\nconst ProductInCart = props => {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n  let image_src =\n  /*props.productInCart.image*/\n  p; //עד שנעשה את הקטע של התמונות\n\n  let description = props.productInCart.description;\n  let name = props.productInCart.name;\n  let price = props.productInCart.prices;\n  let qty = props.qty;\n  return (\n    /*#__PURE__*/\n    // <Modal\n    //     closeIcon\n    //     open={open}\n    //     trigger={\n    //         <Card className={classes.root, \"cart-product-in-list\"} >\n    //             <center>{name}</center>\n    //             <Typography gutterBottom variant=\"h5\" component=\"h2\">{price}</Typography>\n    //             <CardMedia className={classes.media} image={image_src} title={name} />\n    //             <IconButton color=\"primary\" onClick={(e) => { e.stopPropagation(); }}  >-</IconButton>\n    //             <h2 style={{ display: \"inline-block\", fontSize: '2vh' }}>{qty}</h2>\n    //             <IconButton color=\"primary\" onClick={(e) => { e.stopPropagation(); }}>+</IconButton>\n    //             {/* מחיקה מהסל */}\n    //             <IconButton color=\"primary\" aria-label=\"delete from shopping cart\">\n    //                 <AddShoppingCartIcon\n    //                     onClick={(e) => {\n    //                         e.stopPropagation();\n    //                         //delete\n    //                         alert(\"וגם לשנות את האייקון! deleted!!\")\n    //                     }} />\n    //             </IconButton>\n    //         </Card>}\n    //     onClose={() => setOpen(false)}\n    //     onOpen={() => setOpen(true)}\n    // >\n    //     <Header ><h1>{name}</h1></Header>\n    //     <Modal.Content><img src={image_src} />\n    //         <div style={{ marginLeft: '2vw', marginTop: '2vh', overflowWrap: 'break-word' }}>{description}</div>\n    //     </Modal.Content>\n    // </Modal>\n    _jsxDEV(\"h1\", {\n      children: \"k\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(ProductInCart, \"sAdzNhf/eEVWcoR6sLHcRgUAoMI=\", false, function () {\n  return [useStyles];\n});\n\n_c = ProductInCart;\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.user.currentUser,\n    currentAuction: state.currentAuction.currentAuction\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateShoppingCart\n})(ProductInCart);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductInCart\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/auction/ProductInCart.js"],"names":["Header","Modal","p","IconButton","AddShoppingCartIcon","useState","makeStyles","Card","CardMedia","Typography","React","updateShoppingCart","addProductToShoppingCartInDB","connect","useStyles","root","maxWidth","media","height","ProductInCart","props","open","setOpen","classes","image_src","description","productInCart","name","price","prices","qty","mapStateToProps","state","currentUser","user","currentAuction"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,aAAP;AACA,SAASA,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,OAAOC,CAAP,MAAc,mBAAd;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,0BAAnC;AACA,SAASC,4BAAT,QAA6C,uBAA7C;AAEA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAC;AACzBS,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR,GADmB;AAIzBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAE;AADL;AAJkB,CAAD,CAA5B;;AASA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAG7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,KAAK,CAACL,QAAN,CAAe,KAAf,CAAxB;AACA,QAAMkB,OAAO,GAAGT,SAAS,EAAzB;AAEA,MAAIU,SAAS;AAAE;AAA8BtB,EAAAA,CAA7C,CAN6B,CAMkB;;AAC/C,MAAIuB,WAAW,GAAGL,KAAK,CAACM,aAAN,CAAoBD,WAAtC;AACA,MAAIE,IAAI,GAAGP,KAAK,CAACM,aAAN,CAAoBC,IAA/B;AACA,MAAIC,KAAK,GAAGR,KAAK,CAACM,aAAN,CAAoBG,MAAhC;AACA,MAAIC,GAAG,GAAGV,KAAK,CAACU,GAAhB;AACA;AAAA;AACI;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AApCJ;AAsCH,CAjDD;;GAAMX,a;UAIcL,S;;;KAJdK,a;;AAmDN,MAAMY,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACE,IAAN,CAAWD,WADrB;AAEHE,IAAAA,cAAc,EAAEH,KAAK,CAACG,cAAN,CAAqBA;AAFlC,GAAP;AAIH,CALD;;AAMA,eAAetB,OAAO,CAACkB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAAiDQ,aAAjD,CAAf","sourcesContent":["// import './Auction.scss';\r\n// import { Header, Modal } from 'semantic-ui-react';\r\n// import p from '../../img/car.jpg';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import Card from '@material-ui/core/Card';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import { connect } from \"react-redux\";\r\n// import Button from '@material-ui/core/Button';\r\n// import { deleteProductFromCart } from '../../store/actions/user';\r\n// import { setCntOfProductInCart } from '../../store/actions/currentAuction';\r\n// import React, { useEffect, useState } from 'react';\r\n\r\n// const useStyles = makeStyles({\r\n//   root: {\r\n//     maxWidth: 300,\r\n//   },\r\n//   media: {\r\n//     height: 160,\r\n//   },\r\n// });\r\n\r\n// const getCnt = (_id) => {\r\n//   let arr = JSON.parse(localStorage.getItem(\"shoppingCart\"));\r\n//   if (!arr) return 0;\r\n//   let index = arr.findIndex(item => item.product_id == _id);\r\n//   if (index != -1)\r\n//     return arr[index].cnt;\r\n//   return 0;\r\n// }\r\n\r\n// const ProductInCart = (props) => {\r\n//   const [open, setOpen] = React.useState(false)\r\n//   const classes = useStyles();\r\n\r\n//   let image_src = p;//עד שנעשה את הקטע של התמונות\r\n//   let description = props.item.product.description;\r\n//   let name = props.item.product.name;\r\n//   let price = props.item.product.prices;\r\n//   let _id = props.item.product._id;\r\n\r\n//   return (\r\n//     <Modal\r\n//       closeIcon\r\n//       open={open}\r\n//       trigger={\r\n//         <Card className={classes.root} >\r\n//           {name}\r\n//           <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n//             {price}\r\n//           </Typography>\r\n//           <CardMedia\r\n//             className={classes.media}\r\n//             image={image_src}\r\n//             title=\"Contemplative Reptile\"\r\n//           />\r\n\r\n//           <i className=\"trash icon\" onClick={(e) => { e.stopPropagation(); props.deleteProductFromCart(_id) }}></i>\r\n//           <IconButton color=\"primary\"\r\n//             onClick={(e) => {\r\n//               let c = getCnt(_id);\r\n//               if (c > 0) props.setCntOfProductInCart(_id, c - 1);\r\n//               e.stopPropagation();\r\n//             }}  >\r\n//             -</IconButton>\r\n//           <h2>{getCnt()}</h2>\r\n//           <IconButton color=\"primary\"\r\n//             onClick={(e) => {\r\n//               let c = getCnt(_id);\r\n//               props.setCntOfProductInCart(_id, c + 1);\r\n\r\n//               e.stopPropagation();\r\n//             }}\r\n//           >+</IconButton>\r\n//         </Card >}\r\n//       onClose={() => setOpen(false)}\r\n//       onOpen={() => setOpen(true)}\r\n//     >\r\n\r\n//       <Header ><h1>{name}</h1></Header>\r\n//       <Modal.Content>\r\n//         {description}<br />\r\n//         <img src={image_src}></img>\r\n//       </Modal.Content>\r\n//     </Modal >\r\n//   )\r\n// }\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     currentUser: state.user.currentUser,\r\n//     loginIsOpen: state.user.loginIsOpen,\r\n//     currnetAuction: state.auction\r\n//   }\r\n// }\r\n// export default connect(mapStateToProps, { deleteProductFromCart, })(ProductInCart);\r\n\r\nimport './Cart.scss';\r\nimport { Header, Modal } from 'semantic-ui-react';\r\nimport p from '../../img/car.jpg';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React from 'react';\r\nimport { updateShoppingCart } from '../../store/actions/user';\r\nimport { addProductToShoppingCartInDB } from '../../utils/userUtils';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 300,\r\n    },\r\n    media: {\r\n        height: 160,\r\n    },\r\n});\r\n\r\nconst ProductInCart = (props) => {\r\n\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const classes = useStyles();\r\n \r\n    let image_src =/*props.productInCart.image*/ p;//עד שנעשה את הקטע של התמונות\r\n    let description = props.productInCart.description;\r\n    let name = props.productInCart.name;\r\n    let price = props.productInCart.prices;\r\n    let qty = props.qty;\r\n    return (\r\n        // <Modal\r\n        //     closeIcon\r\n        //     open={open}\r\n        //     trigger={\r\n        //         <Card className={classes.root, \"cart-product-in-list\"} >\r\n\r\n        //             <center>{name}</center>\r\n        //             <Typography gutterBottom variant=\"h5\" component=\"h2\">{price}</Typography>\r\n        //             <CardMedia className={classes.media} image={image_src} title={name} />\r\n        //             <IconButton color=\"primary\" onClick={(e) => { e.stopPropagation(); }}  >-</IconButton>\r\n        //             <h2 style={{ display: \"inline-block\", fontSize: '2vh' }}>{qty}</h2>\r\n        //             <IconButton color=\"primary\" onClick={(e) => { e.stopPropagation(); }}>+</IconButton>\r\n\r\n        //             {/* מחיקה מהסל */}\r\n        //             <IconButton color=\"primary\" aria-label=\"delete from shopping cart\">\r\n        //                 <AddShoppingCartIcon\r\n        //                     onClick={(e) => {\r\n        //                         e.stopPropagation();\r\n        //                         //delete\r\n        //                         alert(\"וגם לשנות את האייקון! deleted!!\")\r\n        //                     }} />\r\n        //             </IconButton>\r\n\r\n\r\n        //         </Card>}\r\n        //     onClose={() => setOpen(false)}\r\n        //     onOpen={() => setOpen(true)}\r\n        // >\r\n\r\n        //     <Header ><h1>{name}</h1></Header>\r\n        //     <Modal.Content><img src={image_src} />\r\n        //         <div style={{ marginLeft: '2vw', marginTop: '2vh', overflowWrap: 'break-word' }}>{description}</div>\r\n        //     </Modal.Content>\r\n\r\n        // </Modal>\r\n        <h1>k</h1>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentUser: state.user.currentUser,\r\n        currentAuction: state.currentAuction.currentAuction\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { updateShoppingCart })(ProductInCart);\r\n"]},"metadata":{},"sourceType":"module"}