{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\auction\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport ProductInCart from './ProductInCart';\nimport { Link } from 'react-router-dom';\nimport './Cart.scss';\nimport Button from '@material-ui/core/Button';\nimport Order from '../../models/order';\nimport { updateShoppingCart } from '../../store/actions/user';\nimport { connect } from \"react-redux\";\nimport React, { useEffect, useState } from 'react';\nimport { emptyTheBasketByAuction, addOrderToDB } from '../../utils/userUtils';\nimport { getProductsInCartByAuctionIdFromDB } from '../../utils/userUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const amountToPay = () => {\n    let sum = 0;\n    props.user.shoppingCartOfCurrentAuction.map(item => {\n      sum += item.qty * item.productId.price;\n    });\n    return sum;\n  };\n\n  const orderCompletion = () => {\n    const newOrder = new Order(props.currentUser, props.user.shoppingCartOfCurrentAuction, \"\", //אחרי זה להכניס קוד תשלום\n    amountToPay(), props.currentAuction._id, [], //להוסיף בחירת מתנות\n    new Date()); //הפונקציה הזו מוסיפה לטבלת ההזמנות ומוחקת למשתמש את המוצרים של המכירה הזו מהסל\n\n    addOrderToDB(newOrder).then(succ => {\n      if (succ.status != 400) {\n        props.updateShoppingCart([]);\n      }\n    });\n  };\n\n  const orderPackages = () => {\n    //יאך ניתן לו לבחור????\n    let sort_packages = [];\n    if (props.currentAuction.purchasePackage.length && props.currentAuction.purchasePackage.length > 0) sort_packages = props.currentAuction.purchasePackage.sort((a, b) => parseFloat(b.ticketsQuantity) - parseFloat(a.ticketsQuantity));\n    let sort_tickets = props.user.shoppingCartOfCurrentAuction;\n    sort((a, b) => parseFloat(b.productId.price) - parseFloat(a.productId.price));\n  };\n\n  useEffect(() => {\n    getProductsInCartByAuctionIdFromDB(props.user.currentUser._id, props.currentAuction._id).then(succ => {\n      if (succ.status != 400) {\n        props.updateShoppingCart(succ.data);\n      }\n    });\n  }, []);\n  /*\r\n  המבנה בסרבר    \r\n   shoppingCart: [{\r\n      productId: { type: mongoose.SchemaTypes.ObjectId, ref: 'Product' },\r\n      qty: Number,\r\n      auctionId: { type: mongoose.SchemaTypes.ObjectId, ref: 'Auction' }\r\n  }]*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: orderPackages,\n      children: \"Sort by price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cart Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: '/auction',\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"cart-products-container\",\n      children: props.user && props.user.shoppingCartOfCurrentAuction && props.user.shoppingCartOfCurrentAuction.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(ProductInCart, {\n          qty: item.qty,\n          productInCart: item.productId\n          /*setCount={props.setCnt}*/\n\n        }, parseInt(index), false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: '/auction/cart/purchaseSettings',\n      children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n        onClick: orderCompletion,\n        children: \"set purchase packages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 58\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: orderCompletion,\n      children: \"PAY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), props.user && props.user.shoppingCartOfCurrentAuction && amountToPay()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Cart;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    currentAuction: state.currentAuction.currentAuction\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateShoppingCart\n})(Cart);\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/auction/Cart.js"],"names":["ProductInCart","Link","Button","Order","updateShoppingCart","connect","React","useEffect","useState","emptyTheBasketByAuction","addOrderToDB","getProductsInCartByAuctionIdFromDB","Cart","props","amountToPay","sum","user","shoppingCartOfCurrentAuction","map","item","qty","productId","price","orderCompletion","newOrder","currentUser","currentAuction","_id","Date","then","succ","status","orderPackages","sort_packages","purchasePackage","length","sort","a","b","parseFloat","ticketsQuantity","sort_tickets","data","index","parseInt","mapStateToProps","state"],"mappings":"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","sourcesContent":["import ProductInCart from './ProductInCart'\r\nimport { Link } from 'react-router-dom'\r\nimport './Cart.scss';\r\nimport Button from '@material-ui/core/Button';\r\nimport Order from '../../models/order';\r\nimport { updateShoppingCart } from '../../store/actions/user';\r\nimport { connect } from \"react-redux\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { emptyTheBasketByAuction, addOrderToDB } from '../../utils/userUtils';\r\nimport { getProductsInCartByAuctionIdFromDB } from '../../utils/userUtils';\r\nconst Cart = (props) => {\r\n\r\n    const amountToPay = () => {\r\n        let sum = 0;\r\n        props.user.shoppingCartOfCurrentAuction.map((item) => { sum += item.qty * item.productId.price });\r\n        return sum;\r\n    }\r\n\r\n\r\n\r\n    const orderCompletion = () => {\r\n        const newOrder = new Order(\r\n            props.currentUser,\r\n            props.user.shoppingCartOfCurrentAuction,\r\n            \"\",//אחרי זה להכניס קוד תשלום\r\n            amountToPay(),\r\n            props.currentAuction._id,\r\n            [],//להוסיף בחירת מתנות\r\n            new Date()\r\n        );\r\n\r\n        //הפונקציה הזו מוסיפה לטבלת ההזמנות ומוחקת למשתמש את המוצרים של המכירה הזו מהסל\r\n        addOrderToDB(newOrder).then(succ => {\r\n            if (succ.status != 400) {\r\n                props.updateShoppingCart([]);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const orderPackages = () => {\r\n        //יאך ניתן לו לבחור????\r\n        let sort_packages = [];\r\n        if (props.currentAuction.purchasePackage.length && props.currentAuction.purchasePackage.length > 0)\r\n            sort_packages = props.currentAuction.purchasePackage.\r\n                sort((a, b) => parseFloat(b.ticketsQuantity) - parseFloat(a.ticketsQuantity))\r\n        let sort_tickets = props.user.shoppingCartOfCurrentAuction;\r\n            sort((a, b) => parseFloat(b.productId.price) - parseFloat(a.productId.price));\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProductsInCartByAuctionIdFromDB(props.user.currentUser._id, props.currentAuction._id).then(succ => {\r\n            if (succ.status != 400) { props.updateShoppingCart(succ.data); }\r\n        })\r\n    }, [])\r\n\r\n\r\n    /*\r\n    המבנה בסרבר    \r\n     shoppingCart: [{\r\n        productId: { type: mongoose.SchemaTypes.ObjectId, ref: 'Product' },\r\n        qty: Number,\r\n        auctionId: { type: mongoose.SchemaTypes.ObjectId, ref: 'Auction' }\r\n    }]*/\r\n    return (\r\n        <div>\r\n            <button onClick={orderPackages}>Sort by price</button>\r\n            <h1>Cart Component</h1>\r\n            <Link to={'/auction'}>Back</Link>{/*לצאת מהסל, חזרה לכל המוצרים*/}\r\n\r\n            <div id=\"cart-products-container\">\r\n                {/* מערך רק של המוצרים מהמכירה הזו */}\r\n                {props.user && props.user.shoppingCartOfCurrentAuction && props.user.shoppingCartOfCurrentAuction.map((item, index) => {\r\n                    return (<ProductInCart key={parseInt(index)} qty={item.qty} productInCart={item.productId} /*setCount={props.setCnt}*/ />)\r\n                })}\r\n            </div>\r\n            <Link to={'/auction/cart/purchaseSettings'}> <Button onClick={orderCompletion}>set purchase packages</Button></Link>\r\n            <Button onClick={orderCompletion}>PAY</Button>\r\n\r\n            {/* TODO: איך התצוגה תתרענן פה */}\r\n            {props.user && props.user.shoppingCartOfCurrentAuction && amountToPay()}\r\n            {/* ולשלוח את הסכום שנדרש לשלם pay apl-פה צריך להתממשק ל */}\r\n        </div>);\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        currentAuction: state.currentAuction.currentAuction\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { updateShoppingCart })(Cart);"]},"metadata":{},"sourceType":"module"}