{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\StateCounter.js\",\n    _s = $RefreshSig$();\n\n// import React from 'react';\n// import { useStorageState } from 'react-storage-hooks';\n// function StateCounter() {\n//   const [count, setCount, writeError] = useStorageState(\n//     localStorage,\n//     'state-counter',\n//     0\n//   );\n//   return (\n//     <>\n//       <p>You clicked {count} times</p>\n//       <button onClick={() => setCount(count + 1)}>+</button>\n//       <button onClick={() => setCount(count - 1)}>-</button>\n//       {writeError && (\n//         <pre>Cannot write to localStorage: {writeError.message}</pre>\n//       )}\n//     </>\n//   );\n// }\n// export default StateCounter;\nimport React from 'react';\nimport { useStorageReducer } from 'react-storage-hooks';\nimport { connect } from \"react-redux\";\nimport { updateUserState } from '../store/actions/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ReducerCounter = props => {\n  _s();\n\n  const [state, dispatch, writeError] = useStorageReducer(localStorage, //לשמור בלוקל סטורג\n  'reducer-counter', //איך יקראו למשתנה בלוקל סטורג\n  props.updateUserState //איזה רדיוכר להפעיל\n  // { count: 0 }//מה לשלוח לרדיוכר\n  );\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You clicked \", state.count, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'inc'\n      }),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'dec'\n      }),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), writeError && /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: [\"Cannot write to localStorage: \", writeError.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ReducerCounter, \"a3Ljp1pCluGaprVuVPGtXEj+Amw=\", false, function () {\n  return [useStorageReducer];\n});\n\n_c = ReducerCounter;\n\nconst mapStateToProps = state => {};\n\nexport default connect(mapStateToProps, {\n  updateUserState\n})(ReducerCounter);\n\nvar _c;\n\n$RefreshReg$(_c, \"ReducerCounter\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/StateCounter.js"],"names":["React","useStorageReducer","connect","updateUserState","ReducerCounter","props","state","dispatch","writeError","localStorage","count","type","message","mapStateToProps"],"mappings":";;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,uBAAhC;;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,EAAkBC,UAAlB,IAAgCP,iBAAiB,CACrDQ,YADqD,EACxC;AACb,mBAFqD,EAEnC;AAClBJ,EAAAA,KAAK,CAACF,eAH+C,CAG/B;AACtB;AAJqD,GAAvD;AAOA,sBACE;AAAA,4BACE;AAAA,iCAAgBG,KAAK,CAACI,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMH,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE;AAAR,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMJ,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE;AAAR,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGH,UAAU,iBACT;AAAA,mDAAoCA,UAAU,CAACI,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADF;AAUD,CAlBD;;GAAMR,c;UACkCH,iB;;;KADlCG,c;;AAoBN,MAAMS,eAAe,GAAGP,KAAK,IAAI,CAChC,CADD;;AAEA,eAAeJ,OAAO,CAACW,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAA8CC,cAA9C,CAAf","sourcesContent":["// import React from 'react';\r\n// import { useStorageState } from 'react-storage-hooks';\r\n\r\n// function StateCounter() {\r\n//   const [count, setCount, writeError] = useStorageState(\r\n//     localStorage,\r\n//     'state-counter',\r\n//     0\r\n//   );\r\n\r\n//   return (\r\n//     <>\r\n//       <p>You clicked {count} times</p>\r\n//       <button onClick={() => setCount(count + 1)}>+</button>\r\n//       <button onClick={() => setCount(count - 1)}>-</button>\r\n//       {writeError && (\r\n//         <pre>Cannot write to localStorage: {writeError.message}</pre>\r\n//       )}\r\n//     </>\r\n//   );\r\n// }\r\n// export default StateCounter;\r\nimport React from 'react';\r\nimport { useStorageReducer } from 'react-storage-hooks';\r\nimport { connect } from \"react-redux\";\r\nimport { updateUserState } from '../store/actions/user'\r\n\r\nconst ReducerCounter = (props) => {\r\n  const [state, dispatch, writeError] = useStorageReducer(\r\n    localStorage,//לשמור בלוקל סטורג\r\n    'reducer-counter',//איך יקראו למשתנה בלוקל סטורג\r\n    props.updateUserState,//איזה רדיוכר להפעיל\r\n    // { count: 0 }//מה לשלוח לרדיוכר\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <p>You clicked {state.count} times</p>\r\n      <button onClick={() => dispatch({ type: 'inc' })}>+</button>\r\n      <button onClick={() => dispatch({ type: 'dec' })}>-</button>\r\n      {writeError && (\r\n        <pre>Cannot write to localStorage: {writeError.message}</pre>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n}\r\nexport default connect(mapStateToProps, { updateUserState })(ReducerCounter);"]},"metadata":{},"sourceType":"module"}