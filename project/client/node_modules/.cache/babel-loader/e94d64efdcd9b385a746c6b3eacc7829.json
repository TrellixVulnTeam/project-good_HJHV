{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\user\\\\UserTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport './yourProfile.scss';\nimport { getUserOrdersList } from '../../utils/userUtils'; //מחזירה את ההזמנות של המשתמש\n\nimport { getAuctionName } from '../../utils/auctionUtils'; //מחזירה את שם המכירה\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'name',\n  label: 'Chinese auction Name',\n  minWidth: 170\n}, {\n  id: 'order_date',\n  label: 'Order Date',\n  minWidth: 100\n}, {\n  id: 'sum',\n  //\n  label: 'Sum',\n  //מה יהיה רשום\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'options',\n  label: 'Options',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n} // {\n//     id: 'density',\n//     label: 'Density',\n//     minWidth: 170,\n//     align: 'right',\n//     format: (value) => value.toFixed(2),\n// },\n];\n\nfunction createData(name, order_date, sum) {\n  const options = \"to add buttons\";\n  return {\n    name,\n    order_date,\n    sum,\n    options\n  };\n}\n\nconst rows = [// createData('Ezer Mizyon', \"02/08/2021\",150),\n  // createData('Yad And Shem',\"11/08/2021\",100),\n];\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\n\nconst AuctionManagerTable = () => {\n  _s();\n\n  useEffect(() => {\n    getUserOrdersList(JSON.parse(localStorage.user).currentUser._id).then(succ => {\n      let arr = [];\n      succ.data.map(item => {\n        debugger;\n        arr.push(createData(\n        /*getAuctionName(item.auctionId)*/\n        2, item.orderDate, item.amountToPay));\n      });\n    });\n  }, []);\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: column.align,\n                style: {\n                  minWidth: column.minWidth\n                },\n                children: column.label\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                tabIndex: -1,\n                children: columns.map(column => {\n                  const value = row[column.id];\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: column.align,\n                    children: column.format && typeof value === 'number' ? column.format(value) : value\n                  }, column.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, row.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 25, 100],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuctionManagerTable, \"V4MmWQL1bnpGwRuRLfjGl1UZwjI=\", false, function () {\n  return [useStyles];\n});\n\n_c = AuctionManagerTable;\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nexport default connect(mapStateToProps, {})(AuctionManagerTable);\n\nvar _c;\n\n$RefreshReg$(_c, \"AuctionManagerTable\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/user/UserTable.js"],"names":["React","useEffect","connect","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","getUserOrdersList","getAuctionName","columns","id","label","minWidth","align","format","value","toLocaleString","createData","name","order_date","sum","options","rows","useStyles","root","width","container","maxHeight","AuctionManagerTable","JSON","parse","localStorage","user","currentUser","_id","then","succ","arr","data","map","item","push","orderDate","amountToPay","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","column","slice","row","code","length","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport './yourProfile.scss'\r\nimport { getUserOrdersList } from '../../utils/userUtils'//מחזירה את ההזמנות של המשתמש\r\nimport { getAuctionName } from '../../utils/auctionUtils'//מחזירה את שם המכירה\r\n\r\nconst columns = [\r\n    { id: 'name', label: 'Chinese auction Name', minWidth: 170 },\r\n    { id: 'order_date', label: 'Order Date', minWidth: 100 },\r\n    {\r\n        id: 'sum',//\r\n        label: 'Sum',//מה יהיה רשום\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: 'options',\r\n        label: 'Options',\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    // {\r\n    //     id: 'density',\r\n    //     label: 'Density',\r\n    //     minWidth: 170,\r\n    //     align: 'right',\r\n    //     format: (value) => value.toFixed(2),\r\n    // },\r\n];\r\n\r\nfunction createData(name, order_date, sum) {\r\n    const options = \"to add buttons\"\r\n    return { name, order_date, sum, options };\r\n}\r\n\r\nconst rows = [\r\n    // createData('Ezer Mizyon', \"02/08/2021\",150),\r\n    // createData('Yad And Shem',\"11/08/2021\",100),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: 440,\r\n    },\r\n});\r\n\r\nconst AuctionManagerTable = () => {\r\n    useEffect(() => {\r\n        getUserOrdersList(JSON.parse(localStorage.user).currentUser._id).then(succ => {\r\n            let arr = [];\r\n            succ.data.map((item) => {\r\n                debugger;\r\n                arr.push(createData(/*getAuctionName(item.auctionId)*/2, item.orderDate, item.amountToPay))\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <center>\r\n\r\n            <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{ minWidth: column.minWidth }}\r\n                                    >\r\n                                        {column.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                                return (\r\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                        {columns.map((column) => {\r\n                                            const value = row[column.id];\r\n                                            return (\r\n                                                <TableCell key={column.id} align={column.align}>\r\n                                                    {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                                </TableCell>\r\n                                            );\r\n                                        })}\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </center>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n    };\r\n}\r\nexport default connect(mapStateToProps, {})(AuctionManagerTable);\r\n"]},"metadata":{},"sourceType":"module"}