{"ast":null,"code":"// import Button from '@material-ui/core/Button';\n// import Dialog from '@material-ui/core/Dialog';\n// import DialogActions from '@material-ui/core/DialogActions';\n// import DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\n// import DialogTitle from '@material-ui/core/DialogTitle';\n// import useMediaQuery from '@material-ui/core/useMediaQuery';\n// import { useTheme } from '@material-ui/core/styles';\n// const DeleteAuctionFromCartModal = (props) => {\n//     const theme = useTheme();\n//     const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n//     <Dialog\n//         fullScreen={fullScreen}\n//         open={true}\n//         onClick={() => props.setShowDeleteAuctionFromCartModal(false)}\n//         onClose={() => props.setShowDeleteAuctionFromCartModal(false)}\n//         aria-labelledby=\"responsive-dialog-title\"\n//     >\n//         <DialogTitle id=\"responsive-dialog-title\">{\"Delete\"}</DialogTitle>\n//         <DialogContent>\n//             <DialogContentText>Are you sure you want to delete {props.auctionName} shopping cart?</DialogContentText>\n//         </DialogContent>\n//         <DialogActions>\n//             <Button onClick={() => emptyTheCartByAuction(props.auctionId, props.userId).then(succ => {\n//                 if (succ.status != 400) getCartFromDB(props.userId).then(succ => {\n//                     if (succ.status != 400) setArray(succ.data);\n//                 })\n//             })} color=\"primary\" autoFocus>\n//                 Ok\n//             </Button>\n//             <Button autoFocus color=\"primary\">\n//                 Cancle\n//             </Button>\n//         </DialogActions>\n//     </Dialog>\n// }\n// const mapStateToProps = state => {\n//     return {\n//         userId: state.user.currentUser._id,\n//     }\n// }\n// export default connect(mapStateToProps, { })(DeleteAuctionFromCartModal);","map":{"version":3,"sources":["D:/project-good/project/client/src/components/user/DeleteAuctionFromCartModal.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import Button from '@material-ui/core/Button';\r\n// import Dialog from '@material-ui/core/Dialog';\r\n// import DialogActions from '@material-ui/core/DialogActions';\r\n// import DialogContent from '@material-ui/core/DialogContent';\r\n// import DialogContentText from '@material-ui/core/DialogContentText';\r\n// import DialogTitle from '@material-ui/core/DialogTitle';\r\n// import useMediaQuery from '@material-ui/core/useMediaQuery';\r\n// import { useTheme } from '@material-ui/core/styles';\r\n\r\n// const DeleteAuctionFromCartModal = (props) => {\r\n//     const theme = useTheme();\r\n//     const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\r\n//     <Dialog\r\n//         fullScreen={fullScreen}\r\n//         open={true}\r\n//         onClick={() => props.setShowDeleteAuctionFromCartModal(false)}\r\n//         onClose={() => props.setShowDeleteAuctionFromCartModal(false)}\r\n//         aria-labelledby=\"responsive-dialog-title\"\r\n//     >\r\n//         <DialogTitle id=\"responsive-dialog-title\">{\"Delete\"}</DialogTitle>\r\n//         <DialogContent>\r\n//             <DialogContentText>Are you sure you want to delete {props.auctionName} shopping cart?</DialogContentText>\r\n//         </DialogContent>\r\n//         <DialogActions>\r\n//             <Button onClick={() => emptyTheCartByAuction(props.auctionId, props.userId).then(succ => {\r\n//                 if (succ.status != 400) getCartFromDB(props.userId).then(succ => {\r\n//                     if (succ.status != 400) setArray(succ.data);\r\n//                 })\r\n//             })} color=\"primary\" autoFocus>\r\n//                 Ok\r\n//             </Button>\r\n//             <Button autoFocus color=\"primary\">\r\n//                 Cancle\r\n//             </Button>\r\n\r\n//         </DialogActions>\r\n//     </Dialog>\r\n// }\r\n\r\n\r\n// const mapStateToProps = state => {\r\n//     return {\r\n//         userId: state.user.currentUser._id,\r\n//     }\r\n// }\r\n// export default connect(mapStateToProps, { })(DeleteAuctionFromCartModal);"]},"metadata":{},"sourceType":"module"}