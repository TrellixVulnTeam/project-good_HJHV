{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\new auction\\\\AuctionInformation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport './NewAuction.scss';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DatePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { saveAuctionInformationInDB } from '../../utils/newAuctionUtils';\nimport { useForm } from \"react-hook-form\";\nimport { TextField } from \"@mui/material\";\nimport Alert from '@mui/material/Alert';\nimport { setNewAuction } from '../../store/actions/newAuction';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport TimePicker from '@mui/lab/TimePicker';\nimport DateTimePicker from '@mui/lab/DateTimePicker';\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\nimport MobileDatePicker from '@mui/lab/MobileDatePicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nconst AuctionInformation = props => {\n  _s();\n\n  let submit = (data, e) => {\n    e.preventDefault();\n    let details = {\n      registrationStartDate: data.registrationStartDate,\n      lotteriesDate: data.lotteriesDate,\n      registrationEndDate: data.registrationEndDate,\n      lotteryApproval: data.lotteryApproval,\n      publicationApproval: data.publicationApproval,\n      name: data.name || \"unknown\"\n    };\n    saveAuctionInformationInDB(props.auctionId, details).then(succ => {\n      if (succ.status != 400) props.setNewAuction(succ.data);\n    });\n  };\n\n  const classes = useStyles();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [selectedDate1, setSelectedDate1] = React.useState(new Date()); //lotery\n\n  const [selectedDate2, setSelectedDate2] = React.useState(new Date()); //start\n\n  const [selectedDate3, setSelectedDate3] = React.useState(new Date()); //end\n\n  const [value, setValue] = React.useState(new Date('2014-08-18T21:11:54'));\n\n  const handleChange = newValue => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit(submit),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Auction information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs-in-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(LocalizationProvider, {\n        dateAdapter: AdapterDateFns,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(DesktopDatePicker, {\n            label: \"Date desktop\",\n            inputFormat: \"MM/dd/yyyy\",\n            value: value,\n            onChange: handleChange,\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(MobileDatePicker, {\n            label: \"Date mobile\",\n            inputFormat: \"MM/dd/yyyy\",\n            value: value,\n            onChange: handleChange,\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TimePicker, {\n            label: \"Time\",\n            value: value,\n            onChange: handleChange,\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n            label: \"Date&Time picker\",\n            value: value,\n            onChange: handleChange,\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        value: new Date(),\n        onChange: console.log,\n        renderInput: props => /*#__PURE__*/_jsxDEV(TextField, { ...props,\n          helperText: \"valid mask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"default\",\n        className: classes.button,\n        startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 28\n        }, this),\n        ...register('terms', {\n          required: false\n        }),\n        children: \"Upload Terms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, { ...register('publicationApproval', {\n            required: false\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 40\n        }, this),\n        label: \"Publication approval\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, { ...register('lotteryApproval', {\n            required: false\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 40\n        }, this),\n        label: \"Lottery approval\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"positive ui button\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 13\n  }, this); //submit!!!!\n  //לבדוק שהתאריכים תקינים\n  //סיום ההרשמה ולפני ביצוע ההגרלות\n};\n\n_s(AuctionInformation, \"OecRZ89w4jg25i3x/341emU28YU=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = AuctionInformation;\n\nconst mapStateToProps = state => {\n  return {\n    auctionId: state.auction.newAuction._id,\n    auction: state.auction.newAuction\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setNewAuction\n})(AuctionInformation);\n\nvar _c;\n\n$RefreshReg$(_c, \"AuctionInformation\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/new auction/AuctionInformation.js"],"names":["React","useEffect","useState","connect","makeStyles","DateFnsUtils","MuiPickersUtilsProvider","DatePicker","KeyboardDatePicker","Button","CloudUploadIcon","saveAuctionInformationInDB","useForm","TextField","Alert","setNewAuction","Checkbox","FormControlLabel","LocalizationProvider","TimePicker","DateTimePicker","DesktopDatePicker","MobileDatePicker","useStyles","theme","root","margin","spacing","AuctionInformation","props","submit","data","e","preventDefault","details","registrationStartDate","lotteriesDate","registrationEndDate","lotteryApproval","publicationApproval","name","auctionId","then","succ","status","classes","register","handleSubmit","formState","errors","selectedDate1","setSelectedDate1","Date","selectedDate2","setSelectedDate2","selectedDate3","setSelectedDate3","value","setValue","handleChange","newValue","AdapterDateFns","params","console","log","button","required","mapStateToProps","state","auction","newAuction","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './NewAuction.scss'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    DatePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { saveAuctionInformationInDB } from '../../utils/newAuctionUtils';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { TextField } from \"@mui/material\";\r\nimport Alert from '@mui/material/Alert';\r\nimport { setNewAuction } from '../../store/actions/newAuction';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport TimePicker from '@mui/lab/TimePicker';\r\nimport DateTimePicker from '@mui/lab/DateTimePicker';\r\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\r\nimport MobileDatePicker from '@mui/lab/MobileDatePicker';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n    },\r\n}));\r\n\r\nconst AuctionInformation = (props) => {\r\n    let submit = (data, e) => {\r\n        e.preventDefault();\r\n\r\n        let details = {\r\n            registrationStartDate: data.registrationStartDate,\r\n            lotteriesDate: data.lotteriesDate,\r\n            registrationEndDate: data.registrationEndDate,\r\n            lotteryApproval: data.lotteryApproval,\r\n            publicationApproval: data.publicationApproval,\r\n            name: data.name || \"unknown\"\r\n        }\r\n\r\n        saveAuctionInformationInDB(props.auctionId, details).then(succ => {\r\n            if (succ.status != 400) props.setNewAuction(succ.data);\r\n        })\r\n    }\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const [selectedDate1, setSelectedDate1] = React.useState(new Date());//lotery\r\n    const [selectedDate2, setSelectedDate2] = React.useState(new Date());//start\r\n    const [selectedDate3, setSelectedDate3] = React.useState(new Date());//end\r\n    const [value, setValue] = React.useState(new Date('2014-08-18T21:11:54'));\r\n    const handleChange = (newValue) => {\r\n        setValue(newValue);\r\n      };\r\n    return (<form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit(submit)}>\r\n        <h1>Auction information</h1>\r\n        <div className={\"inputs-in-form-container\"} >\r\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <Stack spacing={3}>\r\n        <DesktopDatePicker\r\n          label=\"Date desktop\"\r\n          inputFormat=\"MM/dd/yyyy\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n        <MobileDatePicker\r\n          label=\"Date mobile\"\r\n          inputFormat=\"MM/dd/yyyy\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n        <TimePicker\r\n          label=\"Time\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n        <DateTimePicker\r\n          label=\"Date&Time picker\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n      </Stack>\r\n    </LocalizationProvider>\r\n            {/* <MuiPickersUtilsProvider utils={DateFnsUtils} className=\"auctionInformationDate\">\r\n                <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    label=\"Date of the lottery\"\r\n                    value={selectedDate1}\r\n                    defaultValue={props.auction.lotteriesDate}\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                    {...register('lotteriesDate', { required: true })} id=\"input-with-icon-grid\" label=\"Date of the lottery\"\r\n                />\r\n\r\n            </MuiPickersUtilsProvider>\r\n\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    label=\"Registration start date\"\r\n                    value={selectedDate2}\r\n                    defaultValue={props.auction.registrationStartDate}\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                    {...register('registrationStartDate', { required: true })}\r\n                />\r\n            </MuiPickersUtilsProvider> */}\r\n\r\n            {/* <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    label=\"Registration end date\"\r\n                    value={selectedDate3}\r\n                    onChange={(date)=>{debugger;}}\r\n\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                    // defaultValue={props.auction.registrationEndDate}\r\n                    {...register('registrationEndDate', { required: true })}\r\n                />\r\n            </MuiPickersUtilsProvider> */}\r\n            <DatePicker\r\n                value={new Date()}\r\n                onChange={console.log}\r\n                renderInput={(props) => (\r\n                    <TextField {...props} helperText=\"valid mask\" />\r\n                )}\r\n            />\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"default\"\r\n                className={classes.button}\r\n                startIcon={<CloudUploadIcon />}\r\n                {...register('terms', { required: false })}\r\n            >\r\n                Upload Terms\r\n            </Button>\r\n\r\n            <FormControlLabel control={<Checkbox {...register('publicationApproval', { required: false })} />} label=\"Publication approval\" />\r\n\r\n            <FormControlLabel control={<Checkbox  {...register('lotteryApproval', { required: false })} />} label=\"Lottery approval\" />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"positive ui button\">Save</button>\r\n    </form >);\r\n    //submit!!!!\r\n    //לבדוק שהתאריכים תקינים\r\n    //סיום ההרשמה ולפני ביצוע ההגרלות\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auctionId: state.auction.newAuction._id,\r\n        auction: state.auction.newAuction\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { setNewAuction })(AuctionInformation);\r\n\r\n"]},"metadata":{},"sourceType":"module"}