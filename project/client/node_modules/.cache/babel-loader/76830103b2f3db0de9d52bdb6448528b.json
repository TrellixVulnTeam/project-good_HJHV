{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef, memo, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { invariant, hasWindow } from \"@rpldy/shared\";\nimport { NoDomUploady, useUploadOptions } from \"@rpldy/shared-ui\";\nconst NO_CONTAINER_ERROR_MSG = \"Uploady - Container for file input must be a valid dom element\";\n\nconst renderInput = (inputProps, instanceOptions, ref) => /*#__PURE__*/React.createElement(\"input\", _extends({}, inputProps, {\n  name: instanceOptions.inputFieldName,\n  type: \"file\",\n  ref: ref\n}));\n\nconst renderInPortal = (container, isValidContainer, inputProps, instanceOptions, ref) => container && isValidContainer ? /*#__PURE__*/ReactDOM.createPortal(renderInput(inputProps, instanceOptions, ref), container) : null;\n\nconst FileInputField = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(({\n  container,\n  noPortal,\n  ...inputProps\n}, ref) => {\n  const instanceOptions = useUploadOptions();\n  const isValidContainer = container && container.nodeType === 1;\n  invariant(isValidContainer || !hasWindow(), NO_CONTAINER_ERROR_MSG); // In DEV - SSR React will warn on mismatch between client&server :( -\n  // https://github.com/facebook/react/issues/12615\n  // https://github.com/facebook/react/issues/13097\n\n  return noPortal ? renderInput(inputProps, instanceOptions, ref) : renderInPortal(container, isValidContainer, inputProps, instanceOptions, ref);\n}));\n\nconst Uploady = props => {\n  const {\n    multiple = true,\n    capture,\n    accept,\n    webkitdirectory,\n    children,\n    inputFieldContainer,\n    customInput,\n    fileInputId,\n    noPortal = false,\n    ...noDomProps\n  } = props;\n  const container = !customInput ? inputFieldContainer || (hasWindow() ? document.body : null) : null;\n  const internalInputFieldRef = useRef();\n  return /*#__PURE__*/React.createElement(NoDomUploady, _extends({}, noDomProps, {\n    inputRef: internalInputFieldRef\n  }), !customInput ? /*#__PURE__*/React.createElement(FileInputField, {\n    container: container,\n    multiple: multiple,\n    capture: capture,\n    accept: accept,\n    webkitdirectory: webkitdirectory,\n    style: {\n      display: \"none\"\n    },\n    ref: internalInputFieldRef,\n    id: fileInputId,\n    noPortal: noPortal\n  }) : null, children);\n};\n\nexport default Uploady;","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/project-good/project/client/node_modules/@rpldy/uploady/lib/esm/Uploady.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","forwardRef","memo","useRef","ReactDOM","invariant","hasWindow","NoDomUploady","useUploadOptions","NO_CONTAINER_ERROR_MSG","renderInput","inputProps","instanceOptions","ref","createElement","name","inputFieldName","type","renderInPortal","container","isValidContainer","createPortal","FileInputField","noPortal","nodeType","Uploady","props","multiple","capture","accept","webkitdirectory","children","inputFieldContainer","customInput","fileInputId","noDomProps","document","body","internalInputFieldRef","inputRef","style","display","id"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { forwardRef, memo, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { invariant, hasWindow } from \"@rpldy/shared\";\nimport { NoDomUploady, useUploadOptions } from \"@rpldy/shared-ui\";\nconst NO_CONTAINER_ERROR_MSG = \"Uploady - Container for file input must be a valid dom element\";\n\nconst renderInput = (inputProps, instanceOptions, ref) => /*#__PURE__*/React.createElement(\"input\", _extends({}, inputProps, {\n  name: instanceOptions.inputFieldName,\n  type: \"file\",\n  ref: ref\n}));\n\nconst renderInPortal = (container, isValidContainer, inputProps, instanceOptions, ref) => container && isValidContainer ? /*#__PURE__*/ReactDOM.createPortal(renderInput(inputProps, instanceOptions, ref), container) : null;\n\nconst FileInputField = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(({\n  container,\n  noPortal,\n  ...inputProps\n}, ref) => {\n  const instanceOptions = useUploadOptions();\n  const isValidContainer = container && container.nodeType === 1;\n  invariant(isValidContainer || !hasWindow(), NO_CONTAINER_ERROR_MSG); // In DEV - SSR React will warn on mismatch between client&server :( -\n  // https://github.com/facebook/react/issues/12615\n  // https://github.com/facebook/react/issues/13097\n\n  return noPortal ? renderInput(inputProps, instanceOptions, ref) : renderInPortal(container, isValidContainer, inputProps, instanceOptions, ref);\n}));\n\nconst Uploady = props => {\n  const {\n    multiple = true,\n    capture,\n    accept,\n    webkitdirectory,\n    children,\n    inputFieldContainer,\n    customInput,\n    fileInputId,\n    noPortal = false,\n    ...noDomProps\n  } = props;\n  const container = !customInput ? inputFieldContainer || (hasWindow() ? document.body : null) : null;\n  const internalInputFieldRef = useRef();\n  return /*#__PURE__*/React.createElement(NoDomUploady, _extends({}, noDomProps, {\n    inputRef: internalInputFieldRef\n  }), !customInput ? /*#__PURE__*/React.createElement(FileInputField, {\n    container: container,\n    multiple: multiple,\n    capture: capture,\n    accept: accept,\n    webkitdirectory: webkitdirectory,\n    style: {\n      display: \"none\"\n    },\n    ref: internalInputFieldRef,\n    id: fileInputId,\n    noPortal: noPortal\n  }) : null, children);\n};\n\nexport default Uploady;"]},"metadata":{},"sourceType":"module"}