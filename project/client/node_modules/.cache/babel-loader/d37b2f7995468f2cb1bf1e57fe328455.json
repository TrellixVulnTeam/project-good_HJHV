{"ast":null,"code":"import createUploadQueue from \"./queue\";\nimport createItemsSender from \"./batchItemsSender\";\nimport createBatch from \"./batch\";\nexport default ((trigger, cancellable, options, uploaderId) => {\n  const sender = createItemsSender(),\n        queue = createUploadQueue(options, trigger, cancellable, sender, uploaderId);\n  const runCancellable = queue.runCancellable;\n  return {\n    process: (batch, batchOptions) => {\n      queue.uploadBatch(batch, batchOptions);\n    },\n    abortBatch: batchId => {\n      queue.abortBatch(batchId);\n    },\n    abort: id => {\n      if (id) {\n        queue.abortItem(id);\n      } else {\n        queue.abortAll();\n      }\n    },\n    addNewBatch: (files, uploaderId, processOptions) => {\n      const batch = createBatch(files, uploaderId, processOptions);\n      return queue.addBatch(batch, processOptions);\n    },\n    runCancellable,\n    clearPendingBatches: () => {\n      queue.clearPendingBatches();\n    },\n    processPendingBatches: uploadOptions => {\n      queue.uploadPendingBatches(uploadOptions);\n    }\n  };\n});","map":{"version":3,"sources":["D:/project-good/project/client/node_modules/@rpldy/uploader/lib/esm/processor.js"],"names":["createUploadQueue","createItemsSender","createBatch","trigger","cancellable","options","uploaderId","sender","queue","runCancellable","process","batch","batchOptions","uploadBatch","abortBatch","batchId","abort","id","abortItem","abortAll","addNewBatch","files","processOptions","addBatch","clearPendingBatches","processPendingBatches","uploadOptions","uploadPendingBatches"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,SAA9B;AACA,OAAOC,iBAAP,MAA8B,oBAA9B;AACA,OAAOC,WAAP,MAAwB,SAAxB;AACA,gBAAgB,CAACC,OAAD,EAAUC,WAAV,EAAuBC,OAAvB,EAAgCC,UAAhC,KAA+C;AAC7D,QAAMC,MAAM,GAAGN,iBAAiB,EAAhC;AAAA,QACMO,KAAK,GAAGR,iBAAiB,CAACK,OAAD,EAAUF,OAAV,EAAmBC,WAAnB,EAAgCG,MAAhC,EAAwCD,UAAxC,CAD/B;AAEA,QAAMG,cAAc,GAAGD,KAAK,CAACC,cAA7B;AACA,SAAO;AACLC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,YAAR,KAAyB;AAChCJ,MAAAA,KAAK,CAACK,WAAN,CAAkBF,KAAlB,EAAyBC,YAAzB;AACD,KAHI;AAILE,IAAAA,UAAU,EAAEC,OAAO,IAAI;AACrBP,MAAAA,KAAK,CAACM,UAAN,CAAiBC,OAAjB;AACD,KANI;AAOLC,IAAAA,KAAK,EAAEC,EAAE,IAAI;AACX,UAAIA,EAAJ,EAAQ;AACNT,QAAAA,KAAK,CAACU,SAAN,CAAgBD,EAAhB;AACD,OAFD,MAEO;AACLT,QAAAA,KAAK,CAACW,QAAN;AACD;AACF,KAbI;AAcLC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQf,UAAR,EAAoBgB,cAApB,KAAuC;AAClD,YAAMX,KAAK,GAAGT,WAAW,CAACmB,KAAD,EAAQf,UAAR,EAAoBgB,cAApB,CAAzB;AACA,aAAOd,KAAK,CAACe,QAAN,CAAeZ,KAAf,EAAsBW,cAAtB,CAAP;AACD,KAjBI;AAkBLb,IAAAA,cAlBK;AAmBLe,IAAAA,mBAAmB,EAAE,MAAM;AACzBhB,MAAAA,KAAK,CAACgB,mBAAN;AACD,KArBI;AAsBLC,IAAAA,qBAAqB,EAAEC,aAAa,IAAI;AACtClB,MAAAA,KAAK,CAACmB,oBAAN,CAA2BD,aAA3B;AACD;AAxBI,GAAP;AA0BD,CA9BD","sourcesContent":["import createUploadQueue from \"./queue\";\r\nimport createItemsSender from \"./batchItemsSender\";\r\nimport createBatch from \"./batch\";\r\nexport default ((trigger, cancellable, options, uploaderId) => {\r\n  const sender = createItemsSender(),\r\n        queue = createUploadQueue(options, trigger, cancellable, sender, uploaderId);\r\n  const runCancellable = queue.runCancellable;\r\n  return {\r\n    process: (batch, batchOptions) => {\r\n      queue.uploadBatch(batch, batchOptions);\r\n    },\r\n    abortBatch: batchId => {\r\n      queue.abortBatch(batchId);\r\n    },\r\n    abort: id => {\r\n      if (id) {\r\n        queue.abortItem(id);\r\n      } else {\r\n        queue.abortAll();\r\n      }\r\n    },\r\n    addNewBatch: (files, uploaderId, processOptions) => {\r\n      const batch = createBatch(files, uploaderId, processOptions);\r\n      return queue.addBatch(batch, processOptions);\r\n    },\r\n    runCancellable,\r\n    clearPendingBatches: () => {\r\n      queue.clearPendingBatches();\r\n    },\r\n    processPendingBatches: uploadOptions => {\r\n      queue.uploadPendingBatches(uploadOptions);\r\n    }\r\n  };\r\n});"]},"metadata":{},"sourceType":"module"}