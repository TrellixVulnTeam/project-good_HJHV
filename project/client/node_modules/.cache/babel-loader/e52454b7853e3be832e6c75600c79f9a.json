{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\new auction\\\\OrganizationInformation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { setNewAuction } from '../../store/actions/newAuction';\nimport { saveOrganizationInformationInDB } from '../../utils/newAuctionUtils';\nimport { connect } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { TextField } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrganizationInformation = props => {\n  _s();\n\n  let details = {\n    organizationName: \"\",\n    organizationText: \"\",\n    organizationPhotos: []\n  };\n\n  let submit = (data, e) => {\n    e.preventDefault();\n    details.organizationName = data.organizationName;\n    details.organizationText = data.organizationText;\n    details.organizationPhotos = data.organizationPhotos;\n    saveOrganizationInformationInDB(props.auctionId, details).then(succ => {\n      console.log(succ.data);\n      if (succ.status != 400) props.setNewAuction(succ.data);\n    });\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  useEffect(() => {// componentWillUnmount\n    // if (props.currentUser == null && localStorage.getItem(\"login\") == \"true\")\n    //     props.signIn(localStorage.getItem(\"pass\"), localStorage.getItem(\"email\"));\n    // else if (props.currentUser == null && localStorage.getItem(\"login\") == \"google\")\n    //     props.loginGoogle(localStorage.getItem(\"name\"), localStorage.getItem(\"email\"))\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit(submit),\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      className: \"txt\",\n      variant: \"standard\",\n      defaultValue: props.auction.name,\n      ...register('name', {\n        required: true\n      }),\n      id: \"input-with-icon-grid\",\n      label: \"Name Auction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" The organization name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => details.organizationName = e.target.value,\n      defaultValue: props.auction.organizationName,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      defaultValue: props.auction.organizationText,\n      onChange: e => details.organizationText = e.target.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Upload photos of the organization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"upload photos\",\n      onChange: e => {\n        details.organizationPhotos.push(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"save organization information\",\n      onClick: () => saveOrganizationInformationInDB(props.auctionId, details).then(succ => {\n        console.log(succ.data);\n        if (succ.status != 400) props.setNewAuction(succ.data);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }, this);\n}; //submit!!!!\n\n\n_s(OrganizationInformation, \"Dz9qqMtz6KrwDRD7suTExSgyaPc=\", false, function () {\n  return [useForm];\n});\n\n_c = OrganizationInformation;\n\nconst mapStateToProps = state => {\n  return {\n    auctionId: state.auction.newAuction._id,\n    auction: state.auction.newAuction\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setNewAuction\n})(OrganizationInformation); // {/* <form>\n//         {/* <TextField id=\"standard-basic\" label=\"Dccc\" /> */}\n//         <label> The organization name</label>\n//         <input type=\"text\" onChange={(e) => details.organizationName = e.target.value} defaultValue={props.auction.organizationName} required={true} />\n//         <textarea defaultValue={props.auction.organizationText} onChange={(e) => details.organizationText = e.target.value}></textarea>\n//         <label>Upload photos of the organization</label>\n//         {/* לשמור תמונות שהוא מעלה */}\n//         <input type=\"button\" value=\"upload photos\" onChange={(e) => { details.organizationPhotos.push(e.target.value) }} />\n//         <br />\n//         <br />\n//         <br />\n//         <br />\n//         <input type=\"button\" value=\"save organization information\"\n//             onClick={() => saveOrganizationInformationInDB(props.auctionId, details).then(succ => {\n//                 console.log(succ.data);\n//                 if (succ.status != 400) props.setNewAuction(succ.data)\n//             })\n//             } />\n//     </form> */}\n\nvar _c;\n\n$RefreshReg$(_c, \"OrganizationInformation\");","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/project-good/project/client/src/components/new auction/OrganizationInformation.js"],"names":["React","useEffect","setNewAuction","saveOrganizationInformationInDB","connect","useForm","TextField","OrganizationInformation","props","details","organizationName","organizationText","organizationPhotos","submit","data","e","preventDefault","auctionId","then","succ","console","log","status","register","handleSubmit","formState","errors","auction","name","required","target","value","push","mapStateToProps","state","newAuction","_id"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { setNewAuction } from '../../store/actions/newAuction';\r\nimport { saveOrganizationInformationInDB } from '../../utils/newAuctionUtils';\r\nimport { connect } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { TextField } from \"@mui/material\";\r\nconst OrganizationInformation = (props) => {\r\n    let details = {\r\n        organizationName: \"\",\r\n        organizationText: \"\",\r\n        organizationPhotos: []\r\n    }\r\n    let submit = (data, e) => {\r\n        e.preventDefault();\r\n        details.organizationName=data.organizationName;\r\n        details.organizationText=data.organizationText;\r\n        details.organizationPhotos=data.organizationPhotos;\r\n\r\n        saveOrganizationInformationInDB(props.auctionId, details).then(succ => {\r\n            console.log(succ.data);\r\n            if (succ.status != 400)\r\n             props.setNewAuction(succ.data)\r\n        })\r\n    }\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    useEffect(() => { // componentWillUnmount\r\n        // if (props.currentUser == null && localStorage.getItem(\"login\") == \"true\")\r\n        //     props.signIn(localStorage.getItem(\"pass\"), localStorage.getItem(\"email\"));\r\n        // else if (props.currentUser == null && localStorage.getItem(\"login\") == \"google\")\r\n        //     props.loginGoogle(localStorage.getItem(\"name\"), localStorage.getItem(\"email\"))\r\n\r\n    });\r\n\r\n    return (<form noValidate autoComplete=\"off\" onSubmit={handleSubmit(submit)}>\r\n\r\n        <TextField className=\"txt\" variant=\"standard\" defaultValue={props.auction.name} {...register('name', { required: true })} id=\"input-with-icon-grid\" label=\"Name Auction\" />\r\n\r\n        <label> The organization name</label>\r\n        <input type=\"text\" onChange={(e) => details.organizationName = e.target.value} defaultValue={props.auction.organizationName} required={true} />\r\n\r\n        <textarea defaultValue={props.auction.organizationText} onChange={(e) => details.organizationText = e.target.value}></textarea>\r\n\r\n        <label>Upload photos of the organization</label>\r\n        {/* לשמור תמונות שהוא מעלה */}\r\n        <input type=\"button\" value=\"upload photos\" onChange={(e) => { details.organizationPhotos.push(e.target.value) }} />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <input type=\"button\" value=\"save organization information\"\r\n            onClick={() => saveOrganizationInformationInDB(props.auctionId, details).then(succ => {\r\n                console.log(succ.data);\r\n                if (succ.status != 400) props.setNewAuction(succ.data)\r\n            })\r\n            } />\r\n    </form>)\r\n}\r\n//submit!!!!\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auctionId: state.auction.newAuction._id,\r\n        auction: state.auction.newAuction\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { setNewAuction })(OrganizationInformation);\r\n// {/* <form>\r\n//         {/* <TextField id=\"standard-basic\" label=\"Dccc\" /> */}\r\n\r\n\r\n//         <label> The organization name</label>\r\n//         <input type=\"text\" onChange={(e) => details.organizationName = e.target.value} defaultValue={props.auction.organizationName} required={true} />\r\n\r\n//         <textarea defaultValue={props.auction.organizationText} onChange={(e) => details.organizationText = e.target.value}></textarea>\r\n\r\n//         <label>Upload photos of the organization</label>\r\n//         {/* לשמור תמונות שהוא מעלה */}\r\n//         <input type=\"button\" value=\"upload photos\" onChange={(e) => { details.organizationPhotos.push(e.target.value) }} />\r\n//         <br />\r\n//         <br />\r\n//         <br />\r\n//         <br />\r\n//         <input type=\"button\" value=\"save organization information\"\r\n//             onClick={() => saveOrganizationInformationInDB(props.auctionId, details).then(succ => {\r\n//                 console.log(succ.data);\r\n//                 if (succ.status != 400) props.setNewAuction(succ.data)\r\n//             })\r\n//             } />\r\n//     </form> */}"]},"metadata":{},"sourceType":"module"}