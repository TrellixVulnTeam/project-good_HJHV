{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\new auction\\\\uploading products\\\\AddProductForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { addProductToDB } from \"../../../utils/newAuctionUtils\";\nimport { connect } from \"react-redux\";\nimport { signIn, loginGoogle } from '../../../store/actions/signIn';\nimport { addProduct } from '../../../store/actions/newAuction';\nimport { useForm } from \"react-hook-form\";\nimport Checkbox from '@mui/material/Checkbox';\nimport { TextField } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddProductForm = props => {\n  _s();\n\n  let submit = (data, e) => {\n    e.preventDefault();\n    newProduct.name = data.name;\n    newProduct.description = data.description;\n    newProduct.price = data.price;\n    newProduct.includedInPackages = data.includedInPackages;\n    newProduct.img = data.img;\n    addProductToDB(props.auctionId, newProduct).then(succ => {\n      console.log(succ.data);\n      if (succ.status != 400) props.addProduct(succ.data);\n    });\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onChangeHandler = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const onClickHandler = () => {\n    const data = new FormData();\n    data.append('file', selectedFile);\n    newProduct.img = data;\n  };\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  let newProduct = {\n    img: null,\n    name: \"\",\n    description: \"\",\n    price: 0,\n    includedInPackages: true\n  };\n  useEffect(() => {\n    if (props.currentUser == null && localStorage.getItem(\"login\") == \"true\") props.signIn(localStorage.getItem(\"pass\"), localStorage.getItem(\"email\"));else if (props.currentUser == null && localStorage.getItem(\"login\") == \"google\") props.loginGoogle(localStorage.getItem(\"name\"), localStorage.getItem(\"email\"));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"field\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit(submit),\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: \"txt\",\n        variant: \"standard\",\n        defaultValue: props.newAuction.productList.name,\n        ...register('name', {\n          required: true\n        }),\n        id: \"input-with-icon-grid\",\n        label: \"Product Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"txt\",\n        variant: \"standard\",\n        defaultValue: props.newAuction.productList.price,\n        ...register('price', {\n          required: true\n        }),\n        id: \"input-with-icon-grid\",\n        label: \"Product Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"included in packages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n        defaultChecked: true,\n        ...register('includedInPackages', {\n          required: true\n        }),\n        id: \"input-with-icon-grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"product description\",\n        multiline: true,\n        rows: 2,\n        rowsMax: 4,\n        variant: \"standard\",\n        defaultValue: props.newAuction.productList.description,\n        ...register('description', {\n          required: true\n        }),\n        id: \"input-with-icon-grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        onChange: e => {\n          onChangeHandler(e);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"positive ui button\",\n        type: \"submit\",\n        children: \" Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddProductForm, \"SMNf8QkFmfxedPn+A3Jfb0nSpxQ=\", false, function () {\n  return [useForm];\n});\n\n_c = AddProductForm;\n\nconst mapStateToProps = state => {\n  return {\n    auctionId: state.auction.newAuction._id,\n    arr: state.auction.newAuction.productList,\n    newAuction: state.auction.newAuction\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addProduct,\n  signIn,\n  loginGoogle\n})(AddProductForm); // <form>\n//                 <input placeholder=\"product name\" type=\"text\" onChange={(e) => newProduct.name = e.target.value} required={true} />\n//                 <input placeholder=\"product price\" type=\"text\" onChange={(e) => newProduct.price = e.target.value} required={true} />\n//                 <label>included in packages:</label>\n//                 <input type=\"checkbox\" onChange={(e) => newProduct.includedInPackages = e.target.checked} defaultChecked={true} required={true} />\n//                 <textarea placeholder=\"product description\"\n//                     onChange={(e) => newProduct.description = e.target.value} required={true}></textarea>\n//                 {/* כפתור להעלאת תמונה */}\n//                 <input type=\"file\" name=\"file\" onChange={(e) => { onChangeHandler(e) }} />\n//                 <button type=\"button\" class=\"btn btn-success btn-block\" onClick={(e) => onClickHandler(e)}>Upload</button>\n//                 <input className=\"positive ui button\" type=\"button\" value=\"Add\" onClick={() => {\n//                     addProductToDB(props.auctionId, newProduct).then(succ => { console.log(succ.data); if (succ.status != 400) props.addProduct(succ.data); })\n//                 }} />\n//             </form>\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProductForm\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/new auction/uploading products/AddProductForm.js"],"names":["React","useRef","useState","useEffect","addProductToDB","connect","signIn","loginGoogle","addProduct","useForm","Checkbox","TextField","AddProductForm","props","submit","data","e","preventDefault","newProduct","name","description","price","includedInPackages","img","auctionId","then","succ","console","log","status","register","handleSubmit","formState","errors","onChangeHandler","event","setSelectedFile","target","files","onClickHandler","FormData","append","selectedFile","currentUser","localStorage","getItem","newAuction","productList","required","mapStateToProps","state","auction","_id","arr"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { addProductToDB } from \"../../../utils/newAuctionUtils\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn, loginGoogle } from '../../../store/actions/signIn';\r\nimport { addProduct } from '../../../store/actions/newAuction';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { TextField } from \"@mui/material\";\r\n\r\nconst AddProductForm = (props) => {\r\n\r\n    let submit = (data, e) => {\r\n        e.preventDefault();\r\n         newProduct.name =data.name;\r\n         newProduct.description =data.description;\r\n         newProduct.price =data.price;\r\n         newProduct.includedInPackages =data.includedInPackages;\r\n         newProduct.img =data.img;\r\n\r\n\r\n        addProductToDB(props.auctionId, newProduct).then(succ => {\r\n            console.log(succ.data);\r\n            if (succ.status != 400)\r\n                props.addProduct(succ.data);\r\n        })\r\n\r\n    }\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n\r\n\r\n    const onChangeHandler = (event) => { setSelectedFile(event.target.files[0]); }\r\n    const onClickHandler = () => {\r\n        const data = new FormData();\r\n        data.append('file', selectedFile);\r\n        newProduct.img = data;\r\n    }\r\n\r\n\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n    let newProduct = { img: null, name: \"\", description: \"\", price: 0, includedInPackages: true };\r\n    useEffect(() => {\r\n        if (props.currentUser == null && localStorage.getItem(\"login\") == \"true\")\r\n            props.signIn(localStorage.getItem(\"pass\"), localStorage.getItem(\"email\"));\r\n        else if (props.currentUser == null && localStorage.getItem(\"login\") == \"google\")\r\n            props.loginGoogle(localStorage.getItem(\"name\"), localStorage.getItem(\"email\"))\r\n    }, [])\r\n    return (\r\n        <div className=\"field\">\r\n            <form noValidate autoComplete=\"off\" onSubmit={handleSubmit(submit)}>\r\n                <TextField className=\"txt\" variant=\"standard\" defaultValue={props.newAuction.productList.name} {...register('name', { required: true })} id=\"input-with-icon-grid\" label=\"Product Name\" />\r\n                <TextField className=\"txt\" variant=\"standard\" defaultValue={props.newAuction.productList.price} {...register('price', { required: true })} id=\"input-with-icon-grid\" label=\"Product Price\" />\r\n                <label>included in packages:</label>\r\n                <Checkbox  defaultChecked {...register('includedInPackages', { required: true })} id=\"input-with-icon-grid\" />\r\n                <TextField\r\n                    placeholder=\"product description\"\r\n                    multiline\r\n                    rows={2}\r\n                    rowsMax={4}\r\n                    variant=\"standard\"\r\n                    defaultValue={props.newAuction.productList.description}\r\n                    {...register('description', { required: true })}\r\n                    id=\"input-with-icon-grid\"\r\n                />\r\n                 <input type=\"file\" name=\"file\" onChange={(e) => { onChangeHandler(e) }} />\r\n        \r\n            <button className=\"positive ui button\" type=\"submit\"> Add</button>\r\n\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auctionId: state.auction.newAuction._id,\r\n        arr: state.auction.newAuction.productList,\r\n        newAuction: state.auction.newAuction,\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { addProduct, signIn, loginGoogle })(AddProductForm);\r\n\r\n// <form>\r\n//                 <input placeholder=\"product name\" type=\"text\" onChange={(e) => newProduct.name = e.target.value} required={true} />\r\n//                 <input placeholder=\"product price\" type=\"text\" onChange={(e) => newProduct.price = e.target.value} required={true} />\r\n//                 <label>included in packages:</label>\r\n//                 <input type=\"checkbox\" onChange={(e) => newProduct.includedInPackages = e.target.checked} defaultChecked={true} required={true} />\r\n\r\n//                 <textarea placeholder=\"product description\"\r\n//                     onChange={(e) => newProduct.description = e.target.value} required={true}></textarea>\r\n\r\n\r\n//                 {/* כפתור להעלאת תמונה */}\r\n//                 <input type=\"file\" name=\"file\" onChange={(e) => { onChangeHandler(e) }} />\r\n//                 <button type=\"button\" class=\"btn btn-success btn-block\" onClick={(e) => onClickHandler(e)}>Upload</button>\r\n\r\n//                 <input className=\"positive ui button\" type=\"button\" value=\"Add\" onClick={() => {\r\n//                     addProductToDB(props.auctionId, newProduct).then(succ => { console.log(succ.data); if (succ.status != 400) props.addProduct(succ.data); })\r\n//                 }} />\r\n//             </form>"]},"metadata":{},"sourceType":"module"}