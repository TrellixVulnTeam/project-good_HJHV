{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\new auction\\\\ContinueNewAuction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Collapse from '@mui/material/Collapse';\nimport IconButton from '@mui/material/IconButton';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport KeyboardArrowDownIcon from '../../img/icons/arrow-down.png';\nimport KeyboardArrowUpIcon from '../../img/icons/arrow-up.png';\nimport Continue from '../../img/icons/continue.png';\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { setNewAuction } from '../../store/actions/newAuction';\nimport { getUnapprovedAuctionsByUserFromDB } from '../../utils/auctionManagerUtils';\nimport Row from './ContinueNewAuctionRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst createData = auction => {\n  let name = auction.name;\n  let productsQty = auction.productList;\n  let purchasePackages = auction.purchasePackage;\n  let lotteriesDate = auction.lotteriesDate;\n  if (productsQty) productsQty = productsQty.length;else productsQty = 0;\n  if (purchasePackages) purchasePackages = purchasePackages.length;else purchasePackages = 0;\n  return {\n    name,\n    productsQty,\n    purchasePackages,\n    lotteriesDate,\n    history: [{\n      date: '2020-01-05',\n      customerId: '11091700',\n      amount: 3\n    }, {\n      date: '2020-01-02',\n      customerId: 'Anonymous',\n      amount: 1\n    }]\n  };\n};\n\nconst ContinueNewAuction = props => {\n  _s();\n\n  const [auctionsList, setAuctionsList] = useState([]); //המכירות שלו שעדיין לא אושרו לתצוגה\n\n  useEffect(() => {\n    getUnapprovedAuctionsByUserFromDB(props.currentUser._id).then(succ => {\n      if (succ.status != 400) {\n        setAuctionsList(succ.data);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    id: \"unapproved-auctions-list\",\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      \"aria-label\": \"collapsible table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Chiense auction name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Purchase packages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Lotteries date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: auctionsList.map(a => {\n          let row = createData(a);\n          return /*#__PURE__*/_jsxDEV(Row, {\n            row: row,\n            auction: a\n          }, row.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}; //TODO לעשות כאן\n\n\n_s(ContinueNewAuction, \"afF+GET59T1HDXbFYtqM3TA+Wvg=\");\n\n_c = ContinueNewAuction;\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.user.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setNewAuction\n})(ContinueNewAuction);\n\nvar _c;\n\n$RefreshReg$(_c, \"ContinueNewAuction\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/new auction/ContinueNewAuction.js"],"names":["React","useEffect","useState","Box","Collapse","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","Paper","KeyboardArrowDownIcon","KeyboardArrowUpIcon","Continue","Link","connect","setNewAuction","getUnapprovedAuctionsByUserFromDB","Row","createData","auction","name","productsQty","productList","purchasePackages","purchasePackage","lotteriesDate","length","history","date","customerId","amount","ContinueNewAuction","props","auctionsList","setAuctionsList","currentUser","_id","then","succ","status","data","map","a","row","mapStateToProps","state","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport KeyboardArrowDownIcon from '../../img/icons/arrow-down.png';\r\nimport KeyboardArrowUpIcon from '../../img/icons/arrow-up.png';\r\nimport Continue from '../../img/icons/continue.png';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { setNewAuction } from '../../store/actions/newAuction'\r\nimport { getUnapprovedAuctionsByUserFromDB } from '../../utils/auctionManagerUtils';\r\nimport Row from './ContinueNewAuctionRow'\r\nconst createData = (auction) => {\r\n    let name = auction.name;\r\n    let productsQty = auction.productList;\r\n    let purchasePackages = auction.purchasePackage;\r\n    let lotteriesDate = auction.lotteriesDate;\r\n    if (productsQty) productsQty = productsQty.length;\r\n    else productsQty = 0;\r\n    if (purchasePackages) purchasePackages = purchasePackages.length;\r\n    else purchasePackages = 0;\r\n    return {\r\n        name, productsQty, purchasePackages, lotteriesDate,\r\n        history: [\r\n            {\r\n                date: '2020-01-05',\r\n                customerId: '11091700',\r\n                amount: 3,\r\n            },\r\n            {\r\n                date: '2020-01-02',\r\n                customerId: 'Anonymous',\r\n                amount: 1,\r\n            },\r\n        ],\r\n    };\r\n}\r\n\r\n\r\nconst ContinueNewAuction = (props) => {\r\n\r\n    const [auctionsList, setAuctionsList] = useState([]);//המכירות שלו שעדיין לא אושרו לתצוגה\r\n\r\n    useEffect(() => {\r\n        getUnapprovedAuctionsByUserFromDB(props.currentUser._id).then(succ => {\r\n            if (succ.status != 400) { setAuctionsList(succ.data); }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <TableContainer component={Paper} id={\"unapproved-auctions-list\"}>\r\n            <Table aria-label=\"collapsible table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell /> {/* האייקון של פתח/סגור */}\r\n                        <TableCell>Chiense auction name</TableCell>\r\n                        <TableCell align=\"right\">Purchase packages</TableCell>\r\n                        <TableCell align=\"right\">Products</TableCell>\r\n                        <TableCell align=\"right\">Lotteries date</TableCell>\r\n                        <TableCell /> {/* האייקון של המשך מכירה זו */}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {auctionsList.map((a) => {\r\n                        let row = createData(a);\r\n                        return <Row key={row.name} row={row} auction={a} />\r\n                    })}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n//TODO לעשות כאן\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.user.currentUser\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { setNewAuction })(ContinueNewAuction);"]},"metadata":{},"sourceType":"module"}