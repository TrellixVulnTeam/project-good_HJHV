{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\new auction\\\\OrganizationInformation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { setNewAuction } from '../../store/actions/newAuction';\nimport { saveOrganizationInformationInDB } from '../../utils/newAuctionUtils';\nimport { connect } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { TextField } from \"@mui/material\";\nimport './NewAuction.scss';\nimport Button from '@mui/material/Button';\nimport { makeStyles } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport axios from 'axios';\nimport uploadImg from '../../img/upload.png';\nimport { setUserByStorage, setCurrentAuctionByStorage, setNewAuctionByStorage } from '../../store/actions/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrganizationInformation = props => {\n  _s();\n\n  useEffect(() => {\n    let id = localStorage.getItem(\"user\");\n\n    if (id) {\n      let a_id = localStorage.getItem(\"currentAuction\");\n      let n_a_id = localStorage.getItem(\"newAuction\");\n      if (a_id) props.setCurrentAuctionByStorage(a_id);\n      if (n_a_id) props.setNewAuctionByStorage(n_a_id);\n      props.setUserByStorage(id);\n    }\n  }, []);\n  let details = {\n    organizationName: \"\",\n    organizationText: \"\",\n    organizationPhotos: [],\n    logo: \"\"\n  };\n\n  let submit = (data, e) => {\n    e.preventDefault();\n    details.organizationName = data.organizationName;\n    details.organizationText = data.organizationText;\n    details.logo = imagePath;\n    saveOrganizationInformationInDB(props.auctionId, details).then(succ => {\n      console.log(succ.data);\n      if (succ.status != 400) props.setNewAuction(succ.data);\n    });\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [imagePath, setImagePath] = useState(props.auction.logo);\n\n  const onChangeHandler = event => {\n    const data = new FormData();\n    data.append('file', event.target.files[0]);\n    axios.post(\"http://localhost:5000/upload\", data, {// receive two parameter endpoint url ,form data \n    }).then(res => {\n      // then print response status\n      console.log(res);\n      setImagePath(\"http://localhost:5000/images/\" + res.data.filename);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit(submit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs-in-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: \"txt\",\n        variant: \"standard\",\n        defaultValue: props.auction.organizationName,\n        ...register('organizationName', {\n          required: false\n        }),\n        id: \"input-with-icon-grid\",\n        label: \"Organization Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"txt\",\n        multiline: true,\n        variant: \"standard\",\n        defaultValue: props.auction.organizationText,\n        ...register('organizationText', {\n          required: false\n        }),\n        id: \"input-with-icon-grid\",\n        label: \"Organization Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your organization's logo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imagePath || uploadImg,\n          style: {\n            width: 'auto',\n            height: 'auto',\n            maxHeight: '25vh',\n            maxWidth: '15vw'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            display: \"none\"\n          },\n          id: \"contained-button-file\",\n          accept: \"image/*\",\n          type: \"file\",\n          onChange: onChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"contained-button-file\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            component: \"span\",\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"positive ui button\",\n      type: \"submit\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 13\n  }, this);\n};\n\n_s(OrganizationInformation, \"VDmjTjohf3zbHmmT2e+S39ktZgU=\", false, function () {\n  return [useForm];\n});\n\n_c = OrganizationInformation;\n\nconst mapStateToProps = state => {\n  return {\n    auctionId: state.auction.newAuction._id,\n    auction: state.auction.newAuction\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setNewAuction\n})(OrganizationInformation);\n\nvar _c;\n\n$RefreshReg$(_c, \"OrganizationInformation\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/new auction/OrganizationInformation.js"],"names":["React","useEffect","useState","setNewAuction","saveOrganizationInformationInDB","connect","useForm","TextField","Button","makeStyles","IconButton","axios","uploadImg","setUserByStorage","setCurrentAuctionByStorage","setNewAuctionByStorage","OrganizationInformation","props","id","localStorage","getItem","a_id","n_a_id","details","organizationName","organizationText","organizationPhotos","logo","submit","data","e","preventDefault","imagePath","auctionId","then","succ","console","log","status","register","handleSubmit","formState","errors","setImagePath","auction","onChangeHandler","event","FormData","append","target","files","post","res","filename","required","width","height","maxHeight","maxWidth","display","mapStateToProps","state","newAuction","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { setNewAuction } from '../../store/actions/newAuction';\r\nimport { saveOrganizationInformationInDB } from '../../utils/newAuctionUtils';\r\nimport { connect } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { TextField } from \"@mui/material\";\r\nimport './NewAuction.scss'\r\nimport Button from '@mui/material/Button';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport axios from 'axios';\r\nimport uploadImg from '../../img/upload.png'\r\nimport { setUserByStorage, setCurrentAuctionByStorage, setNewAuctionByStorage } from '../../store/actions/user';\r\nconst OrganizationInformation = (props) => {\r\n\r\n    useEffect(() => {\r\n        let id = localStorage.getItem(\"user\");\r\n        if (id) {\r\n            let a_id = localStorage.getItem(\"currentAuction\");\r\n            let n_a_id = localStorage.getItem(\"newAuction\");\r\n            if (a_id) props.setCurrentAuctionByStorage(a_id);\r\n            if (n_a_id) props.setNewAuctionByStorage(n_a_id);\r\n            props.setUserByStorage(id);\r\n        }\r\n    },[])\r\n\r\n\r\n    let details = {\r\n        organizationName: \"\",\r\n        organizationText: \"\",\r\n        organizationPhotos: [],\r\n        logo: \"\"\r\n    }\r\n    let submit = (data, e) => {\r\n        e.preventDefault();\r\n        details.organizationName = data.organizationName;\r\n        details.organizationText = data.organizationText;\r\n        details.logo = imagePath;\r\n\r\n        saveOrganizationInformationInDB(props.auctionId, details).then(succ => {\r\n            console.log(succ.data);\r\n            if (succ.status != 400)\r\n                props.setNewAuction(succ.data)\r\n        })\r\n    }\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const [imagePath, setImagePath] = useState(props.auction.logo);\r\n    const onChangeHandler = event => {\r\n        const data = new FormData()\r\n        data.append('file', event.target.files[0]);\r\n        axios.post(\"http://localhost:5000/upload\", data, { // receive two parameter endpoint url ,form data \r\n        }).then(res => { // then print response status\r\n            console.log(res);\r\n            setImagePath(\"http://localhost:5000/images/\" + res.data.filename);\r\n        })\r\n    }\r\n    return (<form noValidate autoComplete=\"off\" onSubmit={handleSubmit(submit)}>\r\n        <div className={\"inputs-in-form-container\"}>\r\n            <TextField className=\"txt\" variant=\"standard\" defaultValue={props.auction.organizationName} {...register('organizationName', { required: false })} id=\"input-with-icon-grid\" label=\"Organization Name\" />\r\n            <TextField\r\n                className=\"txt\"\r\n                multiline\r\n                variant=\"standard\"\r\n                defaultValue={props.auction.organizationText}\r\n                {...register('organizationText', { required: false })}\r\n                id=\"input-with-icon-grid\"\r\n                label=\"Organization Text\" />\r\n\r\n\r\n            {/* <label>Upload photos of the organization</label> */}{/* TODO */}\r\n            <div>\r\n                <h3>Your organization's logo:</h3>\r\n                <img src={imagePath || uploadImg} style={{ width: 'auto', height: 'auto', maxHeight: '25vh', maxWidth: '15vw' }} />\r\n                <input style={{ display: \"none\" }} id=\"contained-button-file\" accept=\"image/*\" type=\"file\" onChange={onChangeHandler} />\r\n                <label htmlFor=\"contained-button-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                        Upload\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        {/* <button className=\"positive ui button\" {...register('organizationPhotos', { required: false })}>Upload Photos</button> */}\r\n        <button className=\"positive ui button\" type=\"submit\">Save</button>\r\n    </form >)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auctionId: state.auction.newAuction._id,\r\n        auction: state.auction.newAuction\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { setNewAuction, })(OrganizationInformation);"]},"metadata":{},"sourceType":"module"}