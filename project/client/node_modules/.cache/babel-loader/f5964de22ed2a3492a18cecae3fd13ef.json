{"ast":null,"code":"import * as actionTypes from '../actionTypes';\nexport const initialState = {\n  currentUser: null,\n  loginIsOpen: false,\n  ordersList: [],\n  //?\n  shoppingCartOfCurrentAuction: [],\n  wantContact: false\n};\nexport const userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_LOGIN:\n      return { ...state,\n        loginIsOpen: action.payload\n      };\n\n    case actionTypes.SET_WANT_CONTACT:\n      {\n        alert(action.payload);\n      }\n      return { ...state,\n        wantContact: action.payload\n      };\n\n    case actionTypes.SET_CURRENT_USER:\n      {\n        return { ...state,\n          currentUser: action.payload\n        };\n      }\n\n    case actionTypes.SIGN_IN_OF_STATE:\n      {\n        return { ...state,\n          currentUser: action.payload,\n          loginIsOpen: false\n        };\n      }\n\n    case actionTypes.UPDATE_SHOPPING_CART:\n      {\n        return { ...state,\n          shoppingCartOfCurrentAuction: action.payload\n        };\n      }\n    // case actionTypes.ADD_PRODUCT_TO_CART:\n    //     {\n    //         let _id = action.payload.product._id;\n    //         let cnt = action.payload.cnt;\n    //         let index = state.currentUser.shoppingCart.findIndex(item => item.product._id == _id);\n    //         let arr = [...state.currentUser.shoppingCart];\n    //         if (index == -1) arr.push(action.payload);\n    //         else arr[index].cnt += cnt;\n    //         return {\n    //             ...state,\n    //             shoppingCart: arr\n    //         }\n    //     }\n    // case actionTypes.DELETE_PRODUCT_FROM_CART:\n    //     {\n    //         let arr2 = state.shoppingCart.\n    //             filter(p => p.product._id !== action.payload)\n    //         return {\n    //             ...state,\n    //             shoppingCart: arr2\n    //         }\n    //     }\n    // case actionTypes.SET_CNT_PRODUCT_IN_CART:\n    //     {\n    //         let _id = action.payload._id;\n    //         let cnt = action.payload.cnt;\n    //         let index = state.shoppingCart.findIndex(item => item.product._id == _id);\n    //         let arr = [...state.shoppingCart];\n    //         if (index != -1) arr[index].cnt = cnt;\n    //         return {\n    //             ...state,\n    //             shoppingCart: arr\n    //         }\n    //     }\n\n    case actionTypes.SIGN_OUT:\n      {\n        //יציאת משתמש\n        //איפוס נתונים\n        return {\n          currentUser: null,\n          loginIsOpen: false,\n          yourProfileIsOpen: false,\n          shoppingCart: [],\n          wantContact: false\n        };\n      }\n\n    case actionTypes.UPDATE_USER_STATE:\n      {\n        //עידכון משתמש נוכחי\n        return { ...state //TODO ??\n\n        };\n      }\n\n    case actionTypes.SET_USER_ORDERS:\n      {\n        return { ...state,\n          ordersList: action.payload\n        };\n      }\n  }\n\n  return state;\n};","map":{"version":3,"sources":["D:/project-good/project/client/src/store/reducers/userState.js"],"names":["actionTypes","initialState","currentUser","loginIsOpen","ordersList","shoppingCartOfCurrentAuction","wantContact","userReducer","state","action","type","SET_LOGIN","payload","SET_WANT_CONTACT","alert","SET_CURRENT_USER","SIGN_IN_OF_STATE","UPDATE_SHOPPING_CART","SIGN_OUT","yourProfileIsOpen","shoppingCart","UPDATE_USER_STATE","SET_USER_ORDERS"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,gBAA7B;AACA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,WAAW,EAAE,IADW;AAExBC,EAAAA,WAAW,EAAE,KAFW;AAGxBC,EAAAA,UAAU,EAAE,EAHY;AAGT;AACfC,EAAAA,4BAA4B,EAAE,EAJN;AAKxBC,EAAAA,WAAW,EAAE;AALW,CAArB;AAOP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACzD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,WAAW,CAACW,SAAjB;AACI,aAAO,EACH,GAAGH,KADA;AAEHL,QAAAA,WAAW,EAAEM,MAAM,CAACG;AAFjB,OAAP;;AAIJ,SAAKZ,WAAW,CAACa,gBAAjB;AACI;AAACC,QAAAA,KAAK,CAACL,MAAM,CAACG,OAAR,CAAL;AAAsB;AACvB,aAAO,EACH,GAAGJ,KADA;AAEHF,QAAAA,WAAW,EAAEG,MAAM,CAACG;AAFjB,OAAP;;AAIJ,SAAKZ,WAAW,CAACe,gBAAjB;AACI;AACI,eAAO,EACH,GAAGP,KADA;AAEHN,UAAAA,WAAW,EAAEO,MAAM,CAACG;AAFjB,SAAP;AAIH;;AACL,SAAKZ,WAAW,CAACgB,gBAAjB;AAAmC;AAC/B,eAAO,EACH,GAAGR,KADA;AAEHN,UAAAA,WAAW,EAAEO,MAAM,CAACG,OAFjB;AAGHT,UAAAA,WAAW,EAAE;AAHV,SAAP;AAKH;;AACD,SAAKH,WAAW,CAACiB,oBAAjB;AAAuC;AACnC,eAAO,EACH,GAAGT,KADA;AAEHH,UAAAA,4BAA4B,EAAEI,MAAM,CAACG;AAFlC,SAAP;AAIH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAKZ,WAAW,CAACkB,QAAjB;AACI;AACI;AACA;AACA,eAAO;AACHhB,UAAAA,WAAW,EAAE,IADV;AAEHC,UAAAA,WAAW,EAAE,KAFV;AAGHgB,UAAAA,iBAAiB,EAAE,KAHhB;AAIHC,UAAAA,YAAY,EAAE,EAJX;AAKHd,UAAAA,WAAW,EAAC;AALT,SAAP;AAOH;;AACL,SAAKN,WAAW,CAACqB,iBAAjB;AAAoC;AAChC;AACA,eAAO,EACH,GAAGb,KADA,CAEH;;AAFG,SAAP;AAIH;;AACD,SAAKR,WAAW,CAACsB,eAAjB;AAAkC;AAC9B,eAAO,EACH,GAAGd,KADA;AAEHJ,UAAAA,UAAU,EAAEK,MAAM,CAACG;AAFhB,SAAP;AAIH;AA1FL;;AA4FA,SAAOJ,KAAP;AACH,CA9FM","sourcesContent":["import * as actionTypes from '../actionTypes';\r\nexport const initialState = {\r\n    currentUser: null,\r\n    loginIsOpen: false,\r\n    ordersList: [],//?\r\n    shoppingCartOfCurrentAuction: [],\r\n    wantContact: false\r\n}\r\nexport const userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_LOGIN:\r\n            return {\r\n                ...state,\r\n                loginIsOpen: action.payload\r\n            } \r\n        case actionTypes.SET_WANT_CONTACT:\r\n            {alert(action.payload)}\r\n            return {\r\n                ...state,\r\n                wantContact: action.payload\r\n            }\r\n        case actionTypes.SET_CURRENT_USER:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    currentUser: action.payload,\r\n                }\r\n            }\r\n        case actionTypes.SIGN_IN_OF_STATE: {\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload,\r\n                loginIsOpen: false\r\n            }\r\n        }\r\n        case actionTypes.UPDATE_SHOPPING_CART: {\r\n            return {\r\n                ...state,\r\n                shoppingCartOfCurrentAuction: action.payload\r\n            }\r\n        }\r\n        // case actionTypes.ADD_PRODUCT_TO_CART:\r\n        //     {\r\n        //         let _id = action.payload.product._id;\r\n        //         let cnt = action.payload.cnt;\r\n        //         let index = state.currentUser.shoppingCart.findIndex(item => item.product._id == _id);\r\n        //         let arr = [...state.currentUser.shoppingCart];\r\n        //         if (index == -1) arr.push(action.payload);\r\n        //         else arr[index].cnt += cnt;\r\n        //         return {\r\n        //             ...state,\r\n        //             shoppingCart: arr\r\n        //         }\r\n        //     }\r\n        // case actionTypes.DELETE_PRODUCT_FROM_CART:\r\n        //     {\r\n        //         let arr2 = state.shoppingCart.\r\n        //             filter(p => p.product._id !== action.payload)\r\n        //         return {\r\n        //             ...state,\r\n        //             shoppingCart: arr2\r\n        //         }\r\n        //     }\r\n        // case actionTypes.SET_CNT_PRODUCT_IN_CART:\r\n        //     {\r\n        //         let _id = action.payload._id;\r\n        //         let cnt = action.payload.cnt;\r\n        //         let index = state.shoppingCart.findIndex(item => item.product._id == _id);\r\n        //         let arr = [...state.shoppingCart];\r\n        //         if (index != -1) arr[index].cnt = cnt;\r\n        //         return {\r\n        //             ...state,\r\n        //             shoppingCart: arr\r\n        //         }\r\n        //     }\r\n        case actionTypes.SIGN_OUT:\r\n            {\r\n                //יציאת משתמש\r\n                //איפוס נתונים\r\n                return {\r\n                    currentUser: null,\r\n                    loginIsOpen: false,\r\n                    yourProfileIsOpen: false,\r\n                    shoppingCart: [],\r\n                    wantContact:false\r\n                }\r\n            }\r\n        case actionTypes.UPDATE_USER_STATE: {\r\n            //עידכון משתמש נוכחי\r\n            return {\r\n                ...state,\r\n                //TODO ??\r\n            }\r\n        }\r\n        case actionTypes.SET_USER_ORDERS: {\r\n            return {\r\n                ...state,\r\n                ordersList: action.payload\r\n            }\r\n        }\r\n    }\r\n    return state;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}