{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\App.js\";\n// import 'semantic-ui-css/semantic.min.css'\n// import Home from './homePage/Home';\n// import { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n// import Auction from '../components/auction/Auction';\n// import NewAuction from '../components/new auction/NewAuction';\n// function App() {\n//   return (\n//     <Router>\n//       <div>\n//         <Switch>\n//           <Route path={`/auction`}><Auction /></Route>\n//           <Route path={`/home`}><Home /></Route>\n//           <Route path={`/newAuction`}><NewAuction/></Route>        \n//           <Route exact path={`/`}><Home /></Route>\n//         </Switch>\n//       </div>\n//     </Router>\n//   );\n// }\nimport React from \"react\";\nimport Uploady from \"@rpldy/uploady\";\nimport UploadButton from \"@rpldy/upload-button\";\nimport UploadPreview from \"@rpldy/upload-preview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst filterBySize = file => {\n  //filter out images larger than 5MB\n  console.log(file.name);\n  return file.size <= 5242880;\n};\n\nconst App = () => /*#__PURE__*/_jsxDEV(Uploady, {\n  destination: {\n    url: \"my-server.com/upload\"\n  },\n  fileFilter: filterBySize,\n  accept: \"image/*\",\n  children: [/*#__PURE__*/_jsxDEV(UploadButton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(UploadPreview, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 3\n}, this);\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/project-good/project/client/src/components/App.js"],"names":["React","Uploady","UploadButton","UploadPreview","filterBySize","file","console","log","name","size","App","url"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;;AAEA,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAC7B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB;AAEA,SAAOH,IAAI,CAACI,IAAL,IAAa,OAApB;AACD,CALD;;AAOA,MAAMC,GAAG,GAAG,mBACV,QAAC,OAAD;AACE,EAAA,WAAW,EAAE;AAAEC,IAAAA,GAAG,EAAE;AAAP,GADf;AAEE,EAAA,UAAU,EAAEP,YAFd;AAGE,EAAA,MAAM,EAAC,SAHT;AAAA,0BAME,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,UANF,eAOE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,UAPF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMM,G;AAYN,eAAeA,GAAf","sourcesContent":["// import 'semantic-ui-css/semantic.min.css'\r\n// import Home from './homePage/Home';\r\n// import { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\r\n// import Auction from '../components/auction/Auction';\r\n// import NewAuction from '../components/new auction/NewAuction';\r\n\r\n// function App() {\r\n//   return (\r\n//     <Router>\r\n//       <div>\r\n//         <Switch>\r\n//           <Route path={`/auction`}><Auction /></Route>\r\n//           <Route path={`/home`}><Home /></Route>\r\n//           <Route path={`/newAuction`}><NewAuction/></Route>        \r\n//           <Route exact path={`/`}><Home /></Route>\r\n\r\n//         </Switch>\r\n//       </div>\r\n//     </Router>\r\n//   );\r\n// }\r\n\r\nimport React from \"react\";\r\nimport Uploady from \"@rpldy/uploady\";\r\nimport UploadButton from \"@rpldy/upload-button\";\r\nimport UploadPreview from \"@rpldy/upload-preview\";\r\n\r\nconst filterBySize = (file) => {\r\n  //filter out images larger than 5MB\r\n  console.log(file.name);\r\n  \r\n  return file.size <= 5242880;\r\n};\r\n\r\nconst App = () => (\r\n  <Uploady\r\n    destination={{ url: \"my-server.com/upload\" }}\r\n    fileFilter={filterBySize}\r\n    accept=\"image/*\"\r\n    \r\n  >\r\n    <UploadButton />\r\n    <UploadPreview />   \r\n  </Uploady>\r\n);\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}