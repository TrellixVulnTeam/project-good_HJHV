{"ast":null,"code":"import * as actionTypes from '../actionTypes';\nimport axios from 'axios';\nimport { setCurrentUser } from './signUp';\nexport const updateCurrentUser = user => {\n  return {\n    type: actionTypes.UPDATE_CURRENT_USER,\n    payload: user\n  };\n}; //עדכון פרטי משתמש\n\nexport const updateUser = user => {\n  return dispatch => {\n    axios.put(`http://localhost:5000/users/${user._id}`, user).then(succ => {\n      let tmp = JSON.parse(localStorage.getItem('user'));\n\n      if (succ.status != 400) {\n        dispatch(setCurrentUser(succ.data), //עדכון בסטייט\n        tmp['currentUser'] = succ.data, localStorage.setItem(\"user\", JSON.stringify(tmp)) //עדכון בלוקל-סטורג\n        );\n      }\n    });\n  };\n}; //מראה את הטבלה ההזמנות של משתמש קיים \n//של משתמש קיים ומחזירה את ההזמנות של אותו משתמש _id מקבלת  \n\nexport const getOrdersList = user => {\n  let id = user._id;\n  return dispatch => {\n    axios.get(`http://localhost:5000/orders/orderList/${id}`).then(succ => {\n      if (succ.status != 400) return succ.data;\n    });\n  };\n}; //בלחיצה על כפתור הצג הזמנה \n//של הזמנה ומחזירה את ההזמנה_id מקבלת \n\nexport const getOrderById = order => {\n  let id = order._id;\n  return dispatch => {\n    axios.get(`http://localhost:5000/orders/${id}`).then(succ => {\n      if (succ.status != 400) return succ.data;\n    });\n  };\n};\nexport const addOrderToState = order => {\n  return {\n    type: actionTypes.ADD_ORDER,\n    payload: order\n  };\n};\nexport const signOut = () => {\n  return {\n    type: actionTypes.SIGN_OUT\n  };\n};\nexport const updateShoppingCart = arr => {\n  return {\n    type: actionTypes.UPDATE_SHOPPING_CART,\n    payload: arr\n  };\n}; //הוספת הזמנה\n\nexport const addOrderToDB = order => {\n  return dispatch => {\n    axios.post(`http://localhost:5000/orders`, order).then(succ => {\n      console.log(succ.data);\n      if (succ.status != 400) dispatch(console.log(succ.data));\n    });\n  };\n}; //מחזירה הזמנה עפ\"י קוד משתמש ומכירה\n\nexport const getOrderByToUserCodeAndAuction = (user_id, auction_id) => {\n  return dispatch => {\n    axios.get(`http://localhost:5000/orders/${user_id}&${auction_id}`).then(succ => {\n      if (succ.status != 400) {\n        const arr = succ.data.orderDetails;\n        dispatch();\n      }\n    });\n  };\n};","map":{"version":3,"sources":["D:/project-good/project/client/src/store/actions/user.js"],"names":["actionTypes","axios","setCurrentUser","updateCurrentUser","user","type","UPDATE_CURRENT_USER","payload","updateUser","dispatch","put","_id","then","succ","tmp","JSON","parse","localStorage","getItem","status","data","setItem","stringify","getOrdersList","id","get","getOrderById","order","addOrderToState","ADD_ORDER","signOut","SIGN_OUT","updateShoppingCart","arr","UPDATE_SHOPPING_CART","addOrderToDB","post","console","log","getOrderByToUserCodeAndAuction","user_id","auction_id","orderDetails"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actionTypes';\r\nimport axios from 'axios';\r\nimport { setCurrentUser } from './signUp'\r\n\r\n\r\nexport const updateCurrentUser = (user) => {\r\n    return {\r\n        type: actionTypes.UPDATE_CURRENT_USER,\r\n        payload: user\r\n    }\r\n}\r\n\r\n//עדכון פרטי משתמש\r\nexport const updateUser = (user) => {\r\n    return (dispatch) => {\r\n        axios.put(`http://localhost:5000/users/${user._id}`, user).then(succ => {\r\n            let tmp = JSON.parse(localStorage.getItem('user'));\r\n            if (succ.status != 400) {\r\n                dispatch(\r\n                    setCurrentUser(succ.data),//עדכון בסטייט\r\n                    tmp['currentUser'] = succ.data,\r\n                    localStorage.setItem(\"user\", JSON.stringify(tmp))//עדכון בלוקל-סטורג\r\n                )\r\n\r\n            }\r\n        });\r\n    }\r\n}\r\n    //מראה את הטבלה ההזמנות של משתמש קיים \r\n    //של משתמש קיים ומחזירה את ההזמנות של אותו משתמש _id מקבלת  \r\n    export const getOrdersList = (user) => {\r\n        let id = user._id;\r\n        return (dispatch) => {\r\n            axios.get(`http://localhost:5000/orders/orderList/${id}`).then(succ => {\r\n                if (succ.status != 400)\r\n                    return succ.data;\r\n            })\r\n        }\r\n    }\r\n    //בלחיצה על כפתור הצג הזמנה \r\n    //של הזמנה ומחזירה את ההזמנה_id מקבלת \r\n    export const getOrderById = (order) => {\r\n        let id = order._id;\r\n        return (dispatch) => {\r\n            axios.get(`http://localhost:5000/orders/${id}`).then(succ => {\r\n                if (succ.status != 400)\r\n                    return succ.data;\r\n            })\r\n        }\r\n    }\r\n    export const addOrderToState = (order) => {\r\n        return {\r\n            type: actionTypes.ADD_ORDER,\r\n            payload: order\r\n        }\r\n    }\r\n    export const signOut = () => {\r\n        return {\r\n            type: actionTypes.SIGN_OUT\r\n        }\r\n    }\r\n\r\n    export const updateShoppingCart = (arr) => {\r\n        return {\r\n            type: actionTypes.UPDATE_SHOPPING_CART,\r\n            payload: arr\r\n        }\r\n    }\r\n\r\n\r\n    //הוספת הזמנה\r\n    export const addOrderToDB = (order) => {\r\n        return (dispatch) => {\r\n            axios.post(`http://localhost:5000/orders`, order).then(succ => {\r\n                console.log(succ.data);\r\n                if (succ.status != 400)\r\n                    dispatch(console.log(succ.data));\r\n            })\r\n        }\r\n    }\r\n\r\n    //מחזירה הזמנה עפ\"י קוד משתמש ומכירה\r\n    export const getOrderByToUserCodeAndAuction = (user_id, auction_id) => {\r\n        return (dispatch) => {\r\n            axios.get(`http://localhost:5000/orders/${user_id}&${auction_id}`).then(succ => {\r\n                if (succ.status != 400) {\r\n                    const arr = (succ.data).orderDetails;\r\n                    dispatch(/*localStorage.setItem(\"prodactsInCart\", JSON.stringify(arr))*/);\r\n                }\r\n            })\r\n        }\r\n    }"]},"metadata":{},"sourceType":"module"}