{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\new auction\\\\uploading products\\\\AddProductForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { addProductToDB } from \"../../../utils/newAuctionUtils\";\nimport { connect } from \"react-redux\";\nimport { addProduct } from '../../../store/actions/newAuction';\nimport { useForm } from \"react-hook-form\";\nimport Checkbox from '@mui/material/Checkbox';\nimport { TextField } from \"@mui/material\";\nimport FormControlLabel from '@mui/material/FormControlLabel'; // import { LoginFromStorage, GetDataFromStorage } from '../../../store/actions/home';\n\nimport Grid from '@mui/material/Grid';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\nimport { makeStyles } from '@material-ui/core';\nimport upload_src from '../../../img/icons/uploadImg.png';\nimport IconButton from '@material-ui/core/IconButton';\nimport '../NewAuction.scss';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddProductForm = props => {\n  _s();\n\n  let submit = (data, e) => {\n    e.preventDefault();\n    let newProduct = {\n      image: \"\",\n      name: \"\",\n      description: \"\",\n      price: 0,\n      includedInPackages: true\n    };\n    newProduct.name = data.name;\n    newProduct.description = data.description;\n    newProduct.price = parseInt(data.price);\n    newProduct.includedInPackages = data.includedInPackages;\n    debugger;\n    newProduct.image = imagePath;\n    addProductToDB(props.auctionId, newProduct).then(succ => {\n      if (succ.status != 400) props.addProduct(succ.data);\n    });\n  };\n\n  const [imagePath, setImagePath] = useState(\"\");\n\n  const onChangeHandler = event => {\n    console.log(event.target.files[0]);\n    const data = new FormData();\n    data.append('file', event.target.files[0]);\n    axios.post(\"http://localhost:5000/upload\", data, {// receive two parameter endpoint url ,form data \n    }).then(res => {\n      // then print response status\n      console.log(res);\n      setImagePath(\"http://localhost:5000/images/\" + res.data.filename);\n    });\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  useEffect(() => {\n    /* if (props.currentUser == null) LoginFromStorage();\r\n     if (props.newAuction == null) GetDataFromStorage();*/\n  }, []); // const Input = styled('input')({\n  // });\n\n  return (\n    /*#__PURE__*/\n    // noValidate\n    _jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      onSubmit: handleSubmit(submit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputs-in-form-container\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: \"txt\",\n          variant: \"standard\",\n          ...register('name', {\n            required: true\n          }),\n          id: \"input-with-icon-grid\",\n          label: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"txt\",\n          variant: \"standard\",\n          multiline: true,\n          ...register('description', {\n            required: false\n          }),\n          id: \"input-with-icon-grid\",\n          label: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"txt\",\n          type: \"number\",\n          variant: \"standard\",\n          ...register('price', {\n            required: true\n          }),\n          id: \"input-with-icon-grid\",\n          label: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagePath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          display: \"none\"\n        },\n        id: \"contained-button-file\",\n        type: \"file\",\n        onChange: onChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"contained-button-file\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          component: \"span\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          defaultChecked: true,\n          ...register('includedInPackages'),\n          id: \"input-with-icon-grid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 26\n        }, this),\n        label: \"Included in packages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(AddProductForm, \"eIN+MXoRBKwEAWLvIM/2N7aYGF0=\", false, function () {\n  return [useForm];\n});\n\n_c = AddProductForm;\n\nconst mapStateToProps = state => {\n  return {\n    auctionId: state.auction.newAuction._id,\n    arr: state.auction.newAuction.productList,\n    newAuction: state.auction.newAuction\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addProduct\n})(AddProductForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProductForm\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/new auction/uploading products/AddProductForm.js"],"names":["React","useRef","useState","useEffect","addProductToDB","connect","addProduct","useForm","Checkbox","TextField","FormControlLabel","Grid","styled","Box","Paper","Container","Button","makeStyles","upload_src","IconButton","axios","AddProductForm","props","submit","data","e","preventDefault","newProduct","image","name","description","price","includedInPackages","parseInt","imagePath","auctionId","then","succ","status","setImagePath","onChangeHandler","event","console","log","target","files","FormData","append","post","res","filename","register","handleSubmit","formState","errors","required","display","mapStateToProps","state","auction","newAuction","_id","arr","productList"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { addProductToDB } from \"../../../utils/newAuctionUtils\";\r\nimport { connect } from \"react-redux\";\r\nimport { addProduct } from '../../../store/actions/newAuction';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { TextField } from \"@mui/material\";\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n// import { LoginFromStorage, GetDataFromStorage } from '../../../store/actions/home';\r\nimport Grid from '@mui/material/Grid';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Container from '@mui/material/Container';\r\nimport Button from '@mui/material/Button';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport upload_src from '../../../img/icons/uploadImg.png'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport '../NewAuction.scss'\r\nimport axios from 'axios';\r\n\r\nconst AddProductForm = (props) => {\r\n\r\n    let submit = (data, e) => {\r\n        e.preventDefault();\r\n        let newProduct = { image: \"\", name: \"\", description: \"\", price: 0, includedInPackages: true };\r\n\r\n        newProduct.name = data.name;\r\n        newProduct.description = data.description;\r\n        newProduct.price = parseInt(data.price);\r\n        newProduct.includedInPackages = data.includedInPackages;\r\n        debugger;\r\n        newProduct.image = imagePath;\r\n\r\n        addProductToDB(props.auctionId, newProduct).then(succ => { if (succ.status != 400) props.addProduct(succ.data); })\r\n\r\n    }\r\n    const [imagePath, setImagePath] = useState(\"\");\r\n    const onChangeHandler = event => {\r\n\r\n        console.log(event.target.files[0])\r\n        const data = new FormData()\r\n        data.append('file', event.target.files[0]);\r\n        axios.post(\"http://localhost:5000/upload\", data, { // receive two parameter endpoint url ,form data \r\n        })\r\n            .then(res => { // then print response status\r\n                console.log(res);\r\n                setImagePath(\"http://localhost:5000/images/\" + res.data.filename);\r\n            })\r\n    }\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n\r\n    useEffect(() => {\r\n        /* if (props.currentUser == null) LoginFromStorage();\r\n         if (props.newAuction == null) GetDataFromStorage();*/\r\n    }, [])\r\n    // const Input = styled('input')({\r\n    // });\r\n\r\n    return (\r\n        // noValidate\r\n        <form autoComplete=\"off\" onSubmit={handleSubmit(submit)}>\r\n            <div className={\"inputs-in-form-container\"}>\r\n                <TextField className=\"txt\" variant=\"standard\"  {...register('name', { required: true })} id=\"input-with-icon-grid\" label=\"Name\" />\r\n                <TextField className=\"txt\" variant=\"standard\" multiline {...register('description', { required: false })} id=\"input-with-icon-grid\" label=\"Description\" />\r\n                <TextField className=\"txt\" type=\"number\" variant=\"standard\"{...register('price', { required: true })} id=\"input-with-icon-grid\" label=\"Price\" />\r\n            </div>\r\n            <img src={imagePath}></img>\r\n            <input\r\n                style={{ display: \"none\" }}\r\n                id=\"contained-button-file\"\r\n                type=\"file\" onChange={onChangeHandler}\r\n            />\r\n            <label htmlFor=\"contained-button-file\">\r\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                    Upload\r\n                </Button>\r\n            </label>\r\n\r\n\r\n\r\n            <FormControlLabel\r\n                control={<Checkbox defaultChecked {...register('includedInPackages')} id=\"input-with-icon-grid\" />}\r\n                label=\"Included in packages\" />\r\n            <br />\r\n\r\n            <button type=\"submit\">Add</button>\r\n\r\n        </form>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auctionId: state.auction.newAuction._id,\r\n        arr: state.auction.newAuction.productList,\r\n        newAuction: state.auction.newAuction,\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { addProduct })(AddProductForm);"]},"metadata":{},"sourceType":"module"}