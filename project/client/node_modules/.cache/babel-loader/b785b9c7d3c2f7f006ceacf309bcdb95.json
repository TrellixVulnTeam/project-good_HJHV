{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\new auction\\\\OrganizationInformation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { setNewAuction } from '../../store/actions/newAuction';\nimport { saveOrganizationInformationInDB } from '../../utils/newAuctionUtils';\nimport { connect } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { TextField } from \"@mui/material\";\nimport './NewAuction.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrganizationInformation = props => {\n  _s();\n\n  let details = {\n    organizationName: \"\",\n    organizationText: \"\",\n    organizationPhoto: []\n  };\n\n  let submit = (data, e) => {\n    e.preventDefault();\n    debugger;\n    details.organizationName = data.organizationName;\n    details.organizationText = data.organizationText;\n    details.organizationPhoto = data.organizationPhoto;\n    saveOrganizationInformationInDB(props.auctionId, details).then(succ => {\n      console.log(succ.data);\n      if (succ.status != 400) props.setNewAuction(succ.data);\n    });\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  useEffect(() => {// componentWillUnmount\n    // if (props.currentUser == null && localStorage.getItem(\"login\") == \"true\")\n    //     props.signIn(localStorage.getItem(\"pass\"), localStorage.getItem(\"email\"));\n    // else if (props.currentUser == null && localStorage.getItem(\"login\") == \"google\")\n    //     props.loginGoogle(localStorage.getItem(\"name\"), localStorage.getItem(\"email\"))\n  });\n  const [imagePath, setImagePath] = useState(\"\");\n\n  const onChangeHandler = event => {\n    const data = new FormData();\n    data.append('file', event.target.files[0]);\n    axios.post(\"http://localhost:5000/upload\", data, {// receive two parameter endpoint url ,form data \n    }).then(res => {\n      // then print response status\n      console.log(res);\n      setImagePath(\"http://localhost:5000/images/\" + res.data.filename);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit(submit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs-in-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: \"txt\",\n        variant: \"standard\",\n        defaultValue: props.auction.organizationName,\n        ...register('organizationName', {\n          required: true\n        }),\n        id: \"input-with-icon-grid\",\n        label: \"Organization Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"txt\",\n        multiline: true,\n        variant: \"standard\",\n        defaultValue: props.auction.organizationText,\n        ...register('organizationText', {\n          required: false\n        }),\n        id: \"input-with-icon-grid\",\n        label: \"Organization Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Upload photos of the organization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imagePath || uploadImg,\n      style: {\n        width: 'auto',\n        height: 'auto',\n        maxHeight: '25vh',\n        maxWidth: '15vw'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        display: \"none\"\n      },\n      id: \"contained-button-file\",\n      accept: \"image/*\",\n      type: \"file\",\n      onChange: onChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"contained-button-file\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        component: \"span\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"positive ui button\",\n      ...register('organizationPhoto', {\n        required: false\n      }),\n      children: \"Upload Photos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"positive ui button\",\n      type: \"submit\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 13\n  }, this);\n};\n\n_s(OrganizationInformation, \"p+DfttOz4gRK8BU+E/EdR+Q2jWI=\", false, function () {\n  return [useForm];\n});\n\n_c = OrganizationInformation;\n\nconst mapStateToProps = state => {\n  return {\n    auctionId: state.auction.newAuction._id,\n    auction: state.auction.newAuction\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setNewAuction\n})(OrganizationInformation); // {/* <form>\n//         {/* <TextField id=\"standard-basic\" label=\"Dccc\" /> */}\n//         <label> The organization name</label>\n//         <input type=\"text\" onChange={(e) => details.organizationName = e.target.value} defaultValue={props.auction.organizationName} required={true} />\n//         <textarea defaultValue={props.auction.organizationText} onChange={(e) => details.organizationText = e.target.value}></textarea>\n//         <label>Upload photos of the organization</label>\n//         {/* לשמור תמונות שהוא מעלה */}\n//         <input type=\"button\" value=\"upload photos\" onChange={(e) => { details.organizationPhoto.push(e.target.value) }} />\n//         <br />\n//         <br />\n//         <br />\n//         <br />\n//         <input type=\"button\" value=\"save organization information\"\n//             onClick={() => saveOrganizationInformationInDB(props.auctionId, details).then(succ => {\n//                 console.log(succ.data);\n//                 if (succ.status != 400) props.setNewAuction(succ.data)\n//             })\n//             } />\n//     </form> */}\n\nvar _c;\n\n$RefreshReg$(_c, \"OrganizationInformation\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/new auction/OrganizationInformation.js"],"names":["React","useEffect","setNewAuction","saveOrganizationInformationInDB","connect","useForm","TextField","OrganizationInformation","props","details","organizationName","organizationText","organizationPhoto","submit","data","e","preventDefault","auctionId","then","succ","console","log","status","register","handleSubmit","formState","errors","imagePath","setImagePath","useState","onChangeHandler","event","FormData","append","target","files","axios","post","res","filename","auction","required","uploadImg","width","height","maxHeight","maxWidth","display","mapStateToProps","state","newAuction","_id"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { setNewAuction } from '../../store/actions/newAuction';\r\nimport { saveOrganizationInformationInDB } from '../../utils/newAuctionUtils';\r\nimport { connect } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { TextField } from \"@mui/material\";\r\nimport './NewAuction.scss'\r\nconst OrganizationInformation = (props) => {\r\n    let details = {\r\n        organizationName: \"\",\r\n        organizationText: \"\",\r\n        organizationPhoto: []\r\n    }\r\n    let submit = (data, e) => {\r\n        e.preventDefault();\r\n        debugger;\r\n        details.organizationName = data.organizationName;\r\n        details.organizationText = data.organizationText;\r\n        details.organizationPhoto = data.organizationPhoto;\r\n\r\n        saveOrganizationInformationInDB(props.auctionId, details).then(succ => {\r\n            console.log(succ.data);\r\n            if (succ.status != 400)\r\n                props.setNewAuction(succ.data)\r\n        })\r\n    }\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    useEffect(() => { // componentWillUnmount\r\n        // if (props.currentUser == null && localStorage.getItem(\"login\") == \"true\")\r\n        //     props.signIn(localStorage.getItem(\"pass\"), localStorage.getItem(\"email\"));\r\n        // else if (props.currentUser == null && localStorage.getItem(\"login\") == \"google\")\r\n        //     props.loginGoogle(localStorage.getItem(\"name\"), localStorage.getItem(\"email\"))\r\n\r\n    });\r\n    const [imagePath, setImagePath] = useState(\"\");\r\n    const onChangeHandler = event => {\r\n        const data = new FormData()\r\n        data.append('file', event.target.files[0]);\r\n        axios.post(\"http://localhost:5000/upload\", data, { // receive two parameter endpoint url ,form data \r\n        }).then(res => { // then print response status\r\n            console.log(res);\r\n            setImagePath(\"http://localhost:5000/images/\" + res.data.filename);\r\n        })\r\n    }\r\n    return (<form noValidate autoComplete=\"off\" onSubmit={handleSubmit(submit)}>\r\n        <div className={\"inputs-in-form-container\"}>\r\n            <TextField className=\"txt\" variant=\"standard\" defaultValue={props.auction.organizationName} {...register('organizationName', { required: true })} id=\"input-with-icon-grid\" label=\"Organization Name\" />\r\n            <TextField\r\n                className=\"txt\"\r\n                multiline\r\n                variant=\"standard\"\r\n                defaultValue={props.auction.organizationText}\r\n                {...register('organizationText', { required: false })}\r\n                id=\"input-with-icon-grid\"\r\n                label=\"Organization Text\" />\r\n        </div>\r\n\r\n        <label>Upload photos of the organization</label>\r\n        <img src={imagePath || uploadImg} style={{ width: 'auto', height: 'auto', maxHeight: '25vh', maxWidth: '15vw' }} />\r\n            <input style={{ display: \"none\" }} id=\"contained-button-file\"  accept=\"image/*\" type=\"file\" onChange={onChangeHandler} />\r\n            <label htmlFor=\"contained-button-file\">\r\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                    Upload\r\n                </Button>\r\n            </label>\r\n\r\n        <button className=\"positive ui button\" {...register('organizationPhoto', { required: false })}>Upload Photos</button>\r\n        <button className=\"positive ui button\" type=\"submit\">Save</button>\r\n    </form >)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auctionId: state.auction.newAuction._id,\r\n        auction: state.auction.newAuction\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { setNewAuction })(OrganizationInformation);\r\n// {/* <form>\r\n//         {/* <TextField id=\"standard-basic\" label=\"Dccc\" /> */}\r\n\r\n\r\n//         <label> The organization name</label>\r\n//         <input type=\"text\" onChange={(e) => details.organizationName = e.target.value} defaultValue={props.auction.organizationName} required={true} />\r\n\r\n//         <textarea defaultValue={props.auction.organizationText} onChange={(e) => details.organizationText = e.target.value}></textarea>\r\n\r\n//         <label>Upload photos of the organization</label>\r\n//         {/* לשמור תמונות שהוא מעלה */}\r\n//         <input type=\"button\" value=\"upload photos\" onChange={(e) => { details.organizationPhoto.push(e.target.value) }} />\r\n//         <br />\r\n//         <br />\r\n//         <br />\r\n//         <br />\r\n//         <input type=\"button\" value=\"save organization information\"\r\n//             onClick={() => saveOrganizationInformationInDB(props.auctionId, details).then(succ => {\r\n//                 console.log(succ.data);\r\n//                 if (succ.status != 400) props.setNewAuction(succ.data)\r\n//             })\r\n//             } />\r\n//     </form> */}"]},"metadata":{},"sourceType":"module"}