{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\user\\\\UserTable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'name',\n  label: 'Chinese auction Name',\n  minWidth: 170\n}, {\n  id: 'order_date',\n  label: 'Order Date',\n  minWidth: 100\n}, {\n  id: 'sum',\n  //\n  label: 'Sum',\n  //מה יהיה רשום\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'options',\n  label: 'Options',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n} // {\n//     id: 'density',\n//     label: 'Density',\n//     minWidth: 170,\n//     align: 'right',\n//     format: (value) => value.toFixed(2),\n// },\n];\n\nfunction createData(name, order_date, sum) {\n  const options = \"to add buttons\";\n  return {\n    name,\n    order_date,\n    sum,\n    options\n  };\n}\n\nconst rows = [createData('India', 'IN', 1324171354, 3287263), createData('China', 'CN', 1403500365, 9596961), createData('Italy', 'IT', 60483973, 301340), createData('United States', 'US', 327167434, 9833520), createData('Canada', 'CA', 37602103, 9984670), createData('Australia', 'AU', 25475400, 7692024), createData('Germany', 'DE', 83019200, 357578), createData('Ireland', 'IE', 4857000, 70273), createData('Mexico', 'MX', 126577691, 1972550), createData('Japan', 'JP', 126317000, 377973), createData('France', 'FR', 67022000, 640679), createData('United Kingdom', 'GB', 67545757, 242495), createData('Russia', 'RU', 146793744, 17098246), createData('Nigeria', 'NG', 200962417, 923768), createData('Brazil', 'BR', 210147125, 8515767)];\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\n\nconst AuctionManagerTable = () => {\n  _s();\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = row[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: column.format && typeof value === 'number' ? column.format(value) : value\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 45\n                }, this);\n              })\n            }, row.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuctionManagerTable, \"1LSjuq2DZUwZxE9BYIdgLLfYYP4=\", false, function () {\n  return [useStyles];\n});\n\n_c = AuctionManagerTable;\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nexport default connect(mapStateToProps, {})(AuctionManagerTable);\n\nvar _c;\n\n$RefreshReg$(_c, \"AuctionManagerTable\");","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/project-good/project/client/src/components/user/UserTable.js"],"names":["React","connect","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","format","value","toLocaleString","createData","name","order_date","sum","options","rows","useStyles","root","width","container","maxHeight","AuctionManagerTable","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","map","column","slice","row","code","length","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst columns = [\r\n    { id: 'name', label: 'Chinese auction Name', minWidth: 170 },\r\n    { id: 'order_date', label: 'Order Date', minWidth: 100 },\r\n    {\r\n        id: 'sum',//\r\n        label: 'Sum',//מה יהיה רשום\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: 'options',\r\n        label: 'Options',\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    // {\r\n    //     id: 'density',\r\n    //     label: 'Density',\r\n    //     minWidth: 170,\r\n    //     align: 'right',\r\n    //     format: (value) => value.toFixed(2),\r\n    // },\r\n];\r\n\r\nfunction createData(name,order_date, sum) {\r\n    const options = \"to add buttons\"\r\n    return { name, order_date,sum,options};\r\n}\r\n\r\nconst rows = [\r\n    createData('India', 'IN', 1324171354, 3287263),\r\n    createData('China', 'CN', 1403500365, 9596961),\r\n    createData('Italy', 'IT', 60483973, 301340),\r\n    createData('United States', 'US', 327167434, 9833520),\r\n    createData('Canada', 'CA', 37602103, 9984670),\r\n    createData('Australia', 'AU', 25475400, 7692024),\r\n    createData('Germany', 'DE', 83019200, 357578),\r\n    createData('Ireland', 'IE', 4857000, 70273),\r\n    createData('Mexico', 'MX', 126577691, 1972550),\r\n    createData('Japan', 'JP', 126317000, 377973),\r\n    createData('France', 'FR', 67022000, 640679),\r\n    createData('United Kingdom', 'GB', 67545757, 242495),\r\n    createData('Russia', 'RU', 146793744, 17098246),\r\n    createData('Nigeria', 'NG', 200962417, 923768),\r\n    createData('Brazil', 'BR', 210147125, 8515767),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: 440,\r\n    },\r\n});\r\n\r\nconst AuctionManagerTable = () => {\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <TableContainer className={classes.container}>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {columns.map((column) => (\r\n                                <TableCell\r\n                                    key={column.id}\r\n                                    align={column.align}\r\n                                    style={{ minWidth: column.minWidth }}\r\n                                >\r\n                                    {column.label}\r\n                                </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                            return (\r\n                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                    {columns.map((column) => {\r\n                                        const value = row[column.id];\r\n                                        return (\r\n                                            <TableCell key={column.id} align={column.align}>\r\n                                                {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                            </TableCell>\r\n                                        );\r\n                                    })}\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n        </Paper>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n    };\r\n}\r\nexport default connect(mapStateToProps, {})(AuctionManagerTable);\r\n"]},"metadata":{},"sourceType":"module"}