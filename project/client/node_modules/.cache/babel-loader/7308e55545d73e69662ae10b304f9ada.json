{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\user\\\\CartAll.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport './CartAll.scss';\nimport { connect } from \"react-redux\";\nimport React, { useEffect, useState } from 'react';\nimport { emptyTheCartByAuction, getCartFromDB } from '../../utils/userUtils';\nimport { getAuctionFromDB } from '../../store/actions/currentAuction';\nimport de from '../../img/icons/dustbin.png';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    width: '80%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\n\nconst CartAll = props => {\n  _s();\n\n  const getData = () => {\n    getCartFromDB(props.currentUser._id).then(succ => {\n      debugger;\n\n      if (succ.status != 400) {\n        debugger;\n        let arr = [];\n        succ.data.map(o => {\n          arr.push(createData(o));\n        });\n        console.log(succ.data);\n        setRows(arr);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  const columns = [{\n    id: 'name',\n    label: 'Name',\n    align: 'left',\n    minWidth: 80\n  }, {\n    id: 'sum',\n    label: 'Amount to pay',\n    minWidth: 170,\n    align: 'left',\n    format: value => value.toFixed(2)\n  }, {\n    id: 'Delete',\n    label: 'deleteCart',\n    minWidth: 170,\n    align: 'left',\n    format: value => value.toFixed(2)\n  }, {\n    id: 'continue',\n    label: 'Continue',\n    minWidth: 170,\n    align: 'left',\n    format: value => value.toFixed(2)\n  }];\n\n  function createData(auctionCartObj) {\n    let deleteCart = /*#__PURE__*/_jsxDEV(IconButton, {\n      title: \"Delete\",\n      onClick: () => {\n        emptyTheCartByAuction(auctionCartObj.auctionId, props.currentUser._id).then(succ => {\n          if (succ.status != 400) getData();\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"my_icon\",\n        src: de\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 26\n    }, this);\n\n    let sum = 0;\n    auctionCartObj.map(item => {\n      sum += item.qty * item.productId.price;\n    });\n\n    let c = /*#__PURE__*/_jsxDEV(Link, {\n      onClick: () => props.getAuctionFromDB(auctionCartObj.auctionId),\n      to: `/auction`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this);\n\n    return {\n      name: auctionCartObj.name,\n      sum,\n      deleteCart,\n      continue: c\n    };\n  }\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [rows, setRows] = React.useState(null);\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CartAll Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartAll, \"NCiEQMvwpHjF2IaNSFSVaBiKu44=\", false, function () {\n  return [useStyles];\n});\n\n_c = CartAll;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    currentAuction: state.currentAuction.currentAuction,\n    currentUser: state.user.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAuctionFromDB\n})(CartAll);\n\nvar _c;\n\n$RefreshReg$(_c, \"CartAll\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/user/CartAll.js"],"names":["Link","connect","React","useEffect","useState","emptyTheCartByAuction","getCartFromDB","getAuctionFromDB","de","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","IconButton","useStyles","root","width","container","maxHeight","CartAll","props","getData","currentUser","_id","then","succ","status","arr","data","map","o","push","createData","console","log","setRows","columns","id","label","align","minWidth","format","value","toFixed","auctionCartObj","deleteCart","auctionId","sum","item","qty","productId","price","c","name","continue","classes","page","setPage","rowsPerPage","setRowsPerPage","rows","mapStateToProps","state","user","currentAuction"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom'\r\nimport './CartAll.scss';\r\nimport { connect } from \"react-redux\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { emptyTheCartByAuction, getCartFromDB } from '../../utils/userUtils';\r\nimport { getAuctionFromDB } from '../../store/actions/currentAuction'\r\nimport de from '../../img/icons/dustbin.png'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nconst useStyles = makeStyles({\r\n    root: { width: '80%', },\r\n    container: { maxHeight: 440, }\r\n});\r\nconst CartAll = (props) => {\r\n    const getData = () => {\r\n        getCartFromDB(props.currentUser._id).then(succ => {\r\n            debugger;\r\n            if (succ.status != 400) {\r\n                debugger;\r\n                let arr = [];\r\n                succ.data.map((o) => { arr.push(createData(o)) });\r\n                console.log(succ.data);\r\n                setRows(arr);\r\n            }\r\n        })\r\n    }\r\n    useEffect(() => { getData(); }, [])\r\n\r\n    const columns = [\r\n        { id: 'name', label: 'Name', align: 'left', minWidth: 80 },\r\n        {\r\n            id: 'sum',\r\n            label: 'Amount to pay',\r\n            minWidth: 170,\r\n            align: 'left',\r\n            format: (value) => value.toFixed(2),\r\n        },\r\n        {\r\n            id: 'Delete',\r\n            label: 'deleteCart',\r\n            minWidth: 170,\r\n            align: 'left',\r\n            format: (value) => value.toFixed(2),\r\n        },\r\n        {\r\n            id: 'continue',\r\n            label: 'Continue',\r\n            minWidth: 170,\r\n            align: 'left',\r\n            format: (value) => value.toFixed(2),\r\n        }\r\n    ];\r\n\r\n    function createData(auctionCartObj) {\r\n\r\n        let deleteCart = <IconButton title=\"Delete\"\r\n            onClick={() => {\r\n                emptyTheCartByAuction(auctionCartObj.auctionId, props.currentUser._id).then(succ => {\r\n                    if (succ.status != 400) getData();\r\n                })\r\n            }}>\r\n            <img className=\"my_icon\" src={de} ></img>\r\n        </IconButton>;\r\n\r\n        let sum = 0;\r\n        auctionCartObj.map(item => { sum += item.qty * item.productId.price });\r\n\r\n        let c = <Link\r\n            onClick={() => props.getAuctionFromDB(auctionCartObj.auctionId)}\r\n            to={`/auction`}>\r\n        </Link>\r\n\r\n        return { name: auctionCartObj.name, sum, deleteCart, continue: c };\r\n    }\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [rows, setRows] = React.useState(null);\r\n\r\n    return (\r\n        <center>\r\n            <h1>CartAll Component</h1>\r\n        </center>);\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        currentAuction: state.currentAuction.currentAuction,\r\n        currentUser: state.user.currentUser\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { getAuctionFromDB })(CartAll);"]},"metadata":{},"sourceType":"module"}