{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\new auction\\\\OrganizationInformation.js\";\nimport React from 'react';\nimport { saveOrganizationDetails } from \"../../store/actions/newAuction\";\nimport { connect } from \"react-redux\";\nimport FinalStep from './FinalStep';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OrganizationInformation = props => {\n  let oName = \"\";\n  let photos = [];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" The organization name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => oName = e.target.value,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Upload photos of the organization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"upload photos\",\n        onChange: e => photos.push()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), \");\", props.isOpen ? /*#__PURE__*/_jsxDEV(FinalStep, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 22\n    }, this) : null, \" \"]\n  }, void 0, true);\n}; //submit!!!!\n\n\n_c = OrganizationInformation;\n\nconst mapStateToProps = state => {\n  return {\n    isOpen: state.auction.finalStepModalIsOpen\n  };\n};\n\nexport default connect(mapStateToProps, {\n  saveOrganizationDetails\n})(OrganizationInformation);\n\nvar _c;\n\n$RefreshReg$(_c, \"OrganizationInformation\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/new auction/OrganizationInformation.js"],"names":["React","saveOrganizationDetails","connect","FinalStep","OrganizationInformation","props","oName","photos","e","target","value","push","isOpen","mapStateToProps","state","auction","finalStepModalIsOpen"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,uBAAT,QAAwC,gCAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;;AAEA,MAAMC,uBAAuB,GAAIC,KAAD,IAAW;AACvC,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,sBAAQ;AAAA,4BACJ;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAGC,CAAD,IAAOF,KAAK,GAAGE,CAAC,CAACC,MAAF,CAASC,KAArD;AAA4D,QAAA,QAAQ,EAAE;AAAtE;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAMI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,eAA3B;AAA2C,QAAA,QAAQ,EAAGF,CAAD,IAAOD,MAAM,CAACI,IAAP;AAA5D;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,QAWNN,KAAK,CAACO,MAAN,gBAAe,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAf,GAA+B,IAXzB;AAAA,kBAAR;AAaH,CAhBD,C,CAiBA;;;KAjBMR,uB;;AAkBN,MAAMS,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHF,IAAAA,MAAM,EAAEE,KAAK,CAACC,OAAN,CAAcC;AADnB,GAAP;AAGH,CAJD;;AAKA,eAAed,OAAO,CAACW,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAAsDG,uBAAtD,CAAf","sourcesContent":["import React from 'react';\r\nimport { saveOrganizationDetails } from \"../../store/actions/newAuction\";\r\nimport { connect } from \"react-redux\";\r\nimport FinalStep from './FinalStep';\r\n\r\nconst OrganizationInformation = (props) => {\r\n    let oName = \"\";\r\n    let photos = [];\r\n    return (<>\r\n        <form>\r\n            <label> The organization name</label>\r\n\r\n            <input type=\"text\" onChange={(e) => oName = e.target.value} required={true} />\r\n            <label>Upload photos of the organization</label>\r\n            {/* לשמור תמונות שהוא מעלה */}\r\n            <input type=\"button\" value=\"upload photos\" onChange={(e) => photos.push()} />\r\n\r\n\r\n        </form>);\r\n    { props.isOpen ? <FinalStep /> : null } {/* אישור סופי */ }\r\n</>)\r\n}\r\n//submit!!!!\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isOpen: state.auction.finalStepModalIsOpen,\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { saveOrganizationDetails })(OrganizationInformation);"]},"metadata":{},"sourceType":"module"}