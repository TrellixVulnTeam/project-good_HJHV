{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\user\\\\CartAll.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport './CartAll.scss';\nimport { connect } from \"react-redux\";\nimport React, { useEffect, useState } from 'react';\nimport { emptyTheCartByAuction, getCartFromDB } from '../../utils/userUtils';\nimport { getAuctionFromDB } from '../../store/actions/currentAuction';\nimport de from '../../img/icons/dustbin.png';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    width: '80%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\n\nconst CartAll = props => {\n  _s();\n\n  useEffect(() => {\n    getCartFromDB(props.currentUser._id).then(succ => {\n      debugger;\n\n      if (succ.status != 400) {\n        debugger;\n        let arr = [];\n        succ.data.map(o => {\n          arr.push(createData(o));\n        });\n        console.log(succ.data);\n        setRows(arr);\n      }\n    });\n  }, []);\n  const columns = [{\n    id: 'name',\n    label: 'Name',\n    align: 'left',\n    minWidth: 80\n  }, {\n    id: 'sum',\n    label: 'Amount to pay',\n    minWidth: 170,\n    align: 'left',\n    format: value => value.toFixed(2)\n  }, {\n    id: 'Delete',\n    label: 'deleteCart',\n    minWidth: 170,\n    align: 'left',\n    format: value => value.toFixed(2)\n  }, {\n    id: 'continue',\n    label: 'Continue',\n    minWidth: 170,\n    align: 'left',\n    format: value => value.toFixed(2)\n  }];\n\n  function createData(auctionCartObj) {\n    let deleteCart = /*#__PURE__*/_jsxDEV(IconButton, {\n      title: \"Delete\",\n      onClick: () => {\n        emptyTheCartByAuction(auctionCartObj._id, props.currentUser._id).then(succ => {\n          if (succ.status != 400) {\n            let arr = [];\n            succ.data.map(o => {\n              arr.push(createData(o));\n            });\n            console.log(succ.data);\n            setRows(arr);\n          }\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"my_icon\",\n        src: de\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 26\n    }, this);\n\n    let sum = 0;\n    auctionCartObj.map(item => {\n      sum += item.qty * item.productId.price;\n    });\n\n    let c = /*#__PURE__*/_jsxDEV(Link, {\n      onClick: () => props.getAuctionFromDB(auctionCartObj.auctionId),\n      to: `/auction`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this);\n\n    return {\n      name: auctionCartObj.name,\n      sum,\n      deleteCart,\n      continue: c\n    };\n  }\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [rows, setRows] = React.useState(null);\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CartAll Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            className: \"auctionManagerTableCls\",\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: column.align,\n                style: {\n                  minWidth: column.minWidth\n                },\n                children: column.label\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows && rows.length && rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                tabIndex: -1,\n                children: columns.map(column => {\n                  const value = row[column.id];\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: column.align,\n                    children: column.format && typeof value === 'number' ? column.format(value) : value\n                  }, column.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, row.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartAll, \"NCiEQMvwpHjF2IaNSFSVaBiKu44=\", false, function () {\n  return [useStyles];\n});\n\n_c = CartAll;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    currentAuction: state.currentAuction.currentAuction,\n    currentUser: state.user.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAuctionFromDB\n})(CartAll);\n\nvar _c;\n\n$RefreshReg$(_c, \"CartAll\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/user/CartAll.js"],"names":["Link","connect","React","useEffect","useState","emptyTheCartByAuction","getCartFromDB","getAuctionFromDB","de","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","IconButton","useStyles","root","width","container","maxHeight","CartAll","props","currentUser","_id","then","succ","status","arr","data","map","o","push","createData","console","log","setRows","columns","id","label","align","minWidth","format","value","toFixed","auctionCartObj","deleteCart","sum","item","qty","productId","price","c","auctionId","name","continue","classes","page","setPage","rowsPerPage","setRowsPerPage","rows","column","length","slice","row","code","mapStateToProps","state","user","currentAuction"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom'\r\nimport './CartAll.scss';\r\nimport { connect } from \"react-redux\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { emptyTheCartByAuction, getCartFromDB } from '../../utils/userUtils';\r\nimport { getAuctionFromDB } from '../../store/actions/currentAuction'\r\nimport de from '../../img/icons/dustbin.png'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nconst useStyles = makeStyles({\r\n    root: { width: '80%', },\r\n    container: { maxHeight: 440, }\r\n});\r\nconst CartAll = (props) => {\r\n\r\n    useEffect(() => {\r\n        getCartFromDB(props.currentUser._id).then(succ => {\r\n            debugger;\r\n            if (succ.status != 400) {\r\n                debugger;\r\n                let arr = [];\r\n                succ.data.map((o) => { arr.push(createData(o)) });\r\n                console.log(succ.data);\r\n                setRows(arr);\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const columns = [\r\n        { id: 'name', label: 'Name', align: 'left', minWidth: 80 },\r\n        {\r\n            id: 'sum',\r\n            label: 'Amount to pay',\r\n            minWidth: 170,\r\n            align: 'left',\r\n            format: (value) => value.toFixed(2),\r\n        },\r\n        {\r\n            id: 'Delete',\r\n            label: 'deleteCart',\r\n            minWidth: 170,\r\n            align: 'left',\r\n            format: (value) => value.toFixed(2),\r\n        },\r\n        {\r\n            id: 'continue',\r\n            label: 'Continue',\r\n            minWidth: 170,\r\n            align: 'left',\r\n            format: (value) => value.toFixed(2),\r\n        }\r\n    ];\r\n\r\n    function createData(auctionCartObj) {\r\n\r\n        let deleteCart = <IconButton title=\"Delete\"\r\n            onClick={() => {\r\n                emptyTheCartByAuction(auctionCartObj._id, props.currentUser._id).then(succ => {\r\n                    if (succ.status != 400) {\r\n                        let arr = [];\r\n                        succ.data.map((o) => { arr.push(createData(o)) });\r\n                        console.log(succ.data);\r\n                        setRows(arr);\r\n                    }\r\n                })\r\n            }}>\r\n            <img className=\"my_icon\" src={de} ></img>\r\n        </IconButton>;\r\n\r\n        let sum = 0;\r\n        auctionCartObj.map(item => { sum += item.qty * item.productId.price });\r\n\r\n        let c = <Link\r\n            onClick={() => props.getAuctionFromDB(auctionCartObj.auctionId)}\r\n            to={`/auction`}>\r\n        </Link>\r\n\r\n        return { name: auctionCartObj.name, sum, deleteCart, continue: c };\r\n    }\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [rows, setRows] = React.useState(null);\r\n\r\n    return (\r\n        <center>\r\n            <h1>CartAll Component</h1>\r\n            <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead className='auctionManagerTableCls'>\r\n                            <TableRow>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{ minWidth: column.minWidth }}\r\n                                    >\r\n                                        {column.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows && rows.length && rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                                return (\r\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                        {columns.map((column) => {\r\n                                            const value = row[column.id];\r\n                                            return (\r\n                                                <TableCell key={column.id} align={column.align}>\r\n                                                    {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                                </TableCell>\r\n                                            );\r\n                                        })}\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n            </Paper>\r\n\r\n        </center>);\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        currentAuction: state.currentAuction.currentAuction,\r\n        currentUser: state.user.currentUser\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { getAuctionFromDB })(CartAll);"]},"metadata":{},"sourceType":"module"}