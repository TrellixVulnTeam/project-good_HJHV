{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\new auction\\\\AuctionInformation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport './NewAuction.scss';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { saveAuctionInformationInDB } from '../../utils/newAuctionUtils';\nimport { setNewAuction } from '../../store/actions/newAuction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '40%' // outerHeight:'70%'\n\n    }\n  }\n}));\n\nconst AuctionInformation = props => {\n  _s();\n\n  const classes = useStyles();\n  const [selectedDate1, setSelectedDate1] = React.useState(null); //lotery\n\n  const [selectedDate2, setSelectedDate2] = React.useState(null); //start\n\n  const [selectedDate3, setSelectedDate3] = React.useState(null); //end\n\n  const handleDateChange1 = date => {\n    setSelectedDate1(date);\n  }; //lotery\n\n\n  const handleDateChange2 = date => {\n    setSelectedDate2(date);\n  }; //start\n\n\n  const handleDateChange3 = date => {\n    setSelectedDate3(date);\n  }; //end\n\n\n  let details = {\n    registrationStartDate: null,\n    registrationEndDate: null,\n    lotteriesDate: null,\n    terms: \"\",\n    //קובץ תקנון\n    name: \"\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Auction information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"newAuction.name\",\n      onChange: e => {\n        details.name = e.target.value;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      className: \"auctionInformationDate\",\n      children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n        disableToolbar: true,\n        variant: \"inline\",\n        format: \"dd/MM/yyyy\",\n        margin: \"normal\",\n        id: \"date-picker-inline\",\n        label: \"Date of the lottery\",\n        value: selectedDate1,\n        onChange: handleDateChange1,\n        KeyboardButtonProps: {\n          'aria-label': 'change date'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n        disableToolbar: true,\n        variant: \"inline\",\n        format: \"dd/MM/yyyy\",\n        margin: \"normal\",\n        id: \"date-picker-inline\",\n        label: \"Registration start date\",\n        value: selectedDate2,\n        onChange: handleDateChange2,\n        KeyboardButtonProps: {\n          'aria-label': 'change date'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n        disableToolbar: true,\n        variant: \"inline\",\n        format: \"dd/MM/yyyy\",\n        margin: \"normal\",\n        id: \"date-picker-inline\",\n        label: \"Registration end date\",\n        value: selectedDate3,\n        onChange: handleDateChange3,\n        KeyboardButtonProps: {\n          'aria-label': 'change date'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"default\",\n      className: classes.button,\n      startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 24\n      }, this) // onChange={(e) => terms=e.target.value}\n      ,\n      children: \"Upload Terms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        details.registrationStartDate = selectedDate1;\n        details.registrationEndDate = selectedDate1;\n        details.lotteriesDate = selectedDate1;\n        saveAuctionInformationInDB(props.auctionId, details).then(succ => {\n          console.log(succ.data);\n          if (succ.status != 400) props.setNewAuction(succ.data);\n        });\n      },\n      children: \" Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 13\n  }, this); //submit!!!!\n  //לבדוק שהתאריכים תקינים\n  //סיום ההרשמה ולפני ביצוע ההגרלות\n};\n\n_s(AuctionInformation, \"8Lru2XAKjZ1BThzHYuj8YTnalEk=\", false, function () {\n  return [useStyles];\n});\n\n_c = AuctionInformation;\n\nconst mapStateToProps = state => {\n  return {\n    auctionId: state.auction.newAuction._id\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setNewAuction\n})(AuctionInformation);\n\nvar _c;\n\n$RefreshReg$(_c, \"AuctionInformation\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/new auction/AuctionInformation.js"],"names":["React","useEffect","connect","makeStyles","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","Button","CloudUploadIcon","saveAuctionInformationInDB","setNewAuction","useStyles","theme","root","margin","spacing","width","AuctionInformation","props","classes","selectedDate1","setSelectedDate1","useState","selectedDate2","setSelectedDate2","selectedDate3","setSelectedDate3","handleDateChange1","date","handleDateChange2","handleDateChange3","details","registrationStartDate","registrationEndDate","lotteriesDate","terms","name","e","target","value","button","auctionId","then","succ","console","log","data","status","mapStateToProps","state","auction","newAuction","_id"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './NewAuction.scss'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { saveAuctionInformationInDB } from '../../utils/newAuctionUtils';\r\nimport { setNewAuction } from '../../store/actions/newAuction';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '40%',\r\n            // outerHeight:'70%'\r\n        },\r\n    },\r\n}));\r\n\r\nconst AuctionInformation = (props) => {\r\n\r\n    const classes = useStyles();\r\n    const [selectedDate1, setSelectedDate1] = React.useState(null);//lotery\r\n    const [selectedDate2, setSelectedDate2] = React.useState(null);//start\r\n    const [selectedDate3, setSelectedDate3] = React.useState(null);//end\r\n\r\n    const handleDateChange1 = (date) => { setSelectedDate1(date) };//lotery\r\n    const handleDateChange2 = (date) => { setSelectedDate2(date) };//start\r\n    const handleDateChange3 = (date) => { setSelectedDate3(date) };//end\r\n    let details = {\r\n        registrationStartDate: null,\r\n        registrationEndDate: null,\r\n        lotteriesDate: null,\r\n        terms: \"\",//קובץ תקנון\r\n        name: \"\"\r\n    }\r\n    return (<form className={classes.root} noValidate autoComplete=\"off\">\r\n        <h1>Auction information</h1>\r\n\r\n        <input type=\"text\" placeholder=\"newAuction.name\" onChange={(e) => { details.name = e.target.value; }} />\r\n\r\n        <br />\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils} className=\"auctionInformationDate\">\r\n            <KeyboardDatePicker\r\n                disableToolbar\r\n                variant=\"inline\"\r\n                format=\"dd/MM/yyyy\"\r\n                margin=\"normal\"\r\n                id=\"date-picker-inline\"\r\n                label=\"Date of the lottery\"\r\n                value={selectedDate1}\r\n                onChange={handleDateChange1}\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                }}\r\n            />\r\n\r\n        </MuiPickersUtilsProvider>\r\n        <br />\r\n\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n                disableToolbar\r\n                variant=\"inline\"\r\n                format=\"dd/MM/yyyy\"\r\n                margin=\"normal\"\r\n                id=\"date-picker-inline\"\r\n                label=\"Registration start date\"\r\n                value={selectedDate2}\r\n                onChange={handleDateChange2}\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                }}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n        <br />\r\n\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n                disableToolbar\r\n                variant=\"inline\"\r\n                format=\"dd/MM/yyyy\"\r\n                margin=\"normal\"\r\n                id=\"date-picker-inline\"\r\n                label=\"Registration end date\"\r\n                value={selectedDate3}\r\n                onChange={handleDateChange3}\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                }}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n        <br />\r\n\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n            className={classes.button}\r\n            startIcon={<CloudUploadIcon />}\r\n        // onChange={(e) => terms=e.target.value}\r\n        >\r\n            Upload Terms\r\n        </Button>\r\n        <br />\r\n\r\n        <button\r\n            onClick={() => {\r\n                details.registrationStartDate = selectedDate1;\r\n                details.registrationEndDate = selectedDate1;\r\n                details.lotteriesDate = selectedDate1;\r\n                saveAuctionInformationInDB(props.auctionId, details).then(succ => {\r\n                    console.log(succ.data);\r\n                    if (succ.status != 400) props.setNewAuction(succ.data)\r\n                })\r\n            }}\r\n        > Save</button>\r\n\r\n    </form >);\r\n    //submit!!!!\r\n    //לבדוק שהתאריכים תקינים\r\n    //סיום ההרשמה ולפני ביצוע ההגרלות\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auctionId: state.auction.newAuction._id\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { setNewAuction })(AuctionInformation);\r\n"]},"metadata":{},"sourceType":"module"}