{"ast":null,"code":"import * as actionTypes from '../actionTypes';\nimport axios from 'axios';\nimport { setCurrentUser } from './signUp'; //הוספת מוצר לסל\n\n/*export const addProductToCart = (product, count) => {\r\n    let _id = product._id;\r\n    let arr = JSON.parse(localStorage.getItem(\"prodactsInCart\"));\r\n    let index = arr.findIndex(item => item.product._id == _id);\r\n    if (index == -1) arr.push({ cnt: count, product: _id });\r\n    else arr[index].cnt += count;\r\n    localStorage.setItem(\"prodactsInCart\", JSON.stringify(arr));\r\n    return {\r\n        type: actionTypes.ADD_PRODUCT_TO_CART,\r\n        payload: { cnt: count, product: product }\r\n    }\r\n}*/\n\n/*\r\n//מחיקת מוצר מסל\r\nexport const deleteProductFromCart = (_id) => {\r\n\r\n    let arr = JSON.parse(localStorage.getItem(\"prodactsInCart\")).filter(p => p.product._id !== _id);\r\n    localStorage.setItem(\"prodactsInCart\", JSON.stringify(arr));\r\n    return {\r\n        type: actionTypes.DELETE_PRODUCT_FROM_CART,\r\n        payload: _id\r\n    }\r\n}\r\n*/\n\n/*\r\nexport const setCnt = (_id, cnt) => {\r\n\r\n    let arr = JSON.parse(localStorage.getItem(\"prodactsInCart\"));\r\n    let index = arr.findIndex(item => item.product._id == _id);\r\n    if (index != -1) arr[index].cnt = cnt;\r\n\r\n    localStorage.setItem(\"prodactsInCart\", JSON.stringify(arr))\r\n    return {\r\n        type: actionTypes.SET_CNT_PRODUCT_IN_CART,\r\n        payload: { _id: _id, cnt: cnt }\r\n    }\r\n}\r\n*/\n\nexport const updateCurrentUser = user => {\n  return {\n    type: actionTypes.UPDATE_CURRENT_USER,\n    payload: user\n  };\n};\nexport const updateUser = user => {\n  console.log(user);\n  return dispatch => {\n    axios.put(`http://localhost:5000/users/${user._id}`, user).then(succ => {\n      console.log(user);\n      console.log(succ.data);\n\n      if (succ.status != 400) {\n        // dispatch(updateCurrentUser(succ.data));\n        dispatch(dispatch(setCurrentUser(succ.data), localStorage.setItem('currentUser', JSON.stringify(succ.data))));\n      }\n    });\n  };\n}; //מראה את הטבלה ההזמנות של משתמש קיים \n//של משתמש קיים ומחזירה את ההזמנות של אותו משתמש _id מקבלת  \n\nexport const getOrdersList = user => {\n  let id = user._id;\n  return dispatch => {\n    axios.get(`http://localhost:5000/orders/orderList/${id}`).then(succ => {\n      if (succ.status != 400) return succ.data;\n    });\n  };\n}; //בלחיצה על כפתור הצג הזמנה \n//של הזמנה ומחזירה את ההזמנה_id מקבלת \n\nexport const getOrderById = order => {\n  let id = order._id;\n  return dispatch => {\n    axios.get(`http://localhost:5000/orders/${id}`).then(succ => {\n      if (succ.status != 400) return succ.data;\n    });\n  };\n};\nexport const addOrderToState = order => {\n  return {\n    type: actionTypes.ADD_ORDER,\n    payload: order\n  };\n};\nexport const signOut = () => {\n  localStorage.clear();\n  return {\n    type: actionTypes.SIGN_OUT\n  };\n};\nexport const updateShoppingCart = arr => {\n  return {\n    type: actionTypes.UPDATE_SHOPPING_CART,\n    payload: arr\n  };\n};\nexport const updateUserState = () => {\n  //עדכון הסטייט לפי הנתונים שבלוקלסטורג'\n  updateCurrentUser(JSON.parse(localStorage.getItem(\"currentUser\"))); //alert(\"updateUserState\")\n\n  return {\n    type: actionTypes.UPDATE_USER_STATE,\n    payload: JSON.parse(localStorage.getItem(\"prodactsInCart\"))\n  };\n}; //הוספת הזמנה\n\nexport const addOrderToDB = order => {\n  return dispatch => {\n    axios.post(`http://localhost:5000/orders`, order).then(succ => {\n      console.log(succ.data);\n      if (succ.status != 400) dispatch(console.log(succ.data));\n    });\n  };\n}; //מחזירה הזמנה עפ\"י קוד משתמש ומכירה\n\nexport const getOrderByToUserCodeAndAuction = (user_id, auction_id) => {\n  return dispatch => {\n    axios.get(`http://localhost:5000/orders/${user_id}&${auction_id}`).then(succ => {\n      if (succ.status != 400) {\n        const arr = succ.data.orderDetails;\n        dispatch();\n      }\n    });\n  };\n};","map":{"version":3,"sources":["D:/project-good/project/client/src/store/actions/user.js"],"names":["actionTypes","axios","setCurrentUser","updateCurrentUser","user","type","UPDATE_CURRENT_USER","payload","updateUser","console","log","dispatch","put","_id","then","succ","data","status","localStorage","setItem","JSON","stringify","getOrdersList","id","get","getOrderById","order","addOrderToState","ADD_ORDER","signOut","clear","SIGN_OUT","updateShoppingCart","arr","UPDATE_SHOPPING_CART","updateUserState","parse","getItem","UPDATE_USER_STATE","addOrderToDB","post","getOrderByToUserCodeAndAuction","user_id","auction_id","orderDetails"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actionTypes';\r\nimport axios from 'axios';\r\nimport { setCurrentUser } from './signUp'\r\n\r\n//הוספת מוצר לסל\r\n/*export const addProductToCart = (product, count) => {\r\n    let _id = product._id;\r\n    let arr = JSON.parse(localStorage.getItem(\"prodactsInCart\"));\r\n    let index = arr.findIndex(item => item.product._id == _id);\r\n    if (index == -1) arr.push({ cnt: count, product: _id });\r\n    else arr[index].cnt += count;\r\n    localStorage.setItem(\"prodactsInCart\", JSON.stringify(arr));\r\n    return {\r\n        type: actionTypes.ADD_PRODUCT_TO_CART,\r\n        payload: { cnt: count, product: product }\r\n    }\r\n}*/\r\n\r\n/*\r\n//מחיקת מוצר מסל\r\nexport const deleteProductFromCart = (_id) => {\r\n\r\n    let arr = JSON.parse(localStorage.getItem(\"prodactsInCart\")).filter(p => p.product._id !== _id);\r\n    localStorage.setItem(\"prodactsInCart\", JSON.stringify(arr));\r\n    return {\r\n        type: actionTypes.DELETE_PRODUCT_FROM_CART,\r\n        payload: _id\r\n    }\r\n}\r\n*/\r\n\r\n/*\r\nexport const setCnt = (_id, cnt) => {\r\n\r\n    let arr = JSON.parse(localStorage.getItem(\"prodactsInCart\"));\r\n    let index = arr.findIndex(item => item.product._id == _id);\r\n    if (index != -1) arr[index].cnt = cnt;\r\n\r\n    localStorage.setItem(\"prodactsInCart\", JSON.stringify(arr))\r\n    return {\r\n        type: actionTypes.SET_CNT_PRODUCT_IN_CART,\r\n        payload: { _id: _id, cnt: cnt }\r\n    }\r\n}\r\n*/\r\nexport const updateCurrentUser = (user) => {\r\n    return {\r\n        type: actionTypes.UPDATE_CURRENT_USER,\r\n        payload: user\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => {\r\n    console.log(user);\r\n    return (dispatch) => {\r\n        axios.put(`http://localhost:5000/users/${user._id}`, user).then(succ => {\r\n            console.log(user);\r\n            console.log(succ.data);\r\n            if (succ.status != 400) {\r\n                // dispatch(updateCurrentUser(succ.data));\r\n                dispatch(dispatch(setCurrentUser(succ.data), localStorage.setItem('currentUser', JSON.stringify(succ.data))));\r\n            }\r\n\r\n        })\r\n    }\r\n}\r\n\r\n//מראה את הטבלה ההזמנות של משתמש קיים \r\n//של משתמש קיים ומחזירה את ההזמנות של אותו משתמש _id מקבלת  \r\nexport const getOrdersList = (user) => {\r\n    let id = user._id;\r\n    return (dispatch) => {\r\n        axios.get(`http://localhost:5000/orders/orderList/${id}`).then(succ => {\r\n            if (succ.status != 400)\r\n                return succ.data;\r\n        })\r\n    }\r\n}\r\n//בלחיצה על כפתור הצג הזמנה \r\n//של הזמנה ומחזירה את ההזמנה_id מקבלת \r\nexport const getOrderById = (order) => {\r\n    let id = order._id;\r\n    return (dispatch) => {\r\n        axios.get(`http://localhost:5000/orders/${id}`).then(succ => {\r\n            if (succ.status != 400)\r\n                return succ.data;\r\n        })\r\n    }\r\n}\r\nexport const addOrderToState = (order) => {\r\n    return {\r\n        type: actionTypes.ADD_ORDER,\r\n        payload: order\r\n    }\r\n}\r\nexport const signOut = () => {\r\n    localStorage.clear();\r\n    return {\r\n        type: actionTypes.SIGN_OUT\r\n    }\r\n}\r\n\r\nexport const updateShoppingCart = (arr) => {\r\n    return {\r\n        type: actionTypes.UPDATE_SHOPPING_CART,\r\n        payload: arr\r\n    }\r\n}\r\n\r\nexport const updateUserState = () => {\r\n    //עדכון הסטייט לפי הנתונים שבלוקלסטורג'\r\n    updateCurrentUser(JSON.parse(localStorage.getItem(\"currentUser\")));\r\n    //alert(\"updateUserState\")\r\n    return {\r\n        type: actionTypes.UPDATE_USER_STATE,\r\n        payload: JSON.parse(localStorage.getItem(\"prodactsInCart\"))\r\n    };\r\n}\r\n\r\n\r\n//הוספת הזמנה\r\nexport const addOrderToDB = (order) => {\r\n    return (dispatch) => {\r\n        axios.post(`http://localhost:5000/orders`, order).then(succ => {\r\n            console.log(succ.data);\r\n            if (succ.status != 400)\r\n                dispatch(console.log(succ.data));\r\n        })\r\n    }\r\n}\r\n\r\n//מחזירה הזמנה עפ\"י קוד משתמש ומכירה\r\n\r\nexport const getOrderByToUserCodeAndAuction = (user_id, auction_id) => {\r\n    return (dispatch) => {\r\n        axios.get(`http://localhost:5000/orders/${user_id}&${auction_id}`).then(succ => {\r\n            if (succ.status != 400) {\r\n                const arr = (succ.data).orderDetails;\r\n                dispatch(/*localStorage.setItem(\"prodactsInCart\", JSON.stringify(arr))*/);\r\n            }\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}