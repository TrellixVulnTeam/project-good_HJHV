{"ast":null,"code":"import * as actionTypes from '../actionTypes';\nimport axios from 'axios'; //הוספת מוצר לסל\n\nexport const addProductToCart = (product, cnt) => {\n  return {\n    type: actionTypes.ADD_PRODUCT_TO_CART,\n    payload: {\n      cnt: cnt,\n      product: product\n    }\n  };\n}; //מחיקת מוצר מסל\n\nexport const deleteProductFromCart = _id => {\n  return {\n    type: actionTypes.DELETE_PRODUCT_FROM_CART,\n    payload: _id\n  };\n};\nexport const setCnt = (_id, cnt) => {\n  return {\n    type: actionTypes.SET_CNT_PRODUCT_IN_CART,\n    payload: {\n      _id: _id,\n      cnt: cnt\n    }\n  };\n};\nexport const updateCurrentUser = user => {\n  return {\n    type: actionTypes.UPDATE_CURRENT_USER,\n    payload: user\n  };\n};\nexport const updateUser = user => {\n  console.log(user);\n  return dispatch => {\n    axios.put(`http://localhost:5000/users/${user._id}`, user).then(succ => {\n      console.log(user);\n      console.log(succ.data);\n\n      if (succ.status != 400) {\n        // dispatch(updateCurrentUser(succ.data));\n        dispatch(dispatch(localStorage.setItem('currentUser', succ.data)));\n      }\n    });\n  };\n}; //מראה את הטבלה ההזמנות של משתמש קיים \n//של משתמש קיים ומחזירה את ההזמנות של אותו משתמש _id מקבלת  \n\nexport const getOrdersList = user => {\n  let id = user._id;\n  return dispatch => {\n    axios.get(`http://localhost:5000/orders/orderList/${id}`).then(succ => {\n      if (succ.status != 400) return succ.data;\n    });\n  };\n}; //בלחיצה על כפתור הצג הזמנה \n//של הזמנה ומחזירה את ההזמנה_id מקבלת \n\nexport const getOrderById = order => {\n  let id = order._id;\n  return dispatch => {\n    axios.get(`http://localhost:5000/orders/${id}`).then(succ => {\n      if (succ.status != 400) return succ.data;\n    });\n  };\n};\nexport const signOut = () => {\n  localStorage.clear(); //TODO לאפס סטייט\n};","map":{"version":3,"sources":["D:/project-good/project/client/src/store/actions/user.js"],"names":["actionTypes","axios","addProductToCart","product","cnt","type","ADD_PRODUCT_TO_CART","payload","deleteProductFromCart","_id","DELETE_PRODUCT_FROM_CART","setCnt","SET_CNT_PRODUCT_IN_CART","updateCurrentUser","user","UPDATE_CURRENT_USER","updateUser","console","log","dispatch","put","then","succ","data","status","localStorage","setItem","getOrdersList","id","get","getOrderById","order","signOut","clear"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,gBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,OAAD,EAAUC,GAAV,KAAkB;AAC9C,SAAO;AACHC,IAAAA,IAAI,EAAEL,WAAW,CAACM,mBADf;AAEHC,IAAAA,OAAO,EAAE;AAAEH,MAAAA,GAAG,EAAEA,GAAP;AAAYD,MAAAA,OAAO,EAAEA;AAArB;AAFN,GAAP;AAIH,CALM,C,CAMP;;AACA,OAAO,MAAMK,qBAAqB,GAAIC,GAAD,IAAS;AAC1C,SAAO;AACHJ,IAAAA,IAAI,EAAEL,WAAW,CAACU,wBADf;AAEHH,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,MAAM,GAAG,CAACF,GAAD,EAAML,GAAN,KAAc;AAChC,SAAO;AACHC,IAAAA,IAAI,EAAEL,WAAW,CAACY,uBADf;AAEHL,IAAAA,OAAO,EAAE;AAAEE,MAAAA,GAAG,EAAEA,GAAP;AAAYL,MAAAA,GAAG,EAAEA;AAAjB;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMS,iBAAiB,GAAIC,IAAD,IAAU;AACvC,SAAO;AACHT,IAAAA,IAAI,EAAEL,WAAW,CAACe,mBADf;AAEHR,IAAAA,OAAO,EAAEO;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,UAAU,GAAIF,IAAD,IAAU;AAChCG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,SAAQK,QAAD,IAAc;AACjBlB,IAAAA,KAAK,CAACmB,GAAN,CAAW,+BAA8BN,IAAI,CAACL,GAAI,EAAlD,EAAqDK,IAArD,EAA2DO,IAA3D,CAAgEC,IAAI,IAAI;AACpEL,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAI,CAACC,IAAjB;;AACA,UAAID,IAAI,CAACE,MAAL,IAAe,GAAnB,EAAwB;AACpB;AACAL,QAAAA,QAAQ,CAACA,QAAQ,CAACM,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCJ,IAAI,CAACC,IAAzC,CAAD,CAAT,CAAR;AACH;AAEJ,KARD;AASH,GAVD;AAYH,CAfM,C,CAmBP;AACA;;AACA,OAAO,MAAMI,aAAa,GAAIb,IAAD,IAAU;AACnC,MAAIc,EAAE,GAAGd,IAAI,CAACL,GAAd;AACA,SAAQU,QAAD,IAAc;AACjBlB,IAAAA,KAAK,CAAC4B,GAAN,CAAW,0CAAyCD,EAAG,EAAvD,EAA0DP,IAA1D,CAA+DC,IAAI,IAAI;AACnE,UAAIA,IAAI,CAACE,MAAL,IAAe,GAAnB,EACI,OAAOF,IAAI,CAACC,IAAZ;AACP,KAHD;AAIH,GALD;AAMH,CARM,C,CASP;AACA;;AACA,OAAO,MAAMO,YAAY,GAAIC,KAAD,IAAW;AACnC,MAAIH,EAAE,GAAGG,KAAK,CAACtB,GAAf;AACA,SAAQU,QAAD,IAAc;AACjBlB,IAAAA,KAAK,CAAC4B,GAAN,CAAW,gCAA+BD,EAAG,EAA7C,EAAgDP,IAAhD,CAAqDC,IAAI,IAAI;AACzD,UAAIA,IAAI,CAACE,MAAL,IAAe,GAAnB,EACI,OAAOF,IAAI,CAACC,IAAZ;AACP,KAHD;AAIH,GALD;AAMH,CARM;AAUP,OAAO,MAAMS,OAAO,GAAG,MAAM;AACzBP,EAAAA,YAAY,CAACQ,KAAb,GADyB,CAEzB;AACH,CAHM","sourcesContent":["import * as actionTypes from '../actionTypes';\r\nimport axios from 'axios';\r\n\r\n//הוספת מוצר לסל\r\nexport const addProductToCart = (product, cnt) => {\r\n    return {\r\n        type: actionTypes.ADD_PRODUCT_TO_CART,\r\n        payload: { cnt: cnt, product: product }\r\n    }\r\n}\r\n//מחיקת מוצר מסל\r\nexport const deleteProductFromCart = (_id) => {\r\n    return {\r\n        type: actionTypes.DELETE_PRODUCT_FROM_CART,\r\n        payload: _id\r\n    }\r\n}\r\n\r\nexport const setCnt = (_id, cnt) => {\r\n    return {\r\n        type: actionTypes.SET_CNT_PRODUCT_IN_CART,\r\n        payload: { _id: _id, cnt: cnt }\r\n    }\r\n}\r\n\r\nexport const updateCurrentUser = (user) => {\r\n    return {\r\n        type: actionTypes.UPDATE_CURRENT_USER,\r\n        payload: user\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => {\r\n    console.log(user);\r\n\r\n    return (dispatch) => {\r\n        axios.put(`http://localhost:5000/users/${user._id}`, user).then(succ => {\r\n            console.log(user);\r\n            console.log(succ.data);\r\n            if (succ.status != 400) {\r\n                // dispatch(updateCurrentUser(succ.data));\r\n                dispatch(dispatch(localStorage.setItem('currentUser', succ.data)));\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n//מראה את הטבלה ההזמנות של משתמש קיים \r\n//של משתמש קיים ומחזירה את ההזמנות של אותו משתמש _id מקבלת  \r\nexport const getOrdersList = (user) => {\r\n    let id = user._id;\r\n    return (dispatch) => {\r\n        axios.get(`http://localhost:5000/orders/orderList/${id}`).then(succ => {\r\n            if (succ.status != 400)\r\n                return succ.data;\r\n        })\r\n    }\r\n}\r\n//בלחיצה על כפתור הצג הזמנה \r\n//של הזמנה ומחזירה את ההזמנה_id מקבלת \r\nexport const getOrderById = (order) => {\r\n    let id = order._id;\r\n    return (dispatch) => {\r\n        axios.get(`http://localhost:5000/orders/${id}`).then(succ => {\r\n            if (succ.status != 400)\r\n                return succ.data;\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    localStorage.clear();\r\n    //TODO לאפס סטייט\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}