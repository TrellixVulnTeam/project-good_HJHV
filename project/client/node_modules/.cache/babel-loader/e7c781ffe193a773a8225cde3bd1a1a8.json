{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\user\\\\UserTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport './yourProfile.scss';\nimport OrderOptions from './OrderOptions';\nimport moment from 'moment';\nimport { getUserOrdersListFromDB } from '../../utils/userUtils'; //מחזירה את ההזמנות של המשתמש\n\nimport { setUserByStorage, setCurrentAuctionByStorage, setNewAuctionByStorage } from '../../store/actions/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserTable = props => {\n  _s();\n\n  const columns = [{\n    id: 'name',\n    label: 'Name',\n    minWidth: 170,\n    align: 'left'\n  }, {\n    id: 'orderDate',\n    label: 'Order Date',\n    minWidth: 100,\n    align: 'left'\n  }, {\n    id: 'sum',\n    //\n    label: 'Sum',\n    //מה יהיה רשום\n    minWidth: 170,\n    align: 'left',\n    format: value => value.toLocaleString('en-US')\n  }, {\n    id: 'options',\n    label: 'Options',\n    minWidth: 170,\n    align: 'left',\n    format: value => value.toLocaleString('en-US')\n  }];\n\n  const createData = order => {\n    const options = /*#__PURE__*/_jsxDEV(OrderOptions, {\n      order: order\n    }, order._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }, this); //הכפתורים\n\n\n    const n = order.auctionId.organizationName + \" : \" + order.auctionId.name;\n    let d = moment(new Date(order.orderDate)).format('D/MM/YYYY');\n    let sum = order.amountToPay;\n    return {\n      name: n,\n      orderDate: d,\n      sum: sum,\n      options\n    };\n  };\n\n  useEffect(() => {\n    let id = localStorage.getItem(\"user\");\n\n    if (id && props.currentUser == null) {\n      // let a_id = localStorage.getItem(\"currentAuction\"); let n_a_id = localStorage.getItem(\"newAuction\");\n      // if (a_id) props.setCurrentAuctionByStorage(a_id);\n      // if (n_a_id) props.setNewAuctionByStorage(n_a_id);\n      props.setUserByStorage(id);\n    }\n  }, []);\n  useEffect(() => {\n    if (props.user) getUserOrdersListFromDB(props.user._id).then(succ => {\n      if (succ.status != 400) {\n        let arr = [];\n        succ.data.map(o => {\n          arr.push(createData(o));\n        });\n        console.log(succ.data);\n        setRows(arr);\n      }\n    });\n  }, [props.currentUser]);\n  const useStyles = makeStyles({\n    root: {\n      width: '80%',\n      marginBottom: '15vh'\n    },\n    container: {\n      maxHeight: 440\n    }\n  });\n  const [rows, setRows] = useState([]);\n  const classes = useStyles();\n  const style1 = {\n    marginTop: '4vh'\n  };\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      style: style1,\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: column.align,\n                style: {\n                  minWidth: column.minWidth\n                },\n                children: column.label\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows && rows.length && rows.map(row => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                tabIndex: -1,\n                children: columns.map(column => {\n                  const value = row[column.id];\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: column.align,\n                    children: value\n                  }, column.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, row.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserTable, \"5OmlkolXsbkErlnTPzmelu3vzp0=\", true);\n\n_c = UserTable;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.currentUser,\n    orders: state.user.ordersList,\n    currentUser: state.user.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setNewAuctionByStorage,\n  setCurrentAuctionByStorage,\n  setUserByStorage\n})(UserTable);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/user/UserTable.js"],"names":["React","useEffect","useState","connect","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","OrderOptions","moment","getUserOrdersListFromDB","setUserByStorage","setCurrentAuctionByStorage","setNewAuctionByStorage","UserTable","props","columns","id","label","minWidth","align","format","value","toLocaleString","createData","order","options","_id","n","auctionId","organizationName","name","d","Date","orderDate","sum","amountToPay","localStorage","getItem","currentUser","user","then","succ","status","arr","data","map","o","push","console","log","setRows","useStyles","root","width","marginBottom","container","maxHeight","rows","classes","style1","marginTop","column","length","row","code","mapStateToProps","state","orders","ordersList"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport './yourProfile.scss'\r\nimport OrderOptions from './OrderOptions';\r\nimport moment from 'moment'\r\nimport { getUserOrdersListFromDB } from '../../utils/userUtils'//מחזירה את ההזמנות של המשתמש\r\nimport { setUserByStorage, setCurrentAuctionByStorage, setNewAuctionByStorage } from '../../store/actions/user';\r\n\r\nconst UserTable = (props) => {\r\n    const columns = [\r\n        {\r\n            id: 'name',\r\n            label: 'Name',\r\n            minWidth: 170,\r\n            align: 'left',\r\n\r\n        },\r\n        {\r\n            id: 'orderDate',\r\n            label: 'Order Date',\r\n            minWidth: 100,\r\n            align: 'left',\r\n\r\n        },\r\n        {\r\n            id: 'sum',//\r\n            label: 'Sum',//מה יהיה רשום\r\n            minWidth: 170,\r\n            align: 'left',\r\n            format: (value) => value.toLocaleString('en-US'),\r\n        },\r\n        {\r\n            id: 'options',\r\n            label: 'Options',\r\n            minWidth: 170,\r\n            align: 'left',\r\n            format: (value) => value.toLocaleString('en-US'),\r\n        }\r\n    ];\r\n\r\n    const createData = (order) => {\r\n        const options = <OrderOptions order={order} key={order._id} />;//הכפתורים\r\n        const n = order.auctionId.organizationName + \" : \" + order.auctionId.name;\r\n        let d = moment(new Date(order.orderDate)).format('D/MM/YYYY');\r\n        let sum = order.amountToPay;\r\n        return { name: n, orderDate: d, sum: sum, options };\r\n    }\r\n    useEffect(() => {\r\n        let id = localStorage.getItem(\"user\");\r\n\r\n        if (id && props.currentUser == null) {\r\n\r\n            // let a_id = localStorage.getItem(\"currentAuction\"); let n_a_id = localStorage.getItem(\"newAuction\");\r\n            // if (a_id) props.setCurrentAuctionByStorage(a_id);\r\n            // if (n_a_id) props.setNewAuctionByStorage(n_a_id);\r\n            props.setUserByStorage(id);\r\n        }\r\n\r\n\r\n    }, [])\r\n    useEffect(() => {\r\n        if (props.user)\r\n            getUserOrdersListFromDB(props.user._id).then(succ => {\r\n                if (succ.status != 400) {\r\n                    let arr = [];\r\n                    succ.data.map((o) => { arr.push(createData(o)) });\r\n                    console.log(succ.data);\r\n                    setRows(arr);\r\n                }\r\n            });\r\n    }, [props.currentUser])\r\n\r\n    const useStyles = makeStyles({\r\n        root: { width: '80%',marginBottom:'15vh' },\r\n        container: { maxHeight: 440, }\r\n    });\r\n\r\n    const [rows, setRows] = useState([]);\r\n\r\n    const classes = useStyles();\r\n    \r\n    const style1 = { marginTop: '4vh' }\r\n    return (\r\n        <center>\r\n           <h1>Your Orders</h1> \r\n            <Paper className={classes.root} style={style1}>\r\n                <TableContainer className={classes.container} >\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{ minWidth: column.minWidth }}\r\n                                    >\r\n                                        {column.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows && rows.length && rows.map((row) => {\r\n                                return (\r\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                        {columns.map((column) => {\r\n\r\n                                            const value = row[column.id];\r\n                                            return (\r\n                                                <TableCell key={column.id} align={column.align}>\r\n                                                    {value}\r\n                                                </TableCell>\r\n                                            );\r\n                                        })}\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Paper>\r\n        </center>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.currentUser,\r\n        orders: state.user.ordersList,\r\n        currentUser: state.user.currentUser\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { setNewAuctionByStorage, setCurrentAuctionByStorage, setUserByStorage })(UserTable);\r\n"]},"metadata":{},"sourceType":"module"}