{"ast":null,"code":"import merge, { isMergeObj } from \"./merge\";\n/**\n * does deep clone to the passed object, returning a new object\n * @param obj\n * @param mergeFn the merge function to use (default: utils/merge)\n * @returns {Object}\n */\n\nexport default ((obj, mergeFn = merge) => isMergeObj(obj) ? mergeFn(Array.isArray(obj) ? [] : {}, obj) : obj);","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/project-good/project/client/node_modules/@rpldy/shared/lib/esm/utils/clone.js"],"names":["merge","isMergeObj","obj","mergeFn","Array","isArray"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,SAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,gBAAgB,CAACC,GAAD,EAAMC,OAAO,GAAGH,KAAhB,KAA0BC,UAAU,CAACC,GAAD,CAAV,GAAkBC,OAAO,CAACC,KAAK,CAACC,OAAN,CAAcH,GAAd,IAAqB,EAArB,GAA0B,EAA3B,EAA+BA,GAA/B,CAAzB,GAA+DA,GAAzG","sourcesContent":["import merge, { isMergeObj } from \"./merge\";\n\n/**\n * does deep clone to the passed object, returning a new object\n * @param obj\n * @param mergeFn the merge function to use (default: utils/merge)\n * @returns {Object}\n */\nexport default ((obj, mergeFn = merge) => isMergeObj(obj) ? mergeFn(Array.isArray(obj) ? [] : {}, obj) : obj);"]},"metadata":{},"sourceType":"module"}