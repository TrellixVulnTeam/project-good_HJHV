{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\auction\\\\PaymentForm.js\",\n    _s = $RefreshSig$();\n\nimport './Cart.scss';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentForm = props => {\n  _s();\n\n  const amountToPay = () => {\n    let sum = 0;\n\n    if (props.user) {\n      if (props.user.shoppingCartOfCurrentAuction.length == 0) return 0;\n      props.user.shoppingCartOfCurrentAuction.map(item => {\n        sum += item.qty * item.productId.price;\n      });\n    }\n\n    return sum;\n  };\n\n  useEffect(() => {\n    let id = localStorage.getItem(\"user\");\n\n    if (id && props.currentUser == null) {\n      let a_id = localStorage.getItem(\"currentAuction\");\n      if (a_id) props.setCurrentAuctionByStorage(a_id);\n      props.setUserByStorage(id);\n    }\n  }, []);\n  useEffect(() => {\n    if (props.currentUser) getProductsInCartByAuctionIdFromDB(props.user.currentUser._id, props.currentAuction._id).then(succ => {\n      if (succ.status != 400) {\n        props.updateShoppingCart(succ.data);\n      }\n    });\n  }, [props.currentUser]);\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"#262b96\"\n      },\n      children: [\"Amount to pay: \", amountToPay(), \"$\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n      options: {\n        \"client-id\": \"test\"\n      },\n      children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n        style: {\n          layout: \"horizontal\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 13\n  }, this);\n};\n\n_s(PaymentForm, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n\n_c = PaymentForm;\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.user.currentUser,\n    currentAuction: state.currentAuction.currentAuction,\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps, {})(PaymentForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/auction/PaymentForm.js"],"names":["React","useState","useEffect","connect","PayPalScriptProvider","PayPalButtons","PaymentForm","props","amountToPay","sum","user","shoppingCartOfCurrentAuction","length","map","item","qty","productId","price","id","localStorage","getItem","currentUser","a_id","setCurrentAuctionByStorage","setUserByStorage","getProductsInCartByAuctionIdFromDB","_id","currentAuction","then","succ","status","updateShoppingCart","data","color","layout","mapStateToProps","state"],"mappings":";;;AAAA,OAAO,aAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,EAA+BC,aAA/B,QAAoD,yBAApD;;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAMC,WAAW,GAAG,MAAM;AACtB,QAAIC,GAAG,GAAG,CAAV;;AACA,QAAIF,KAAK,CAACG,IAAV,EAAgB;AACZ,UAAIH,KAAK,CAACG,IAAN,CAAWC,4BAAX,CAAwCC,MAAxC,IAAkD,CAAtD,EAAyD,OAAO,CAAP;AACzDL,MAAAA,KAAK,CAACG,IAAN,CAAWC,4BAAX,CAAwCE,GAAxC,CAA6CC,IAAD,IAAU;AAAEL,QAAAA,GAAG,IAAIK,IAAI,CAACC,GAAL,GAAWD,IAAI,CAACE,SAAL,CAAeC,KAAjC;AAAwC,OAAhG;AACH;;AACD,WAAOR,GAAP;AACH,GAPD;;AAQAP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgB,EAAE,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAT;;AACA,QAAIF,EAAE,IAAIX,KAAK,CAACc,WAAN,IAAqB,IAA/B,EAAqC;AACjC,UAAIC,IAAI,GAAGH,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX;AACA,UAAIE,IAAJ,EAAUf,KAAK,CAACgB,0BAAN,CAAiCD,IAAjC;AACVf,MAAAA,KAAK,CAACiB,gBAAN,CAAuBN,EAAvB;AACH;AACJ,GAPQ,EAON,EAPM,CAAT;AAUAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,KAAK,CAACc,WAAV,EAAuBI,kCAAkC,CAAClB,KAAK,CAACG,IAAN,CAAWW,WAAX,CAAuBK,GAAxB,EAA6BnB,KAAK,CAACoB,cAAN,CAAqBD,GAAlD,CAAlC,CAAyFE,IAAzF,CAA8FC,IAAI,IAAI;AACzH,UAAIA,IAAI,CAACC,MAAL,IAAe,GAAnB,EAAwB;AAAEvB,QAAAA,KAAK,CAACwB,kBAAN,CAAyBF,IAAI,CAACG,IAA9B;AAAsC;AACnE,KAFsB;AAG1B,GAJQ,EAIN,CAACzB,KAAK,CAACc,WAAP,CAJM,CAAT;AAMA,sBAAQ;AAAA,4BACJ;AAAI,MAAA,KAAK,EAAE;AAAEY,QAAAA,KAAK,EAAE;AAAT,OAAX;AAAA,oCAAiDzB,WAAW,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,eAEJ,QAAC,oBAAD;AAAsB,MAAA,OAAO,EAAE;AAAE,qBAAa;AAAf,OAA/B;AAAA,6BACI,QAAC,aAAD;AAAe,QAAA,KAAK,EAAE;AAAE0B,UAAAA,MAAM,EAAE;AAAV;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFI;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAOH,CAjCD;;GAAM5B,W;;KAAAA,W;;AAmCN,MAAM6B,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHf,IAAAA,WAAW,EAAEe,KAAK,CAAC1B,IAAN,CAAWW,WADrB;AAEHM,IAAAA,cAAc,EAAES,KAAK,CAACT,cAAN,CAAqBA,cAFlC;AAGHjB,IAAAA,IAAI,EAAE0B,KAAK,CAAC1B;AAHT,GAAP;AAKH,CAND;;AAOA,eAAeP,OAAO,CAACgC,eAAD,EAAkB,EAAlB,CAAP,CAA6B7B,WAA7B,CAAf","sourcesContent":["import './Cart.scss';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\n\r\n\r\nconst PaymentForm = (props) => {\r\n\r\n    const amountToPay = () => {\r\n        let sum = 0;\r\n        if (props.user) {\r\n            if (props.user.shoppingCartOfCurrentAuction.length == 0) return 0;\r\n            props.user.shoppingCartOfCurrentAuction.map((item) => { sum += item.qty * item.productId.price });\r\n        }\r\n        return sum;\r\n    }\r\n    useEffect(() => {\r\n        let id = localStorage.getItem(\"user\");\r\n        if (id && props.currentUser == null) {\r\n            let a_id = localStorage.getItem(\"currentAuction\");\r\n            if (a_id) props.setCurrentAuctionByStorage(a_id);\r\n            props.setUserByStorage(id);\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.currentUser) getProductsInCartByAuctionIdFromDB(props.user.currentUser._id, props.currentAuction._id).then(succ => {\r\n            if (succ.status != 400) { props.updateShoppingCart(succ.data); }\r\n        })\r\n    }, [props.currentUser])\r\n\r\n    return (<center>\r\n        <h1 style={{ color: \"#262b96\" }}>Amount to pay: {amountToPay()}$</h1>\r\n        <PayPalScriptProvider options={{ \"client-id\": \"test\" }}>\r\n            <PayPalButtons style={{ layout: \"horizontal\" }} />\r\n        </PayPalScriptProvider>\r\n    </center>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentUser: state.user.currentUser,\r\n        currentAuction: state.currentAuction.currentAuction,\r\n        user: state.user,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {})(PaymentForm);\r\n\r\n"]},"metadata":{},"sourceType":"module"}