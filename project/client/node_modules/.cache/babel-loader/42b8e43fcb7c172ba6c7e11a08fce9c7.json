{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\new auction\\\\OrganizationInformation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { setNewAuction } from '../../store/actions/newAuction';\nimport { saveOrganizationInformationInDB } from '../../utils/newAuctionUtils';\nimport { connect } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { TextField } from \"@mui/material\";\nimport './NewAuction.scss';\nimport Button from '@mui/material/Button';\nimport { makeStyles } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport axios from 'axios';\nimport uploadImg from '../../img/upload.png';\nimport { setUserByStorage, setCurrentAuctionByStorage, setNewAuctionByStorage } from '../../store/actions/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrganizationInformation = props => {\n  _s();\n\n  useEffect(() => {\n    let id = localStorage.getItem(\"user\");\n\n    if (id && props.currentUser == null) {\n      let n_a_id = localStorage.getItem(\"newAuction\");\n      if (n_a_id) props.setNewAuctionByStorage(n_a_id);\n      props.setUserByStorage(id);\n    }\n  }, []);\n  useEffect(() => {\n    return () => {\n      let details = {};\n      details.organizationName = organizationName;\n      details.organizationText = organizationText;\n      details.organizationPhotos = [];\n      details.logo = imagePath;\n      saveOrganizationInformationInDB(props.auctionId, details).then(succ => {\n        if (succ.status != 400) props.setNewAuction(succ.data);\n      });\n    };\n  }, []);\n  const [imagePath, setImagePath] = useState(props.auction.logo);\n\n  const onChangeHandler = event => {\n    const data = new FormData();\n    data.append('file', event.target.files[0]);\n    axios.post(\"http://localhost:5000/upload\", data, {// receive two parameter endpoint url ,form data \n    }).then(res => {\n      // then print response status\n      console.log(res);\n      setImagePath(\"http://localhost:5000/images/\" + res.data.filename);\n    });\n  };\n\n  const [organizationName, setOrganizationName] = useState(props.auction.organizationName || \"\");\n  const [organizationText, setOrganizationText] = useState(props.auction.organizationText || \"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '3vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit(submit),\n      id: \"myForm\",\n      style: {\n        display: 'inline-block',\n        width: '40%',\n        minHeight: '60%',\n        padding: '2vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: \"txt\",\n          variant: \"standard\",\n          defaultValue: props.auction.organizationName,\n          ...register('organizationName', {\n            required: false\n          }),\n          id: \"input-with-icon-grid\",\n          label: \"Organization Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"txt\",\n          multiline: true,\n          variant: \"standard\",\n          defaultValue: props.auction.organizationText,\n          ...register('organizationText', {\n            required: false\n          }),\n          id: \"input-with-icon-grid\",\n          label: \"Organization Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          display: \"none\"\n        },\n        id: \"contained-button-file\",\n        accept: \"image/*\",\n        type: \"file\",\n        onChange: onChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"contained-button-file\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          component: \"span\",\n          children: \"Upload organization's logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"positive ui button\",\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imagePath || uploadImg,\n      style: {\n        width: 'auto',\n        height: 'auto',\n        maxHeight: '50vh',\n        maxWidth: '30vw',\n        minHeight: '40vh',\n        minWidth: '24vw',\n        display: 'inline-block',\n        marginLeft: '10vw'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 13\n  }, this);\n};\n\n_s(OrganizationInformation, \"JnuOokA+m/3umsSwo1vLV4/lpQs=\");\n\n_c = OrganizationInformation;\n\nconst mapStateToProps = state => {\n  return {\n    auctionId: state.auction.newAuction._id,\n    auction: state.auction.newAuction,\n    currentUser: state.user.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setNewAuction,\n  setUserByStorage,\n  setCurrentAuctionByStorage,\n  setNewAuctionByStorage\n})(OrganizationInformation);\n\nvar _c;\n\n$RefreshReg$(_c, \"OrganizationInformation\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/new auction/OrganizationInformation.js"],"names":["React","useEffect","useState","setNewAuction","saveOrganizationInformationInDB","connect","useForm","TextField","Button","makeStyles","IconButton","axios","uploadImg","setUserByStorage","setCurrentAuctionByStorage","setNewAuctionByStorage","OrganizationInformation","props","id","localStorage","getItem","currentUser","n_a_id","details","organizationName","organizationText","organizationPhotos","logo","imagePath","auctionId","then","succ","status","data","setImagePath","auction","onChangeHandler","event","FormData","append","target","files","post","res","console","log","filename","setOrganizationName","setOrganizationText","marginTop","handleSubmit","submit","display","width","minHeight","padding","register","required","height","maxHeight","maxWidth","minWidth","marginLeft","mapStateToProps","state","newAuction","_id","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { setNewAuction } from '../../store/actions/newAuction';\r\nimport { saveOrganizationInformationInDB } from '../../utils/newAuctionUtils';\r\nimport { connect } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { TextField } from \"@mui/material\";\r\nimport './NewAuction.scss'\r\nimport Button from '@mui/material/Button';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport axios from 'axios';\r\nimport uploadImg from '../../img/upload.png'\r\nimport { setUserByStorage, setCurrentAuctionByStorage, setNewAuctionByStorage } from '../../store/actions/user';\r\nconst OrganizationInformation = (props) => {\r\n\r\n    useEffect(() => {\r\n        let id = localStorage.getItem(\"user\");\r\n\r\n        if (id && props.currentUser == null) {\r\n            let n_a_id = localStorage.getItem(\"newAuction\");\r\n            if (n_a_id) props.setNewAuctionByStorage(n_a_id);\r\n            props.setUserByStorage(id);\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            let details = {};\r\n            details.organizationName = organizationName;\r\n            details.organizationText = organizationText;\r\n            details.organizationPhotos = [];\r\n            details.logo = imagePath;\r\n\r\n            saveOrganizationInformationInDB(props.auctionId, details).then(succ => {\r\n                if (succ.status != 400) props.setNewAuction(succ.data)\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    const [imagePath, setImagePath] = useState(props.auction.logo);\r\n    const onChangeHandler = event => {\r\n        const data = new FormData()\r\n        data.append('file', event.target.files[0]);\r\n        axios.post(\"http://localhost:5000/upload\", data, { // receive two parameter endpoint url ,form data \r\n        }).then(res => { // then print response status\r\n            console.log(res);\r\n            setImagePath(\"http://localhost:5000/images/\" + res.data.filename);\r\n        })\r\n    }\r\n\r\n    const [organizationName, setOrganizationName] = useState(props.auction.organizationName || \"\");\r\n    const [organizationText, setOrganizationText] = useState(props.auction.organizationText || \"\");\r\n\r\n    return (<div style={{ marginTop: '3vh' }}>\r\n        <form noValidate autoComplete=\"off\" onSubmit={handleSubmit(submit)} id=\"myForm\" style={{ display: 'inline-block', width: '40%', minHeight: '60%', padding: '2vh' }} >\r\n            <div className={\"form-container\"}>\r\n                <TextField className=\"txt\" variant=\"standard\" defaultValue={props.auction.organizationName} {...register('organizationName', { required: false })} id=\"input-with-icon-grid\" label=\"Organization Name\" />\r\n                <TextField\r\n                    className=\"txt\"\r\n                    multiline\r\n                    variant=\"standard\"\r\n                    defaultValue={props.auction.organizationText}\r\n                    {...register('organizationText', { required: false })}\r\n                    id=\"input-with-icon-grid\"\r\n                    label=\"Organization Text\" />\r\n            </div>\r\n\r\n            {/* <label>Upload photos of the organization</label> */}{/* TODO */}\r\n            <br />\r\n\r\n            <input style={{ display: \"none\" }} id=\"contained-button-file\" accept=\"image/*\" type=\"file\" onChange={onChangeHandler} />\r\n            <label htmlFor=\"contained-button-file\">\r\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">Upload organization's logo</Button>\r\n            </label>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n\r\n\r\n            <button className=\"positive ui button\" type=\"submit\">Save</button>\r\n        </form >\r\n\r\n        <img src={imagePath || uploadImg} style={{ width: 'auto', height: 'auto', maxHeight: '50vh', maxWidth: '30vw', minHeight: '40vh', minWidth: '24vw', display: 'inline-block', marginLeft: '10vw' }} />\r\n    </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auctionId: state.auction.newAuction._id,\r\n        auction: state.auction.newAuction,\r\n        currentUser: state.user.currentUser\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { setNewAuction, setUserByStorage, setCurrentAuctionByStorage, setNewAuctionByStorage })(OrganizationInformation);"]},"metadata":{},"sourceType":"module"}