{"ast":null,"code":"const setHeaders = (req, headers) => {\n  if (headers) {\n    Object.keys(headers).forEach(name => {\n      if (headers[name] !== undefined) {\n        req.setRequestHeader(name, headers[name]);\n      }\n    });\n  }\n};\n\nconst request = (url, data, options = {}) => {\n  const req = new XMLHttpRequest();\n  const pXhr = new Promise((resolve, reject) => {\n    req.onerror = () => reject(req);\n\n    req.ontimeout = () => reject(req);\n\n    req.onabort = () => reject(req);\n\n    req.onload = () => resolve(req);\n\n    req.open(options.method || \"GET\", url);\n    setHeaders(req, options.headers);\n    req.withCredentials = !!options.withCredentials;\n\n    if (options.preSend) {\n      options.preSend(req);\n    }\n\n    req.send(data);\n  }); // $FlowFixMe - adding xhr to Promise\n\n  pXhr.xhr = req;\n  return pXhr;\n};\n\nexport default request;","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/project-good/project/client/node_modules/@rpldy/shared/lib/esm/request/request.js"],"names":["setHeaders","req","headers","Object","keys","forEach","name","undefined","setRequestHeader","request","url","data","options","XMLHttpRequest","pXhr","Promise","resolve","reject","onerror","ontimeout","onabort","onload","open","method","withCredentials","preSend","send","xhr"],"mappings":"AAAA,MAAMA,UAAU,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAkB;AACnC,MAAIA,OAAJ,EAAa;AACXC,IAAAA,MAAM,CAACC,IAAP,CAAYF,OAAZ,EAAqBG,OAArB,CAA6BC,IAAI,IAAI;AACnC,UAAIJ,OAAO,CAACI,IAAD,CAAP,KAAkBC,SAAtB,EAAiC;AAC/BN,QAAAA,GAAG,CAACO,gBAAJ,CAAqBF,IAArB,EAA2BJ,OAAO,CAACI,IAAD,CAAlC;AACD;AACF,KAJD;AAKD;AACF,CARD;;AAUA,MAAMG,OAAO,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,OAAO,GAAG,EAAtB,KAA6B;AAC3C,QAAMX,GAAG,GAAG,IAAIY,cAAJ,EAAZ;AACA,QAAMC,IAAI,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC5ChB,IAAAA,GAAG,CAACiB,OAAJ,GAAc,MAAMD,MAAM,CAAChB,GAAD,CAA1B;;AAEAA,IAAAA,GAAG,CAACkB,SAAJ,GAAgB,MAAMF,MAAM,CAAChB,GAAD,CAA5B;;AAEAA,IAAAA,GAAG,CAACmB,OAAJ,GAAc,MAAMH,MAAM,CAAChB,GAAD,CAA1B;;AAEAA,IAAAA,GAAG,CAACoB,MAAJ,GAAa,MAAML,OAAO,CAACf,GAAD,CAA1B;;AAEAA,IAAAA,GAAG,CAACqB,IAAJ,CAASV,OAAO,CAACW,MAAR,IAAkB,KAA3B,EAAkCb,GAAlC;AACAV,IAAAA,UAAU,CAACC,GAAD,EAAMW,OAAO,CAACV,OAAd,CAAV;AACAD,IAAAA,GAAG,CAACuB,eAAJ,GAAsB,CAAC,CAACZ,OAAO,CAACY,eAAhC;;AAEA,QAAIZ,OAAO,CAACa,OAAZ,EAAqB;AACnBb,MAAAA,OAAO,CAACa,OAAR,CAAgBxB,GAAhB;AACD;;AAEDA,IAAAA,GAAG,CAACyB,IAAJ,CAASf,IAAT;AACD,GAlBY,CAAb,CAF2C,CAoBvC;;AAEJG,EAAAA,IAAI,CAACa,GAAL,GAAW1B,GAAX;AACA,SAAOa,IAAP;AACD,CAxBD;;AA0BA,eAAeL,OAAf","sourcesContent":["const setHeaders = (req, headers) => {\n  if (headers) {\n    Object.keys(headers).forEach(name => {\n      if (headers[name] !== undefined) {\n        req.setRequestHeader(name, headers[name]);\n      }\n    });\n  }\n};\n\nconst request = (url, data, options = {}) => {\n  const req = new XMLHttpRequest();\n  const pXhr = new Promise((resolve, reject) => {\n    req.onerror = () => reject(req);\n\n    req.ontimeout = () => reject(req);\n\n    req.onabort = () => reject(req);\n\n    req.onload = () => resolve(req);\n\n    req.open(options.method || \"GET\", url);\n    setHeaders(req, options.headers);\n    req.withCredentials = !!options.withCredentials;\n\n    if (options.preSend) {\n      options.preSend(req);\n    }\n\n    req.send(data);\n  }); // $FlowFixMe - adding xhr to Promise\n\n  pXhr.xhr = req;\n  return pXhr;\n};\n\nexport default request;"]},"metadata":{},"sourceType":"module"}