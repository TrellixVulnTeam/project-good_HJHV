{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\new auction\\\\uploading products\\\\AddProductForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { addProductToDB } from \"../../../utils/newAuctionUtils\";\nimport { connect } from \"react-redux\";\nimport { signIn, loginGoogle } from '../../../store/actions/signIn';\nimport { addProduct } from '../../../store/actions/newAuction';\nimport { useForm } from \"react-hook-form\";\nimport Checkbox from '@mui/material/Checkbox';\nimport { TextField } from \"@mui/material\";\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { LoginFromStorage, GetDataFromStorage } from '../../../store/actions/home';\nimport IconButton from '@mui/material/IconButton';\nimport Grid from '@mui/material/Grid';\nimport { styled } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = styled('input')({\n  display: 'none'\n});\n\nconst AddProductForm = props => {\n  _s();\n\n  let submit = (data, e) => {\n    e.preventDefault();\n    newProduct.name = data.name;\n    newProduct.description = data.description;\n    newProduct.price = data.price;\n    newProduct.includedInPackages = data.includedInPackages;\n    newProduct.image = data.image;\n    addProductToDB(props.auctionId, newProduct).then(succ => {\n      if (succ.status != 400) props.addProduct(succ.data);\n    });\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  let newProduct = {\n    img: null,\n    name: \"\",\n    description: \"\",\n    price: 0,\n    includedInPackages: true\n  };\n  useEffect(() => {\n    if (props.currentUser == null) LoginFromStorage();\n    if (props.newAuction == null) GetDataFromStorage();\n  }, []);\n  const Input = styled('input')({\n    display: 'none'\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    rowSpacing: 1,\n    columnSpacing: {\n      xs: 1,\n      sm: 2,\n      md: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit(submit),\n      style: {\n        width: '50vw'\n      },\n      rows: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: \"txt\",\n          variant: \"standard\",\n          ...register('name', {\n            required: true\n          }),\n          id: \"input-with-icon-grid\",\n          label: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"txt\",\n          type: \"number\",\n          variant: \"standard\",\n          ...register('price', {\n            required: true\n          }),\n          id: \"input-with-icon-grid\",\n          label: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            defaultChecked: true,\n            ...register('includedInPackages'),\n            id: \"input-with-icon-grid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 48\n          }, this),\n          label: \"Included in packages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          xs: 6,\n          label: \"Description\",\n          multiline: true,\n          rows: 2,\n          rowsMax: 4,\n          variant: \"standard\",\n          ...register('description'),\n          id: \"input-with-icon-grid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), \"            \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"contained-button-file\",\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            accept: \"image/*\",\n            id: \"contained-button-file\",\n            multiple: true,\n            type: \"file\",\n            ...register('image')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            component: \"span\",\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"positive ui button\",\n          type: \"submit\",\n          children: \" Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddProductForm, \"Dz9qqMtz6KrwDRD7suTExSgyaPc=\", false, function () {\n  return [useForm];\n});\n\n_c = AddProductForm;\n\nconst mapStateToProps = state => {\n  return {\n    auctionId: state.auction.newAuction._id,\n    arr: state.auction.newAuction.productList,\n    newAuction: state.auction.newAuction\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addProduct,\n  signIn,\n  loginGoogle\n})(AddProductForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProductForm\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/new auction/uploading products/AddProductForm.js"],"names":["React","useRef","useState","useEffect","addProductToDB","connect","signIn","loginGoogle","addProduct","useForm","Checkbox","TextField","FormControlLabel","LoginFromStorage","GetDataFromStorage","IconButton","Grid","styled","Button","Input","display","AddProductForm","props","submit","data","e","preventDefault","newProduct","name","description","price","includedInPackages","image","auctionId","then","succ","status","register","handleSubmit","formState","errors","img","currentUser","newAuction","xs","sm","md","width","required","mapStateToProps","state","auction","_id","arr","productList"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { addProductToDB } from \"../../../utils/newAuctionUtils\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn, loginGoogle } from '../../../store/actions/signIn';\r\nimport { addProduct } from '../../../store/actions/newAuction';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { TextField } from \"@mui/material\";\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport { LoginFromStorage, GetDataFromStorage } from '../../../store/actions/home';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst Input = styled('input')({\r\n    display: 'none',\r\n});\r\n\r\nconst AddProductForm = (props) => {\r\n\r\n    let submit = (data, e) => {\r\n        e.preventDefault();\r\n\r\n        newProduct.name = data.name;\r\n        newProduct.description = data.description;\r\n        newProduct.price = data.price;\r\n        newProduct.includedInPackages = data.includedInPackages;\r\n        newProduct.image = data.image;\r\n\r\n        addProductToDB(props.auctionId, newProduct).then(succ => { if (succ.status != 400) props.addProduct(succ.data); })\r\n\r\n    }\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n\r\n    let newProduct = { img: null, name: \"\", description: \"\", price: 0, includedInPackages: true };\r\n    useEffect(() => {\r\n        if (props.currentUser == null) LoginFromStorage();\r\n        if (props.newAuction == null) GetDataFromStorage();\r\n    }, [])\r\n    const Input = styled('input')({\r\n        display: 'none',\r\n    });\r\n\r\n    return (\r\n        <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\r\n            <form noValidate autoComplete=\"off\" onSubmit={handleSubmit(submit)} style={{ width: '50vw' }} rows={2}>\r\n                <Grid item xs={6}>\r\n                    <TextField className=\"txt\" variant=\"standard\"  {...register('name', { required: true })} id=\"input-with-icon-grid\" label=\"Name\" />  </Grid>\r\n                <Grid item xs={6}>\r\n                    <TextField className=\"txt\" type=\"number\" variant=\"standard\"{...register('price', { required: true })} id=\"input-with-icon-grid\" label=\"Price\" />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <FormControlLabel control={<Checkbox defaultChecked {...register('includedInPackages')} id=\"input-with-icon-grid\" />}\r\n                        label=\"Included in packages\" />  </Grid>\r\n                <Grid item xs={6}>\r\n\r\n                    <TextField xs={6}\r\n                        label=\"Description\"\r\n                        multiline\r\n                        rows={2}\r\n                        rowsMax={4}\r\n                        variant=\"standard\"\r\n                        {...register('description')}\r\n                        id=\"input-with-icon-grid\"\r\n                    />            </Grid>\r\n                <Grid item xs={6}>\r\n                    <label htmlFor=\"contained-button-file\" xs={6}>\r\n                        <Input accept=\"image/*\" id=\"contained-button-file\" multiple type=\"file\" {...register('image')} />\r\n                        <Button variant=\"contained\" component=\"span\">Upload</Button>\r\n                    </label>\r\n\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <button className=\"positive ui button\" type=\"submit\"> Add</button>\r\n                </Grid>\r\n            </form>\r\n        </Grid>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auctionId: state.auction.newAuction._id,\r\n        arr: state.auction.newAuction.productList,\r\n        newAuction: state.auction.newAuction,\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { addProduct, signIn, loginGoogle })(AddProductForm);\r\n"]},"metadata":{},"sourceType":"module"}