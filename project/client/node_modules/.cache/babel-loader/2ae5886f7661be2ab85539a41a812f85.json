{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\user\\\\OrderDetails.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Popover from '@mui/material/Popover';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport { getWinnersList } from '../../utils/auctionUtils';\nimport { getAuctionIsDone } from '../../store/actions/auctionManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OrderDetails(props) {\n  _s();\n\n  const [anchorEl1, setAnchorEl1] = React.useState(null);\n\n  const handleClick1 = event => {\n    setAnchorEl1(event.currentTarget);\n  };\n\n  const handleClose1 = () => {\n    setAnchorEl1(null);\n  };\n\n  const open1 = Boolean(anchorEl1);\n  const id1 = open1 ? 'simple-popover' : undefined;\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      \"aria-describedby\": id1,\n      variant: \"contained\",\n      onClick: handleClick1,\n      children: \"View order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      id: id1,\n      open: open1,\n      anchorEl: anchorEl1,\n      onClose: handleClose1,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: props.item._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      \"aria-describedby\": id,\n      variant: \"contained\",\n      onClick: handleClick,\n      disabled: getAuctionIsDone(props.item.auctionId) === false,\n      children: \"Lottery results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      id: id,\n      open: open,\n      anchorEl: anchorEl,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          p: 2\n        },\n        children: getWinnersList(props.item.auctionId).then(succ => succ.data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrderDetails, \"DwadEPcTcp+g0TX3R0N1R84pM94=\");\n\n_c = OrderDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderDetails\");","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/project-good/project/client/src/components/user/OrderDetails.js"],"names":["React","Popover","Typography","Button","getWinnersList","getAuctionIsDone","OrderDetails","props","anchorEl1","setAnchorEl1","useState","handleClick1","event","currentTarget","handleClose1","open1","Boolean","id1","undefined","anchorEl","setAnchorEl","handleClick","handleClose","open","id","vertical","horizontal","p","item","_id","auctionId","then","succ","data"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Popover from '@mui/material/Popover';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport {getWinnersList} from '../../utils/auctionUtils'\r\nimport{getAuctionIsDone}from  '../../store/actions/auctionManager';\r\nexport default function OrderDetails(props) {\r\n  const [anchorEl1, setAnchorEl1] = React.useState(null);\r\n\r\n  const handleClick1 = (event) => {\r\n    setAnchorEl1(event.currentTarget);\r\n  };\r\n\r\n  const handleClose1 = () => {\r\n    setAnchorEl1(null);\r\n  };\r\n\r\n  const open1 = Boolean(anchorEl1);\r\n  const id1 = open1? 'simple-popover' : undefined;\r\n\r\n  \r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Button aria-describedby={id1} variant=\"contained\" onClick={handleClick1}>\r\n        View order\r\n      </Button> \r\n      <Popover\r\n        id={id1}\r\n        open={open1}\r\n        anchorEl={anchorEl1}\r\n        onClose={handleClose1}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n      >\r\n        <Typography sx={{ p: 2 }}><table>{props.item._id}</table></Typography>\r\n      </Popover>  \r\n      <Button aria-describedby={id} variant=\"contained\" onClick={handleClick} disabled={getAuctionIsDone(props.item.auctionId)===false}>\r\n      Lottery results \r\n      </Button>\r\n          <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n      >\r\n        <Typography sx={{ p: 2 }}>{getWinnersList(props.item.auctionId).then(succ=>succ.data)}</Typography>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}