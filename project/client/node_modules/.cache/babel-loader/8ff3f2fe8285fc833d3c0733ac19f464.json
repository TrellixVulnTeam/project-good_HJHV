{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\main\\\\Statistics.js\",\n    _s = $RefreshSig$();\n\nimport { connect } from \"react-redux\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { getHighestRevenueAuctionsFromDB, getTotalRevenueAllAuctionsFromDB } from '../../utils/mainUtils';\nimport StatisticsCard from \"./StatisticsCard\";\nimport './Statistics.scss';\nimport s from '../../img/statictis.jpg';\nimport { getBestSellingProductFromDB } from \"../../utils/mainUtils\"; //גם אם יש כמה מוצרים בעלי אותה כמות הזמנות, יחזור רק אחד מהם.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Statistics = props => {\n  _s();\n\n  const [highestRevenueAuctions, setHighestRevenueAuctions] = useState(null);\n  const [totalRevenueAllAuctions, setTotalRevenueAllAuctions] = useState([0]);\n  const [bestSellingProduct, setBestSellingProduct] = useState(null);\n  useEffect(() => {\n    getHighestRevenueAuctionsFromDB().then(succ => {\n      if (succ.status != 400) setHighestRevenueAuctions(succ.data);\n    });\n    getTotalRevenueAllAuctionsFromDB().then(succ => {\n      if (succ.status != 400) setTotalRevenueAllAuctions(succ.data);\n    });\n    getBestSellingProductFromDB().then(succ => {\n      if (succ.status != 400) setBestSellingProduct(succ.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"results-container\",\n      children: [bestSellingProduct && /*#__PURE__*/_jsxDEV(StatisticsCard, {\n        logo: bestSellingProduct.product.logo,\n        btn: true,\n        _id: bestSellingProduct.auction._id,\n        title: \"The product with the most orders: \" + bestSellingProduct.product.name,\n        content: \"Of all the products on the site, this product won the highest number of orders. The product has been ordered \" + bestSellingProduct.qty + \" times. This product is from the Chinese auction that \" + bestSellingProduct.auction.name + \".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(StatisticsCard, {\n        logo: s,\n        title: \"Total revenue all chienes auctions: \" + totalRevenueAllAuctions[0].total + \"₪\",\n        content: \"All proceeds from the purchase of the site's users in all Chinese auctions since the site was established.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), highestRevenueAuctions && highestRevenueAuctions.map(item => {\n        return /*#__PURE__*/_jsxDEV(StatisticsCard, {\n          btn: true,\n          _id: item.auctionId,\n          logo: item.logo,\n          title: item.auctionName + \": \" + item.total + \"₪\",\n          content: \"The Chinese auction that managed to get the most money. The chiense auction with the most revenue. From the purchases of the site's users\"\n        }, item.auctionId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 16\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Statistics, \"HiUOkvqiZrjmm6OO8Rn3fZTM7qg=\");\n\n_c = Statistics;\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nexport default connect(mapStateToProps, {})(Statistics);\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/main/Statistics.js"],"names":["connect","React","useEffect","useState","useRef","getHighestRevenueAuctionsFromDB","getTotalRevenueAllAuctionsFromDB","StatisticsCard","s","getBestSellingProductFromDB","Statistics","props","highestRevenueAuctions","setHighestRevenueAuctions","totalRevenueAllAuctions","setTotalRevenueAllAuctions","bestSellingProduct","setBestSellingProduct","then","succ","status","data","product","logo","auction","_id","name","qty","total","map","item","auctionId","auctionName","mapStateToProps","state"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { getHighestRevenueAuctionsFromDB, getTotalRevenueAllAuctionsFromDB } from '../../utils/mainUtils'\r\nimport StatisticsCard from \"./StatisticsCard\";\r\nimport './Statistics.scss'\r\nimport s from '../../img/statictis.jpg'\r\nimport { getBestSellingProductFromDB } from \"../../utils/mainUtils\";//גם אם יש כמה מוצרים בעלי אותה כמות הזמנות, יחזור רק אחד מהם.\r\n\r\n\r\nconst Statistics = (props) => {\r\n  const [highestRevenueAuctions, setHighestRevenueAuctions] = useState(null);\r\n  const [totalRevenueAllAuctions, setTotalRevenueAllAuctions] = useState([0]);\r\n  const [bestSellingProduct, setBestSellingProduct] = useState(null);\r\n  useEffect(() => {\r\n    getHighestRevenueAuctionsFromDB().then(succ => { if (succ.status != 400) setHighestRevenueAuctions(succ.data) })\r\n    getTotalRevenueAllAuctionsFromDB().then(succ => { if (succ.status != 400) setTotalRevenueAllAuctions(succ.data) })\r\n    getBestSellingProductFromDB().then(succ => { if (succ.status != 400) setBestSellingProduct(succ.data) })\r\n  }, [])\r\n  return (<>\r\n\r\n    <br />\r\n    <div id=\"results-container\">\r\n      {bestSellingProduct && <StatisticsCard\r\n        logo={bestSellingProduct.product.logo}\r\n        btn={true}\r\n        _id={bestSellingProduct.auction._id}\r\n        title=\r\n        {\"The product with the most orders: \" + bestSellingProduct.product.name}\r\n        content=\r\n        {\"Of all the products on the site, this product won the highest number of orders. The product has been ordered \" +\r\n          bestSellingProduct.qty +\r\n          \" times. This product is from the Chinese auction that \" +\r\n          bestSellingProduct.auction.name + \".\"} />\r\n      }\r\n\r\n      <StatisticsCard logo={s}\r\n        title={\"Total revenue all chienes auctions: \"\r\n          + totalRevenueAllAuctions[0].total + \"₪\"}\r\n        content={\"All proceeds from the purchase of the site's users in all Chinese auctions since the site was established.\"} />\r\n      {highestRevenueAuctions && highestRevenueAuctions.map(item => {\r\n        return <StatisticsCard\r\n          btn={true}\r\n          key={item.auctionId}\r\n          _id={item.auctionId}\r\n          logo={item.logo}\r\n          title={item.auctionName + \": \" + item.total + \"₪\"}\r\n          content={\"The Chinese auction that managed to get the most money. The chiense auction with the most revenue. From the purchases of the site's users\"} />\r\n      })}\r\n    </div>\r\n  </>);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {})(Statistics);\r\n"]},"metadata":{},"sourceType":"module"}