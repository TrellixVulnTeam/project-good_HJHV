{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\new auction\\\\uploading products\\\\AddProductForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { addProductToDB } from \"../../../utils/newAuctionUtils\";\nimport { connect } from \"react-redux\";\nimport { addProduct } from '../../../store/actions/newAuction';\nimport { useForm } from \"react-hook-form\";\nimport Checkbox from '@mui/material/Checkbox';\nimport { TextField } from \"@mui/material\";\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Grid from '@mui/material/Grid';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\nimport { makeStyles } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport '../NewAuction.scss';\nimport axios from 'axios';\nimport uploadImg from '../../../img/upload.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddProductForm = props => {\n  _s();\n\n  let submit = (data, e) => {\n    e.preventDefault();\n    let newProduct = {\n      image: \"\",\n      name: \"\",\n      description: \"\",\n      price: 0\n      /*, includedInPackages: true */\n\n    };\n    newProduct.name = data.name;\n    newProduct.description = data.description;\n    newProduct.price = parseInt(data.price); // newProduct.includedInPackages = data.includedInPackages;\n\n    newProduct.image = imagePath;\n    addProductToDB(props.auctionId, newProduct).then(succ => {\n      if (succ.status != 400) props.addProduct(succ.data);\n    });\n  };\n\n  const [imagePath, setImagePath] = useState(\"\");\n\n  const onChangeHandler = event => {\n    const data = new FormData();\n    data.append('file', event.target.files[0]);\n    axios.post(\"http://localhost:5000/upload\", data, {// receive two parameter endpoint url ,form data \n    }).then(res => {\n      // then print response status\n      console.log(res);\n      setImagePath(\"http://localhost:5000/images/\" + res.data.filename);\n    });\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    onSubmit: handleSubmit(submit),\n    id: \"add-product-form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"ccc\",\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexWrap: 'wrap',\n        flexDirection: 'column',\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: \"txt\",\n        variant: \"standard\",\n        ...register('name', {\n          required: true\n        }),\n        id: \"input-with-icon-grid\",\n        label: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"txt\",\n        type: \"number\",\n        variant: \"standard\",\n        ...register('price', {\n          required: true\n        }),\n        id: \"input-with-icon-grid\",\n        label: \"Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"txt\",\n        variant: \"standard\",\n        multiline: true,\n        ...register('description', {\n          required: false\n        }),\n        id: \"input-with-icon-grid\",\n        label: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          display: \"none\"\n        },\n        id: \"contained-button-file\",\n        accept: \"image/*\",\n        type: \"file\",\n        onChange: onChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"contained-button-file\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imagePath || uploadImg,\n          style: {\n            width: 'auto',\n            height: 'auto',\n            maxHeight: '25vh',\n            maxWidth: '15vw',\n            display: 'inline-block'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"fffff\", /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 1\n        }, this), \"                \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          width: '5vw',\n          flex: '1',\n          marginRight: 'auto',\n          marginLeft: 'auto'\n        },\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddProductForm, \"kySxGtDBa4HgudZlD68NgTBq/Go=\", false, function () {\n  return [useForm];\n});\n\n_c = AddProductForm;\n\nconst mapStateToProps = state => {\n  return {\n    auctionId: state.auction.newAuction._id,\n    arr: state.auction.newAuction.productList,\n    newAuction: state.auction.newAuction\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addProduct\n})(AddProductForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProductForm\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/new auction/uploading products/AddProductForm.js"],"names":["React","useRef","useState","useEffect","addProductToDB","connect","addProduct","useForm","Checkbox","TextField","FormControlLabel","Grid","styled","Box","Paper","Container","Button","makeStyles","IconButton","axios","uploadImg","AddProductForm","props","submit","data","e","preventDefault","newProduct","image","name","description","price","parseInt","imagePath","auctionId","then","succ","status","setImagePath","onChangeHandler","event","FormData","append","target","files","post","res","console","log","filename","register","handleSubmit","formState","errors","display","justifyContent","flexWrap","flexDirection","height","required","width","maxHeight","maxWidth","flex","marginRight","marginLeft","mapStateToProps","state","auction","newAuction","_id","arr","productList"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { addProductToDB } from \"../../../utils/newAuctionUtils\";\r\nimport { connect } from \"react-redux\";\r\nimport { addProduct } from '../../../store/actions/newAuction';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { TextField } from \"@mui/material\";\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Grid from '@mui/material/Grid';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Container from '@mui/material/Container';\r\nimport Button from '@mui/material/Button';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport '../NewAuction.scss'\r\nimport axios from 'axios';\r\nimport uploadImg from '../../../img/upload.png'\r\nconst AddProductForm = (props) => {\r\n\r\n    let submit = (data, e) => {\r\n        e.preventDefault();\r\n        let newProduct = { image: \"\", name: \"\", description: \"\", price: 0/*, includedInPackages: true */ };\r\n\r\n        newProduct.name = data.name;\r\n        newProduct.description = data.description;\r\n        newProduct.price = parseInt(data.price);\r\n        // newProduct.includedInPackages = data.includedInPackages;\r\n        newProduct.image = imagePath;\r\n\r\n        addProductToDB(props.auctionId, newProduct).then(succ => { if (succ.status != 400) props.addProduct(succ.data); })\r\n\r\n    }\r\n    const [imagePath, setImagePath] = useState(\"\");\r\n    const onChangeHandler = event => {\r\n        const data = new FormData()\r\n        data.append('file', event.target.files[0]);\r\n        axios.post(\"http://localhost:5000/upload\", data, { // receive two parameter endpoint url ,form data \r\n        }).then(res => { // then print response status\r\n            console.log(res);\r\n            setImagePath(\"http://localhost:5000/images/\" + res.data.filename);\r\n        })\r\n    }\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n\r\n    return (\r\n        <form autoComplete=\"off\" noValidate onSubmit={handleSubmit(submit)} id=\"add-product-form\">\r\n            <div id=\"ccc\" style={{ display: 'flex', justifyContent: 'space-around', flexWrap: 'wrap', flexDirection: 'column', height: '100%' }}>\r\n                <TextField className=\"txt\" variant=\"standard\" {...register('name', { required: true })} id=\"input-with-icon-grid\" label=\"Name\" />\r\n                <TextField className=\"txt\" type=\"number\" variant=\"standard\" {...register('price', { required: true })} id=\"input-with-icon-grid\" label=\"Price\" />\r\n                <TextField className=\"txt\" variant=\"standard\" multiline {...register('description', { required: false })} id=\"input-with-icon-grid\" label=\"Description\" />\r\n                <input style={{ display: \"none\" }} id=\"contained-button-file\" accept=\"image/*\" type=\"file\" onChange={onChangeHandler} />\r\n                <label htmlFor=\"contained-button-file\" >\r\n                    <img src={imagePath || uploadImg} style={{ width: 'auto', height: 'auto', maxHeight: '25vh', maxWidth: '15vw', display: 'inline-block' }} />\r\n                </label>\r\n                <div>fffff\r\n<button></button>                </div>\r\n\r\n\r\n                {/* <FormControlLabel\r\n                control={<Checkbox defaultChecked {...register('includedInPackages')} id=\"input-with-icon-grid\" />}\r\n                label=\"Included in packages\" />\r\n            <br /> */}\r\n\r\n                <button type=\"submit\" style={{ width: '5vw', flex: '1', marginRight: 'auto', marginLeft: 'auto' }}  >Add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auctionId: state.auction.newAuction._id,\r\n        arr: state.auction.newAuction.productList,\r\n        newAuction: state.auction.newAuction,\r\n    };\r\n}\r\nexport default connect(mapStateToProps, { addProduct })(AddProductForm);"]},"metadata":{},"sourceType":"module"}