{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-good\\\\project\\\\client\\\\src\\\\components\\\\main\\\\ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { Form, Input, TextArea, Button } from 'semantic-ui-react';\nimport './main.scss';\nimport Swal from 'sweetalert2';\nimport emailjs from 'emailjs-com';\nimport { setShowContactForm } from '../../store/actions/home';\nimport { useForm } from 'react-hook-form'; // import emailjs from 'emailjs-com';\n\nimport { ToastContainer, toast } from 'react-toastify'; // import 'react-toastify/dist/ReactToastify.min.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVICE_ID = \"service_2itn7f5\";\nconst TEMPLATE_ID = \"template_e5upbvj\";\nconst USER_ID = \"user_mLQkiwydyACg1oMa4TONi\";\n\nconst ContactForm = props => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const handleOnSubmit = async data => {\n    const {\n      name,\n      email,\n      subject,\n      message\n    } = data;\n\n    try {\n      const templateParams = {\n        name,\n        email,\n        subject,\n        message\n      };\n      await emailjs.send(SERVICE_ID, TEMPLATE_ID, templateParams, USER_ID);\n      reset();\n      toastifySuccess();\n    } catch (e) {\n      console.log(e);\n    } //         e.preventDefault();\n    //         emailjs.sendForm(SERVICE_ID, TEMPLATE_ID, e.target, USER_ID)\n    //             .then((result) => {\n    //                 console.log(result.text);\n    //                 Swal.fire({\n    //                     icon: 'success',\n    //                     title: 'Message Sent Successfully'\n    //                 })\n    //             }, (error) => {\n    //                 console.log(error.text);\n    //                 Swal.fire({\n    //                     icon: 'error',\n    //                     title: 'Ooops, something went wrong',\n    //                     text: error.text,\n    //                 })\n    //             });\n\n\n    props.setShowContactForm(false);\n    e.target.reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"contactDiv\",\n    children: [\"//             \", /*#__PURE__*/_jsxDEV(Form, {\n      id: \"contactForm\",\n      onSubmit: handleOnSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        id: \"form-input-control-email\",\n        control: Input,\n        label: \"Email\",\n        name: \"user_email\",\n        placeholder: \"Email\\u2026\",\n        required: true,\n        icon: \"mail\",\n        iconPosition: \"left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        id: \"form-input-control-last-name\",\n        control: Input,\n        label: \"Name\",\n        name: \"user_name\",\n        placeholder: \"Name\\u2026\",\n        required: true,\n        icon: \"user circle\",\n        iconPosition: \"left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        id: \"form-textarea-control-opinion\",\n        control: TextArea,\n        label: \"Message\",\n        name: \"user_message\",\n        placeholder: \"Message\\u2026\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        color: \"green\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactForm, \"Cq4nsBcfFXGKMJK/L8AH0edgYnU=\", false, function () {\n  return [useForm];\n});\n\n_c = ContactForm;\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nexport default connect(mapStateToProps, {\n  setShowContactForm\n})(ContactForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["D:/project-good/project/client/src/components/main/ContactForm.js"],"names":["React","connect","Form","Input","TextArea","Button","Swal","emailjs","setShowContactForm","useForm","ToastContainer","toast","SERVICE_ID","TEMPLATE_ID","USER_ID","ContactForm","props","register","handleSubmit","reset","formState","errors","handleOnSubmit","data","name","email","subject","message","templateParams","send","toastifySuccess","e","console","log","target","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Input, TextArea, Button } from 'semantic-ui-react';\r\nimport './main.scss';\r\nimport Swal from 'sweetalert2';\r\nimport emailjs from 'emailjs-com';\r\nimport { setShowContactForm } from '../../store/actions/home';\r\nimport { useForm } from 'react-hook-form';\r\n// import emailjs from 'emailjs-com';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n// import 'react-toastify/dist/ReactToastify.min.css';\r\nconst SERVICE_ID = \"service_2itn7f5\";\r\nconst TEMPLATE_ID = \"template_e5upbvj\";\r\nconst USER_ID = \"user_mLQkiwydyACg1oMa4TONi\";\r\n\r\n\r\nconst ContactForm = (props) => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        formState: { errors }\r\n    } = useForm();\r\n    const handleOnSubmit = async (data) => {\r\n\r\n        const { name, email, subject, message } = data;\r\n        try {\r\n            const templateParams = {\r\n                name,\r\n                email,\r\n                subject,\r\n                message\r\n            };\r\n\r\n            await emailjs.send(\r\n                SERVICE_ID,\r\n                TEMPLATE_ID,\r\n                templateParams,\r\n                USER_ID\r\n            );\r\n\r\n            reset();\r\n            toastifySuccess();\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n\r\n        //         e.preventDefault();\r\n        //         emailjs.sendForm(SERVICE_ID, TEMPLATE_ID, e.target, USER_ID)\r\n        //             .then((result) => {\r\n        //                 console.log(result.text);\r\n        //                 Swal.fire({\r\n        //                     icon: 'success',\r\n        //                     title: 'Message Sent Successfully'\r\n        //                 })\r\n        //             }, (error) => {\r\n        //                 console.log(error.text);\r\n        //                 Swal.fire({\r\n        //                     icon: 'error',\r\n        //                     title: 'Ooops, something went wrong',\r\n        //                     text: error.text,\r\n        //                 })\r\n        //             });\r\n        props.setShowContactForm(false);\r\n        e.target.reset()\r\n    };\r\n    return (\r\n\r\n\r\n\r\n\r\n\r\n        <div id='contactDiv'>\r\n\r\n//             {/* <form className=\"contact-form\" onSubmit={handleOnSubmit}>\r\n//       <input type=\"hidden\" name=\"contact_number\" />\r\n//       <label>Name</label>\r\n//       <input type=\"text\" name=\"from_name\" />\r\n//       <label>Email</label>\r\n//       <input type=\"email\" name=\"from_email\" />\r\n//       <label>Subject</label>\r\n//       <input type=\"text\" name=\"subject\" />\r\n//       <label>Message</label>\r\n//       <textarea name=\"html_message\" />\r\n//       <input type=\"submit\" value=\"Send\" />\r\n//     </form> */}\r\n\r\n\r\n            <Form id=\"contactForm\" onSubmit={handleOnSubmit}>\r\n                <Form.Field\r\n                    id='form-input-control-email'\r\n                    control={Input}\r\n                    label='Email'\r\n                    name='user_email'\r\n                    placeholder='Email…'\r\n                    required\r\n                    icon='mail'\r\n                    iconPosition='left'\r\n                />\r\n                <Form.Field\r\n                    id='form-input-control-last-name'\r\n                    control={Input}\r\n                    label='Name'\r\n                    name='user_name'\r\n                    placeholder='Name…'\r\n                    required\r\n                    icon='user circle'\r\n                    iconPosition='left'\r\n                />\r\n                <Form.Field\r\n                    id='form-textarea-control-opinion'\r\n                    control={TextArea}\r\n                    label='Message'\r\n                    name='user_message'\r\n                    placeholder='Message…'\r\n                    required\r\n                />\r\n                <Button type='submit' color='green'>Submit</Button>\r\n            </Form>\r\n        </div >\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { setShowContactForm })(ContactForm);\r\n"]},"metadata":{},"sourceType":"module"}